var view_path="views/",pcolor="#1C536F",_bimay_url="http://binusmaya.binus.ac.id",_bimay_api_url="http://apps.binusmaya.binus.ac.id",app=angular.module("BinusMaya",["ionic","listRoute","BinusMayaFactory"]).run(["$ionicPlatform","$rootScope","$ionicHistory","$ionicNavBarDelegate","BinusMaya","$timeout","$ionicPopup",function(t,e,n,a,o,i,r){e.login="undefined"==typeof localStorage.islogin?!1:localStorage.islogin,e.leftMenu=!1,e.profilePicture=!1,e.loginName="undefined"==typeof localStorage.fname?null:localStorage.fname.toLowerCase(),delete localStorage.cookie,delete localStorage.templogin,t.ready(function(){e.onLoadStyle={opacity:1},window.StatusBar&&StatusBar.styleDefault(),localStorage.islogin&&l()}),e.getLastUpdate=function(){e.lastUpdate="undefined"==typeof localStorage.lastUpdate?"Whatever":localStorage.lastUpdate},e.getLastUpdate(),e.logout=function(){r.confirm({title:"Confirm",template:"Are you sure to logout ?"}).then(function(t){return t?(localStorage.clear(),window.location.hash="#/",n.clearHistory(),a.showBackButton(!1),location.reload(),void 0):!1})};var l=function(){localStorage.profilePicture?e.profilePicture=localStorage.profilePicture:"undefined"==typeof httpclient||o.profilePicture().then(function(t){i(function(){localStorage.profilePicture=t,e.profilePicture=t})},function(){})};e.login?(localStorage.permission||(localStorage.permission=JSON.stringify({examScore:!0,absence:!0,finance:!0})),window.location.hash="/schedule"):window.location.hash="/"}]).config(["$ionicConfigProvider",function(t){t.views.forwardCache(!1),t.views.maxCache(0)}]);angular.module("BinusMayaFactory",[]).factory("BinusMaya",["$q","$ionicPopup",function(t,e){return{_bimay_url:"http://binusmaya.binus.ac.id",_bimay_api_url:"http://apps.binusmaya.binus.ac.id",headers:function(){var t=this;return{Cookie:localStorage.cookie?localStorage.cookie:null,Origin:t._bimay_url,Referer:t._bimay_url}},checkLogin:function(){var e=this,n=localStorage.loginId?JSON.parse(localStorage.loginId):!1;return t(function(t,a){if(localStorage.templogin===!0)t(!0);else{if(n!==!1)return e.api("/","get").then(function(t){200!==t.code&&a(t);var o={};return $($(t.result).serializeArray()).each(function(t,e){o[e.name]=e.value}),o.txtUserId=n.binusid,o.txtPassword=n.password,o.btnLogin="Log In ",e.api("/","post",o)},a).then(function(){localStorage.templogin=!0,t(!0)},a);a("please login")}})},api:function(e,n,a,o,i){var r=this,l={headers:r.headers()};return"undefined"!=typeof i&&(l.noRedirect=!0),"none"==navigator.connection.type?t(function(t,e){e("No internet connection")}):void 0===localStorage.cookie?r._getCookie().then(function(){return r.api(e,n,a)}):t(function(t,i){"get"===n?httpclient.get(o?e:r._bimay_url+e,function(e){t(e)},function(t){i(t)},l):httpclient.post(o?e:r._bimay_url+e,a,function(e){t(e)},function(t){i(t)},l)})},download:function(e,n){var a=this;return t(function(t,o){return a.api(a._bimay_api_url+"/LMS/"+e,"get",{},!0).then(function(t){var o={};return $($(t.result).serializeArray()).each(function(t,e){o[e.name]=e.value}),o[n+".x"]=1,o[n+".y"]=1,a.api(a._bimay_api_url+"/LMS/"+e,"post",o,!0,!0)},o).then(function(t){o(t)},function(e){302==e.code?t(e):o(e)})})},frame:function(e){var n=this,a="";return t(function(t,o){return n.api(e,"get").then(function(t){return n.api($(t.result).find("#ctl00_cp1_ifrApp").attr("src"),"get")},o).then(function(t){return a=$(t.result).find("#ifrApp").attr("src"),n.api(a,"get",{},!0)},o).then(function(e){t({url:a,result:e})},o)})},_getCookie:function(){var e=this;return t(function(t,n){httpclient.get(e._bimay_url,function(e){200==e.code?(localStorage.cookie=e.header["Set-Cookie"],t(!0)):n(e)},n)})},profilePicture:function(){var e=this;return t(function(t,n){e.checkLogin().then(function(){return e.frame("/")},n).then(function(a){var o=$(a.result.result).find("#ctl00_cpRight_ucPhoto_imgProfilePic").attr("src");httpclient.image(e._bimay_api_url+"/home/"+o,function(e){t("data:image/jpeg;base64,"+e.result.replace(/(\r\n|\n|\r)/gm,""))},n,{headers:e.headers()})},n)})},promptPassword:function(n,a,o){a.promptPass={};var i=localStorage.code;return permission=JSON.parse(localStorage.permission),msgvar=i?"Secret Code":"Binusmaya Password",t(function(t,i){if(1==permission[o]||"undefined"==typeof o)var r=e.show({template:'<p ng-show="promptPass.error">Incorrect Password</p><input type="password" class="promptPass-form" ng-model="promptPass.password">',title:"Enter "+msgvar,subTitle:"",scope:a,buttons:[{text:"Cancel",onTap:function(){window.location.hash="#/"+n,r.close(),i("back")}},{text:"<b>Enter</b>",type:"button-positive",onTap:function(e){var n=localStorage.code?localStorage.code:JSON.parse(localStorage.loginId).password;return n==a.promptPass.password?(a.promptPass={},a.isAllow=!0,t(!0),!0):(a.promptPass.error=!0,a.promptPass.password="",e.preventDefault(),void 0)}}]});else a.isAllow=!0,t(!0)})},_requestError:function(){},grouping:function(t){if(t.length<=0)return[];var e=[],n="",a=-1,o=0;return t.forEach(function(t){n==t.date?(e[a].data[o]=t,o++):(o=1,a++,n=t.date,e[a]={date:t.date,data:[]},e[a].data[0]=t)}),e}}}]),angular.module("listRoute",[]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("index",{url:"/",views:{"main-view":{templateUrl:view_path+"login.html"}}}).state("schedule",{url:"/schedule",views:{"main-view":{templateUrl:view_path+"schedule.html",controller:"ScheduleController"}}}).state("about",{url:"/about",views:{"main-view":{templateUrl:view_path+"about.html"}}}).state("forum",{url:"/forum",views:{"main-view":{templateUrl:view_path+"forum.html",controller:"ForumController"}}}).state("services",{url:"/services",views:{"main-view":{templateUrl:view_path+"services/index.html",controller:"ServicesController"}}}).state("myclass",{url:"/myclass",views:{"main-view":{templateUrl:view_path+"myclass.html",controller:"MyClassController"}}}).state("myclassDetail",{url:"/myclass-detail/:code",resolve:{dataset:["$q","$stateParams","$location",function(t,e,n){var a=!1,o=t.defer(),i="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1;for(var r in i)i[r].code==e.code&&(a=r);return a?o.resolve(a):n.path("/myclass").replace(),o.promise}]},views:{"main-view":{templateUrl:view_path+"myclassInside.html",controller:"MyClassDetailController"}}}).state("examSchedule",{url:"/exam-schedule",views:{"main-view":{templateUrl:view_path+"services/exam-schedule.html",controller:"ExamScheduleController"}}}).state("examScore",{url:"/exam-score",views:{"main-view":{templateUrl:view_path+"services/exam-score.html",controller:"ExamScoreController"}}}).state("financeStatus",{url:"/finance-status",views:{"main-view":{templateUrl:view_path+"services/billing.html",controller:"FinanceController"}}}).state("absence",{url:"/absence",views:{"main-view":{templateUrl:view_path+"services/absence.html",controller:"AbsenceController"}}}).state("settings",{url:"/settings",views:{"main-view":{templateUrl:view_path+"settings/index.html"}}}).state("permissions",{url:"/settings/permissions",views:{"main-view":{templateUrl:view_path+"settings/permissions.html",controller:"PermissionController"}}}).state("password",{url:"/settings/password",views:{"main-view":{templateUrl:view_path+"settings/password.html",controller:"PasswordController"}}}).state("coming",{url:"/coming",views:{"main-view":{templateUrl:view_path+"coming.html"}}}),e.otherwise("/coming")}]),app.controller("AbsenceController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$http","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,d,f){t.doRefresh=function(){p().then(function(e){t.$applyAsync(function(){e.length>0&&(localStorage.absence=JSON.stringify(e),t.absence=e),t.$broadcast("scroll.refreshComplete"),f.hide()})},function(e){m(e),t.$broadcast("scroll.refreshComplete"),f.hide()})};var p=function(){return u(function(t,n){var a=function(t){function e(t){return/baik/.test(t)?"balanced":/warning/.test(t)?"calm":/maximum/.test(t)?"energized":/overlimit/.test(t)?"assertive":void 0}var n=[],a=0;return $(t).find("#rptTable tr").each(function(t){var o=$(this).find("td");t>0&&(o.length>=8?(n[a]={name:o.eq(0).html(),absence:[{max:o.eq(3).html(),total:o.eq(4).html(),component:o.eq(2).text(),status:e(o.eq(5).find("img").attr("src"))}]},a++):n[a-1].absence.push({max:o.eq(2).html(),total:o.eq(3).html(),component:o.eq(1).text(),status:e(o.eq(4).find("img").attr("src"))}))}),n};"undefined"==typeof httpclient?o.get("http://localhost:2505/absence.html").then(function(e){t(a(e.data))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return u.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){return u.reject("can't access to main frame")}).then(function(t){return e.api($(t.result.result).find("#ctl00_cpContent_rptMainMenuStudent_ctl01_linkMenuStudent").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return e.api($(t.result).find("#ctl00_cpContent_rptSubMenu_ctl02_linkSubMenu").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(e){t(a(e.result))},function(t){n(t)})})};e.promptPassword("services",t,"absence").then(function(){t.absence=!1,"undefined"!=typeof localStorage.absence?t.absence=JSON.parse(localStorage.absence):(f.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh())});var m=function(e){d.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}}]),app.controller("ExamScheduleController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$http","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,d,f){t.doRefresh=function(){p().then(function(e){t.$applyAsync(function(){(!localStorage.examSchedule||e.length>0)&&(localStorage.examSchedule=JSON.stringify(e),t.examScheduleList=e),f.hide(),t.$broadcast("scroll.refreshComplete")})},function(e){m(e),f.hide(),t.$broadcast("scroll.refreshComplete")})};var p=function(){return u(function(t,n){var a=function(t){for(var n=[],a=0;a<t.length;a++){var o=$(t[a]).find("table:eq(2) tr td li").text();$(t[a]).find(".tablewithborder tr").each(function(t,e){t>0&&n.push({term:o,code:$(e).find("td").eq(0).text(),name:$(e).find("td").eq(1).text(),sks:$(e).find("td").eq(2).text(),date:$(e).find("td").eq(3).text(),hour:$(e).find("td").eq(4).text(),room:$(e).find("td").eq(5).text(),campus:$(e).find("td").eq(6).text(),className:$(e).find("td").eq(7).text(),seat:parseInt($(e).find("td").eq(8).text())})})}return e.grouping(_.sortBy(n,"date"))},i=[],r="";"undefined"==typeof httpclient?o.get("http://localhost:2505/exam.html").then(function(t){return i.push(t.data),o.get("http://localhost:2505/exam-practicum.html")},n).then(function(e){i.push(e.data),t(a(i))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return u.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){return u.reject("can't access to main frame")}).then(function(t){return e.api($(t.result.result).find("#ctl00_cpContent_rptMainMenuStudent_ctl02_linkMenuStudent").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return r=t.result,e.api($(r).find(".itemContentService li:eq(0) a").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return i.push(t.result),e.api($(r).find(".itemContentService li:eq(1) a").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return i.push(t.result),e.api($(r).find(".itemContentService li:eq(2) a").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(e){i.push(e.result),t(a(i))},function(t){n(t)})})};t.examScheduleList=!1,localStorage.examSchedule?t.examScheduleList=JSON.parse(localStorage.examSchedule):(f.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh());var m=function(e){d.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}}]),app.controller("ExamScoreController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$http","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,d,f){var p=function(){return u(function(t,e){var n=function(t){var e=[];return $(t).find(".tablebordersmaller tr").each(function(n){n>0&&e.push({term:"Theory Score",year:$(t).find("#ctl00_cpContent_ddlPeriodYear").val(),smester:$(t).find("#ctl00_cpContent_ddlPeriodSemester").val(),name:$(this).find("td").eq(1).text(),data:[[{name:"TM",value:$(this).find("td").eq(5).find("a:first").text()},{name:"MID",value:$(this).find("td").eq(6).find("a:first").text()},{name:"Practicum",value:$(this).find("td").eq(7).find("a:first").text()}],[{name:"SKS",value:$(this).find("td").eq(2).text()},{name:"Final",value:$(this).find("td").eq(8).find("a:first").text()},{name:"Result",value:$(this).find("td").eq(9).find("a:first").text()}]]})}),$(t).find(".tablewithborder tr").each(function(n){n>0&&e.push({term:"Practicum Score",year:$(t).find("#ctl00_cpContent_ddlPeriodYear").val(),smester:$(t).find("#ctl00_cpContent_ddlPeriodSemester").val(),name:$(this).find("td").eq(1).text(),data:[[{name:"MID",value:$(this).find("td").eq(3).find("a:first").text()},{name:"Final",value:$(this).find("td").eq(4).find("a:first").text()},{name:"Project",value:$(this).find("td").eq(5).find("a:first").text()}],[{name:"Project",value:$(this).find("td").eq(6).find("a:first").text()},{name:" ",value:" "},{name:" ",value:" "}]]})}),e};"undefined"==typeof httpclient&&o.get("http://localhost:2505/exam-score.html").then(function(e){t(n(e.data))},e)})};t.doRefresh=function(){p().then(function(e){t.$applyAsync(function(){("undefined"!=typeof localStorage.examScore||e.length>0)&&(localStorage.examScore=JSON.stringify(e),t.examScore=e),t.$broadcast("scroll.refreshComplete"),f.hide()})},function(e){m(e),t.$broadcast("scroll.refreshComplete"),f.hide()})};var m=function(e){d.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};t.isAllow=!1,e.promptPassword("services",t,"examScore").then(function(){t.examScore=!1,"undefined"!=typeof localStorage.examScore?t.examScore=JSON.parse(localStorage.examScore):s.ready(function(){f.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh()})})}]),app.controller("FinanceController",["$scope","BinusMaya","$ionicPopup","$q","$http","$ionicLoading",function(t,e,n,a,o,i){t.isAllow=!1,t.financeList=!1,t.doRefresh=function(){r().then(function(e){t.$applyAsync(function(){(!localStorage.finance||e.length>0)&&(localStorage.finance=JSON.stringify(e),t.financeList=e),i.hide(),t.$broadcast("scroll.refreshComplete")})},function(e){l(e),i.hide(),t.$broadcast("scroll.refreshComplete")})},t.toMoney=function(t){try{return t.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g,"$1,")}catch(e){return 0}};var r=function(){return a(function(t,n){var i=function(t){var n=0;try{n=parseInt($(t).find("table:eq(0) tr td").html().match(/[0-9]+/)[0])}catch(a){}var o=[];$(t).find("table#rptTable tr").each(function(t){var e=$(this).find("td");t>0&&o.push({date:e.eq(1).html(),title:e.eq(2).html(),term:e.eq(3).html(),due:e.eq(4).html(),charge:isNaN(parseInt(e.eq(5).html()))===!0?0:parseInt(e.eq(5).html()),payment:isNaN(parseInt(e.eq(6).html()))===!0?0:parseInt(e.eq(6).html().match(/[0-9]+/)),refund:isNaN(parseInt(e.eq(7).html()))===!0?0:parseInt(e.eq(7).html())})});var i={data:e.grouping(o),billing:n,lastUpdate:moment().format("D MMMM YYYY h:mm:ss")};return i};"undefined"==typeof httpclient?o.get("http://localhost:2505/finance.html").then(function(e){t(i(e.data))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return a.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){return a.reject("can't access to main frame")}).then(function(t){return e.api($(t.result.result).find("#ctl00_cpContent_rptMainMenuStudent_ctl06_linkMenuStudent").attr("href"),"get",{},!0)},function(){return a.reject("can't access to main frame")}).then(function(t){return e.api($(t.result).find("#ctl00_cpContent_rptSubMenu_ctl03_linkSubMenu").attr("href"),"get",{},!0)},function(){return a.reject("can't access to main frame")}).then(function(e){t(i(e.result))},function(){n("can't access to main frame")})})},l=function(e){n.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};e.promptPassword("services",t,"finance").then(function(){localStorage.finance?(t.financeList=JSON.parse(localStorage.finance),console.log(t.financeList)):(i.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh())})}]),app.controller("LoginController",["$scope","$ionicPopup","$timeout","$ionicHistory","$ionicNavBarDelegate","$rootScope","BinusMaya",function(t,e,n,a,o,i,r){i.noHeader=!0,o.showBar(!1),t.loading=!1,t.loginClass="",a.nextViewOptions({disableBack:!0}),t.submit=function(){if(t.binusid&&t.password){t.loginClass="on-loading",t.loading=!0,r.api("/","get").then(function(e){200!==e.code&&n(e);var a={};return $($(e.result).serializeArray()).each(function(t,e){a[e.name]=e.value}),a.txtUserId=t.binusid,a.txtPassword=t.password,a.btnLogin="Log In ",r.api("/","post",a)},function(t){n(t)}).then(function(e){var r=$(e.result).find("#content #topbar .right strong");200!==e.code&&n(e),r.length<=0?n(e,$(e.result).find("#lblError").text()):(t.loading=!1,t.loginClass="",localStorage.loginId=JSON.stringify({binusid:t.binusid,password:t.password}),localStorage.islogin=!0,localStorage.fname=r.text(),i.login=!0,i.loginName=localStorage.fname.toLowerCase(),t.loginClass="",t.loading=!1,location.reload(),a.clearHistory(),o.showBackButton(!1))},n);var n=function(n,a){t.loading=!1,t.loginClass="",e.alert({title:"Oops !",template:a?a:"Something wrong !"})}}else e.alert({title:"Oops !",template:"Please Input Binusian ID and Password"})}}]),app.controller("MyClassController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading","$http",function(t,e,n,a,o,i,r,l,c,s,u,d,f){l.noHeader=!1,l.leftMenu=!0,c.onHardwareBackButton(function(t){t.preventDefault()}),t.classData="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1;var p=function(){return s(function(t,n){var a=function(t){var e=[];return $(t).find("#ctl00_ContentPlaceHolder1_pnlTeori ul li").each(function(t,n){var a=$(n).find("a").html(),o=a.match(/^(.*)-(.*) \((.*)\)/i);e.push({indexItem:t,name:o[2],url:$(n).find("a").attr("href"),code:o[1],className:o[3]})}),localStorage.myClass=JSON.stringify(e),e};"undefined"==typeof httpclient?f.get("http://localhost:2505/myclass.html").then(function(e){t(a(e.data))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return s.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return s.reject("can't access to main frame")}).then(function(e){t(a(e.result.result))},function(){n("can't access to my class")})})};t.doRefresh=function(){p().then(function(e){t.classData=e,d.hide(),t.$broadcast("scroll.refreshComplete")},function(t){e(t)});var e=function(e){d.hide(),u.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}},t.classData||(d.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh())}]),app.controller("MyClassDetailController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$location","$http","$ionicScrollDelegate","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","dataset","$timeout","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,d,f,p,c,m){t.classData="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1,t.state={isData:!1,loading:!0},t.data=t.classData[p],t.showpage=0,t.linksSetAssigment=[],t.linksSet=[];var h=function(t){return d(function(n,a){var o=function(t){var e=$(t).find("#desc_course_desc > span").html(),n=$(t).find("#desc_grad_compete > span").html(),a=[],o=[];return $(t).find("#ctl00_ContentPlaceHolder1_pnlContentTheory table tbody tr").each(function(t,e){0!==t&&a.push({session:parseInt($(e).find("td:eq(0) > span").html()),mode:$(e).find("td:eq(1) > span").html(),topics:$(e).find("td:eq(2) > a").html(),date:$(e).find("td:eq(3) > span").html(),links:$(e).find("td:eq(4) > input").attr("name")})}),$(t).find("#ctl00_ContentPlaceHolder1_pnlMainAssignment table tbody tr").each(function(t,e){0!==t&&o.push({term:"Main Assigment",session:parseInt($(e).find("td").eq(0).text()),topics:$(e).find("td").eq(1).text(),title:$(e).find("td").eq(2).text(),desc:$(e).find("td").eq(3).text(),deadline:$(e).find("td").eq(4).text(),upload:$(e).find("td").eq(5).find("img").length?!0:!1,checked:$(e).find("td").eq(6).find("img").length?!0:!1,link:$(e).find("td").eq(7).find("input:eq(0)").attr("name")})}),$(t).find("#ctl00_ContentPlaceHolder1_pnlAdditionalAssignment2 table tbody tr").each(function(t,e){0!==t&&o.push({term:"Additional Assigment",session:parseInt($(e).find("td").eq(0).text()),topics:$(e).find("td").eq(1).text(),title:$(e).find("td").eq(2).text(),desc:$(e).find("td").eq(3).text(),deadline:$(e).find("td").eq(4).text(),upload:$(e).find("td").eq(5).find("img").length?!0:!1,checked:$(e).find("td").eq(6).find("img").length?!0:!1,link:$(e).find("td").eq(7).find("input:eq(0)").attr("name")})}),{main_description:e,grad_description:n,assigment:o.length>0?o:!1,course:a}};"undefined"==typeof httpclient?i.get("http://localhost:2505/myclass-inside.html").then(function(t){n(o(t.data))},a):e.checkLogin().then(function(){return e.api("/","get")},function(){return d.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return d.reject("can't access to main frame")}).then(function(){return e.api(_bimay_api_url+"/LMS/"+t,"get",{},!0)},function(){return d.reject("can't access to my class")}).then(function(t){n(o(t.result))},function(){a("can't access to course page")})})};"undefined"==typeof t.classData[p].detail?h(t.classData[p].url).then(function(e){t.classData[p].detail=e,localStorage.myClass=JSON.stringify(t.classData),t.$applyAsync(function(){t.state.loading=!1,t.state.isData=t.classData[p].detail}),t.$broadcast("scroll.refreshComplete")},g):(t.state.loading=!1,t.state.isData=t.classData[p].detail),t.switchTab=function(e){t.showpage=e,setTimeout(function(){r.resize()},100)};var g=function(e){f.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};t.downloadCourse=function(e,n){t.linksSet[e]={isLoading:!0},v(n).then(function(n){window.open(n,"_system"),t.linksSet[e]={isLoading:!1}},function(){t.linksSet[e]={isLoading:!1}})},t.downloadAssigment=function(e,n){t.linksSetAssigment[e]={isLoading:!0},v(n).then(function(n){window.open(n,"_system"),t.linksSetAssigment[e]={isLoading:!1}},function(){t.linksSetAssigment[e]={isLoading:!1}})};var v=function(n){return d(function(a,o){e.checkLogin().then(function(){return e.api("/","get")},function(){return d.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return d.reject("can't access to main frame")}).then(function(){return e.download(t.classData[p].url,n)},function(){return d.reject("can't access to my class")}).then(function(t){a(t.header.Location)},function(t){o(t)})})};t.refresh=function(){m.show({template:'<ion-spinner icon="android" class="overlay-spinner"></ion-spinner> Loading...'}),h(t.classData[p].url).then(function(e){console.log(e),t.classData[p].detail=e,localStorage.myClass=JSON.stringify(t.classData),t.$applyAsync(function(){t.state.loading=!1,t.state.isData=t.classData[p].detail}),m.hide(),r.resize()},function(t){m.hide(),g(t)})}}]),app.controller("PasswordController",["$scope","BinusMaya","$ionicPopup","$q","$http","$ionicLoading",function(t,e,n){t.input={},t.change=function(){var e=JSON.parse(localStorage.loginId),a=localStorage.code?localStorage.code:e.password;t.input.oldPassword!==a?n.alert({title:"Oops !",template:"Incorrect Code"}):t.input.newPassword&&t.input.rePassword?t.input.newPassword!==t.input.rePassword?n.alert({title:"Oops !",template:"re code is not same as new code"}):(n.alert({title:"Success !",template:"Code has been changed"}),localStorage.code=t.input.newPassword,t.input={}):n.alert({title:"Oops !",template:"Please Insert new Code"})}}]),app.controller("PermissionController",["$scope","BinusMaya","$ionicPopup","$q","$http","$ionicLoading",function(t,e){t.isAllow=!1,t.permission=JSON.parse(localStorage.permission),t.change=function(){localStorage.permission=JSON.stringify(t.permission)},e.promptPassword("settings",t).then(function(){})}]),app.controller("ScheduleController",["$scope","$ionicPopup","$timeout","$ionicHistory","$rootScope","$ionicPlatform","BinusMaya","$q","$http","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s){o.noHeader=!1,o.leftMenu=!0,i.onHardwareBackButton(function(t){t.preventDefault()}),t.getState=function(t){var e=moment();return moment(t).isSame(e,"day")?"today":moment(t).isSame(e.add(1,"d"),"day")?"tomorrow":moment(t)<e?"completo":void 0},t.getCourseState=function(t,e){var n=moment(),a=null;try{var o=e.split("-")[1].split(":"),i=parseInt(o[0]),r=parseInt(o[1]);a=moment(t).hour(i).minute(r)}catch(l){a=moment(t)}return n>a?"completo":void 0},t.isSchedule=!1,t.schedule=[];var u=function(t){var e=[];return $(t).find("tr").each(function(t){var n=$(this).find("td");if(t>0){var a=n.eq(3).html().match(/(.*)-(.*)/);e.push({date:n.eq(0).html(),time:n.eq(1).html(),state:n.eq(2).html(),course:a[2],code:a[1],myClass:n.eq(5).html(),room:n.eq(6).html(),building:n.eq(7).html()})}}),e},d=function(){return l(function(t,e){var n=function(t){var e=$(t).find("table"),n=u(e.eq(0).html()),a=u(e.eq(1).html()),o=n.concat(a),i=r.grouping(o);return i.length>0&&(localStorage.jadwal=JSON.stringify(i)),localStorage.lastUpdate=moment().format("D MMMM YYYY h:mm:ss"),{jadwal:i,lastUpdate:localStorage.lastUpdate}};"undefined"==typeof httpclient?c.get("http://localhost:2505/schedule.html").then(function(e){t(n(e.data))},e):r.checkLogin().then(function(){return r.api("/","get")},function(){return l.reject("can't re-auth your account")}).then(function(t){return r.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return l.reject("can't access to main frame")}).then(function(t){var e={},n=t.result;return $($(n.result).serializeArray()).each(function(t,n){e[n.name]=n.value}),e.__EVENTTARGET="ctl00$ContentPlaceHolder1$btnSchedule",r.api(_bimay_api_url+"/LMS/MyClass.aspx","post",e,!0)},function(){return l.reject("can't access to schedule page")}).then(function(e){t(n(e.result))},function(t){e(t)})})};if(t.doRefresh=function(){d().then(function(e){s.hide(),t.$broadcast("scroll.refreshComplete"),o.getLastUpdate(),t.isSchedule=!0,t.schedule=e.jadwal},function(t){n(t)});var n=function(n){s.hide(),e.alert({title:"Oops !",template:n}),t.$broadcast("scroll.refreshComplete")}},localStorage.jadwal)try{JSON.parse(localStorage.jadwal).length>0&&(t.isSchedule=!0,t.schedule=JSON.parse(localStorage.jadwal))}catch(f){}else i.ready(function(){s.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh()})}]),app.controller("ServicesController",["$scope","BinusMaya","$ionicNavBarDelegate",function(){}]);
//# sourceMappingURL=data:application/json;base64,
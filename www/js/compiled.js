var view_path="views/",pcolor="#1C536F",_bimay_url="http://binusmaya.binus.ac.id",_bimay_api_url="http://apps.binusmaya.binus.ac.id",app=angular.module("BinusMaya",["ionic","listRoute","BinusMayaFactory"]).run(["$ionicPlatform","$rootScope","$ionicHistory","$ionicNavBarDelegate","BinusMaya","$timeout",function(t,e,n,a,o,i){e.login="undefined"==typeof localStorage.islogin?!1:localStorage.islogin,e.leftMenu=!1,e.profilePicture=!1,e.loginName="undefined"==typeof localStorage.fname?null:localStorage.fname.toLowerCase(),delete localStorage.cookie,delete localStorage.templogin,t.ready(function(){e.onLoadStyle={opacity:1},window.StatusBar&&StatusBar.styleDefault(),localStorage.islogin&&r()}),e.getLastUpdate=function(){e.lastUpdate="undefined"==typeof localStorage.lastUpdate?"Whatever":localStorage.lastUpdate},e.getLastUpdate(),e.logout=function(){localStorage.clear(),window.location.hash="#/",n.clearHistory(),a.showBackButton(!1),location.reload()};var r=function(){localStorage.profilePicture?e.profilePicture=localStorage.profilePicture:"undefined"==typeof httpclient||o.profilePicture().then(function(t){i(function(){localStorage.profilePicture=t,e.profilePicture=t})},function(){})};window.location.hash=e.login?"/schedule":"/"}]).config(["$ionicConfigProvider",function(t){t.views.forwardCache(!1),t.views.maxCache(0)}]);angular.module("BinusMayaFactory",[]).factory("BinusMaya",["$q","$ionicPopup",function(t,e){return{_bimay_url:"http://binusmaya.binus.ac.id",_bimay_api_url:"http://apps.binusmaya.binus.ac.id",headers:function(){var t=this;return{Cookie:localStorage.cookie?localStorage.cookie:null,Origin:t._bimay_url,Referer:t._bimay_url}},checkLogin:function(){var e=this,n=localStorage.loginId?JSON.parse(localStorage.loginId):!1;return t(function(t,a){if(localStorage.templogin===!0)t(!0);else{if(n!==!1)return e.api("/","get").then(function(t){200!==t.code&&a(t);var o={};return $($(t.result).serializeArray()).each(function(t,e){o[e.name]=e.value}),o.txtUserId=n.binusid,o.txtPassword=n.password,o.btnLogin="Log In ",e.api("/","post",o)},a).then(function(){localStorage.templogin=!0,t(!0)},a);a("please login")}})},api:function(e,n,a,o,i){var r=this,l={headers:r.headers()};return"undefined"!=typeof i&&(l.noRedirect=!0),"none"==navigator.connection.type?t(function(t,e){e("No internet connection")}):void 0===localStorage.cookie?r._getCookie().then(function(){return r.api(e,n,a)}):t(function(t,i){"get"===n?httpclient.get(o?e:r._bimay_url+e,function(e){t(e)},function(t){i(t)},l):httpclient.post(o?e:r._bimay_url+e,a,function(e){t(e)},function(t){i(t)},l)})},download:function(e,n){var a=this;return t(function(t,o){return a.api(a._bimay_api_url+"/LMS/"+e,"get",{},!0).then(function(t){var o={};return $($(t.result).serializeArray()).each(function(t,e){o[e.name]=e.value}),o[n+".x"]=1,o[n+".y"]=1,a.api(a._bimay_api_url+"/LMS/"+e,"post",o,!0,!0)},o).then(function(t){o(t)},function(e){302==e.code?t(e):o(e)})})},frame:function(e){var n=this,a="";return t(function(t,o){return n.api(e,"get").then(function(t){return n.api($(t.result).find("#ctl00_cp1_ifrApp").attr("src"),"get")},o).then(function(t){return a=$(t.result).find("#ifrApp").attr("src"),n.api(a,"get",{},!0)},o).then(function(e){t({url:a,result:e})},o)})},_getCookie:function(){var e=this;return t(function(t,n){httpclient.get(e._bimay_url,function(e){200==e.code?(localStorage.cookie=e.header["Set-Cookie"],t(!0)):n(e)},n)})},profilePicture:function(){var e=this;return t(function(t,n){e.checkLogin().then(function(){return e.frame("/")},n).then(function(a){var o=$(a.result.result).find("#ctl00_cpRight_ucPhoto_imgProfilePic").attr("src");httpclient.image(e._bimay_api_url+"/home/"+o,function(e){t("data:image/jpeg;base64,"+e.result.replace(/(\r\n|\n|\r)/gm,""))},n,{headers:e.headers()})},n)})},promptPassword:function(n,a){return a.promptPass={},t(function(t,o){var i=e.show({template:'<p ng-show="promptPass.error">Incorrect Password</p><input type="password" class="promptPass-form" ng-model="promptPass.password">',title:"Enter Binusmaya Password",subTitle:"",scope:a,buttons:[{text:"Cancel",onTap:function(){window.location.hash="#/"+n,i.close(),o("back")}},{text:"<b>Enter</b>",type:"button-positive",onTap:function(e){var n=JSON.parse(localStorage.loginId).password;return n==a.promptPass.password?(a.promptPass={},a.isAllow=!0,t(!0),!0):(a.promptPass.error=!0,a.promptPass.password="",e.preventDefault(),void 0)}}]})})},_requestError:function(){},grouping:function(t){if(t.length<=0)return[];var e=[],n="",a=-1,o=0;return t.forEach(function(t){n==t.date?(e[a].data[o]=t,o++):(o=1,a++,n=t.date,e[a]={date:t.date,data:[]},e[a].data[0]=t)}),e}}}]),angular.module("listRoute",[]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("index",{url:"/",views:{"main-view":{templateUrl:view_path+"login.html"}}}).state("schedule",{url:"/schedule",views:{"main-view":{templateUrl:view_path+"schedule.html",controller:"ScheduleController"}}}).state("about",{url:"/about",views:{"main-view":{templateUrl:view_path+"about.html"}}}).state("forum",{url:"/forum",views:{"main-view":{templateUrl:view_path+"forum.html",controller:"ForumController"}}}).state("services",{url:"/services",views:{"main-view":{templateUrl:view_path+"services/index.html",controller:"ServicesController"}}}).state("myclass",{url:"/myclass",views:{"main-view":{templateUrl:view_path+"myclass.html",controller:"MyClassController"}}}).state("myclassDetail",{url:"/myclass-detail/:code",resolve:{dataset:["$q","$stateParams","$location",function(t,e,n){var a=!1,o=t.defer(),i="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1;for(var r in i)i[r].code==e.code&&(a=r);return a?o.resolve(a):n.path("/myclass").replace(),o.promise}]},views:{"main-view":{templateUrl:view_path+"myclassInside.html",controller:"MyClassDetailController"}}}).state("examSchedule",{url:"/exam-schedule",views:{"main-view":{templateUrl:view_path+"services/exam-schedule.html",controller:"ExamScheduleController"}}}).state("examScore",{url:"/exam-score",views:{"main-view":{templateUrl:view_path+"services/exam-score.html",controller:"ExamScoreController"}}}).state("financeStatus",{url:"/finance-status",views:{"main-view":{templateUrl:view_path+"services/billing.html",controller:"FinanceController"}}}).state("absence",{url:"/absence",views:{"main-view":{templateUrl:view_path+"services/absence.html",controller:"AbsenceController"}}}).state("coming",{url:"/coming",views:{"main-view":{templateUrl:view_path+"coming.html"}}}),e.otherwise("/coming")}]),app.controller("AbsenceController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$http","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,f,d){t.doRefresh=function(){p().then(function(e){t.$applyAsync(function(){e.length>0&&(localStorage.absence=JSON.stringify(e),t.absence=e),t.$broadcast("scroll.refreshComplete"),d.hide()})},function(e){m(e),t.$broadcast("scroll.refreshComplete"),d.hide()})};var p=function(){return u(function(t,n){var a=function(t){function e(t){return/baik/.test(t)?"balanced":/warning/.test(t)?"calm":/maximum/.test(t)?"energized":/overlimit/.test(t)?"assertive":void 0}var n=[],a=0;return $(t).find("#rptTable tr").each(function(t){var o=$(this).find("td");t>0&&(o.length>=8?(n[a]={name:o.eq(0).html(),absence:[{max:o.eq(3).html(),total:o.eq(4).html(),component:o.eq(2).text(),status:e(o.eq(5).find("img").attr("src"))}]},a++):n[a-1].absence.push({max:o.eq(2).html(),total:o.eq(3).html(),component:o.eq(1).text(),status:e(o.eq(4).find("img").attr("src"))}))}),n};"undefined"==typeof httpclient?o.get("http://localhost:2505/absence.html").then(function(e){t(a(e.data))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return u.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){return u.reject("can't access to main frame")}).then(function(t){return e.api($(t.result.result).find("#ctl00_cpContent_rptMainMenuStudent_ctl01_linkMenuStudent").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return e.api($(t.result).find("#ctl00_cpContent_rptSubMenu_ctl02_linkSubMenu").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(e){t(a(e.result))},function(t){n(t)})})};e.promptPassword("services",t).then(function(){t.absence=!1,"undefined"!=typeof localStorage.absence?t.absence=JSON.parse(localStorage.absence):(d.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh())});var m=function(e){f.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}}]),app.controller("ExamScheduleController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$http","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,f,d){t.doRefresh=function(){p().then(function(e){t.$applyAsync(function(){(!localStorage.examSchedule||e.length>0)&&(localStorage.examSchedule=JSON.stringify(e),t.examScheduleList=e),d.hide(),t.$broadcast("scroll.refreshComplete")})},function(e){m(e),d.hide(),t.$broadcast("scroll.refreshComplete")})};var p=function(){return u(function(t,n){var a=function(t){for(var n=[],a=0;a<t.length;a++){var o=$(t[a]).find("table:eq(2) tr td li").text();$(t[a]).find(".tablewithborder tr").each(function(t,e){t>0&&n.push({term:o,code:$(e).find("td").eq(0).text(),name:$(e).find("td").eq(1).text(),sks:$(e).find("td").eq(2).text(),date:$(e).find("td").eq(3).text(),hour:$(e).find("td").eq(4).text(),room:$(e).find("td").eq(5).text(),campus:$(e).find("td").eq(6).text(),className:$(e).find("td").eq(7).text(),seat:parseInt($(e).find("td").eq(8).text())})})}return e.grouping(_.sortBy(n,"date"))},i=[],r="";"undefined"==typeof httpclient?o.get("http://localhost:2505/exam.html").then(function(t){return i.push(t.data),o.get("http://localhost:2505/exam-practicum.html")},n).then(function(e){i.push(e.data),t(a(i))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return u.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){return u.reject("can't access to main frame")}).then(function(t){return e.api($(t.result.result).find("#ctl00_cpContent_rptMainMenuStudent_ctl02_linkMenuStudent").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return r=t.result,e.api($(r).find(".itemContentService li:eq(0) a").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return i.push(t.result),e.api($(r).find(".itemContentService li:eq(1) a").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(t){return i.push(t.result),e.api($(r).find(".itemContentService li:eq(2) a").attr("href"),"get",{},!0)},function(){return u.reject("can't access to main frame")}).then(function(e){i.push(e.result),t(a(i))},function(t){n(t)})})};t.examScheduleList=!1,localStorage.examSchedule?t.examScheduleList=JSON.parse(localStorage.examSchedule):(d.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh());var m=function(e){f.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}}]),app.controller("ExamScoreController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$http","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,f,d){var p=function(){return u(function(t,e){var n=function(t){var e=[];return $(t).find(".tablebordersmaller tr").each(function(n){n>0&&e.push({term:"Theory Score",year:$(t).find("#ctl00_cpContent_ddlPeriodYear").val(),smester:$(t).find("#ctl00_cpContent_ddlPeriodSemester").val(),name:$(this).find("td").eq(1).text(),data:[[{name:"TM",value:$(this).find("td").eq(5).find("a:first").text()},{name:"MID",value:$(this).find("td").eq(6).find("a:first").text()},{name:"Practicum",value:$(this).find("td").eq(7).find("a:first").text()}],[{name:"SKS",value:$(this).find("td").eq(2).text()},{name:"Final",value:$(this).find("td").eq(8).find("a:first").text()},{name:"Result",value:$(this).find("td").eq(9).find("a:first").text()}]]})}),$(t).find(".tablewithborder tr").each(function(n){n>0&&e.push({term:"Practicum Score",year:$(t).find("#ctl00_cpContent_ddlPeriodYear").val(),smester:$(t).find("#ctl00_cpContent_ddlPeriodSemester").val(),name:$(this).find("td").eq(1).text(),data:[[{name:"MID",value:$(this).find("td").eq(3).find("a:first").text()},{name:"Final",value:$(this).find("td").eq(4).find("a:first").text()},{name:"Project",value:$(this).find("td").eq(5).find("a:first").text()}],[{name:"Project",value:$(this).find("td").eq(6).find("a:first").text()},{name:" ",value:" "},{name:" ",value:" "}]]})}),e};"undefined"==typeof httpclient&&o.get("http://localhost:2505/exam-score.html").then(function(e){t(n(e.data))},e)})};t.doRefresh=function(){p().then(function(e){t.$applyAsync(function(){("undefined"!=typeof localStorage.examScore||e.length>0)&&(localStorage.examScore=JSON.stringify(e),t.examScore=e),t.$broadcast("scroll.refreshComplete"),d.hide()})},function(e){m(e),t.$broadcast("scroll.refreshComplete"),d.hide()})};var m=function(e){f.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};t.isAllow=!1,e.promptPassword("services",t).then(function(){t.examScore=!1,"undefined"!=typeof localStorage.examScore?t.examScore=JSON.parse(localStorage.examScore):s.ready(function(){d.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh()})})}]),app.controller("FinanceController",["$scope","BinusMaya","$ionicPopup","$q","$http","$ionicLoading",function(t,e,n,a,o,i){t.isAllow=!1,t.financeList=!1,t.doRefresh=function(){r().then(function(e){t.$applyAsync(function(){(!localStorage.finance||e.length>0)&&(localStorage.finance=JSON.stringify(e),t.financeList=e),i.hide(),t.$broadcast("scroll.refreshComplete")})},function(e){l(e),i.hide(),t.$broadcast("scroll.refreshComplete")})},t.toMoney=function(t){try{return t.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g,"$1,")}catch(e){return 0}};var r=function(){return a(function(t,n){var i=function(t){var n=0;try{n=parseInt($(t).find("table:eq(0) tr td").html().match(/[0-9]+/)[0])}catch(a){}var o=[];$(t).find("table#rptTable tr").each(function(t){var e=$(this).find("td");t>0&&o.push({date:e.eq(1).html(),title:e.eq(2).html(),term:e.eq(3).html(),due:e.eq(4).html(),charge:isNaN(parseInt(e.eq(5).html()))===!0?0:parseInt(e.eq(5).html()),payment:isNaN(parseInt(e.eq(6).html()))===!0?0:parseInt(e.eq(6).html().match(/[0-9]+/)),refund:isNaN(parseInt(e.eq(7).html()))===!0?0:parseInt(e.eq(7).html())})});var i={data:e.grouping(o),billing:n,lastUpdate:moment().format("D MMMM YYYY h:mm:ss")};return i};"undefined"==typeof httpclient?o.get("http://localhost:2505/finance.html").then(function(e){t(i(e.data))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return a.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){return a.reject("can't access to main frame")}).then(function(t){return e.api($(t.result.result).find("#ctl00_cpContent_rptMainMenuStudent_ctl06_linkMenuStudent").attr("href"),"get",{},!0)},function(){return a.reject("can't access to main frame")}).then(function(t){return e.api($(t.result).find("#ctl00_cpContent_rptSubMenu_ctl03_linkSubMenu").attr("href"),"get",{},!0)},function(){return a.reject("can't access to main frame")}).then(function(e){t(i(e.result))},function(){n("can't access to main frame")})})},l=function(e){n.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};e.promptPassword("services",t).then(function(){localStorage.finance?(t.financeList=JSON.parse(localStorage.finance),console.log(t.financeList)):(i.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh())})}]),app.controller("LoginController",["$scope","$ionicPopup","$timeout","$ionicHistory","$ionicNavBarDelegate","$rootScope","BinusMaya",function(t,e,n,a,o,i,r){i.noHeader=!0,o.showBar(!1),t.loading=!1,t.loginClass="",a.nextViewOptions({disableBack:!0}),t.submit=function(){if(t.binusid&&t.password){t.loginClass="on-loading",t.loading=!0,r.api("/","get").then(function(e){200!==e.code&&n(e);var a={};return $($(e.result).serializeArray()).each(function(t,e){a[e.name]=e.value}),a.txtUserId=t.binusid,a.txtPassword=t.password,a.btnLogin="Log In ",r.api("/","post",a)},function(t){n(t)}).then(function(e){var r=$(e.result).find("#content #topbar .right strong");200!==e.code&&n(e),r.length<=0?n(e,$(e.result).find("#lblError").text()):(t.loading=!1,t.loginClass="",localStorage.loginId=JSON.stringify({binusid:t.binusid,password:t.password}),localStorage.islogin=!0,localStorage.fname=r.text(),i.login=!0,i.loginName=localStorage.fname.toLowerCase(),t.loginClass="",t.loading=!1,location.reload(),a.clearHistory(),o.showBackButton(!1))},n);var n=function(n,a){t.loading=!1,t.loginClass="",e.alert({title:"Oops !",template:a?a:"Something wrong !"})}}else e.alert({title:"Oops !",template:"Please Input Binusian ID and Password"})}}]),app.controller("MyClassController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","$ionicLoading","$http",function(t,e,n,a,o,i,r,l,c,s,u,f,d){l.noHeader=!1,l.leftMenu=!0,c.onHardwareBackButton(function(t){t.preventDefault()}),t.classData="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1;var p=function(){return s(function(t,n){var a=function(t){var e=[];return $(t).find("#ctl00_ContentPlaceHolder1_pnlTeori ul li").each(function(t,n){var a=$(n).find("a").html(),o=a.match(/^(.*)-(.*) \((.*)\)/i);e.push({indexItem:t,name:o[2],url:$(n).find("a").attr("href"),code:o[1],className:o[3]})}),localStorage.myClass=JSON.stringify(e),e};"undefined"==typeof httpclient?d.get("http://localhost:2505/myclass.html").then(function(e){t(a(e.data))},n):e.checkLogin().then(function(){return e.api("/","get")},function(){return s.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return s.reject("can't access to main frame")}).then(function(e){t(a(e.result.result))},function(){n("can't access to my class")})})};t.doRefresh=function(){p().then(function(e){t.classData=e,f.hide(),t.$broadcast("scroll.refreshComplete")},function(t){e(t)});var e=function(e){f.hide(),u.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}},t.classData||(f.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh())}]),app.controller("MyClassDetailController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$location","$http","$ionicScrollDelegate","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","dataset","$timeout","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s,u,f,d,p,c,m){t.classData="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1,t.state={isData:!1,loading:!0},t.data=t.classData[p],t.showpage=0,t.linksSetAssigment=[],t.linksSet=[];var h=function(t){return f(function(n,a){var o=function(t){var e=$(t).find("#desc_course_desc > span").html(),n=$(t).find("#desc_grad_compete > span").html(),a=[],o=[];return $(t).find("#ctl00_ContentPlaceHolder1_pnlContentTheory table tbody tr").each(function(t,e){0!==t&&a.push({session:parseInt($(e).find("td:eq(0) > span").html()),mode:$(e).find("td:eq(1) > span").html(),topics:$(e).find("td:eq(2) > a").html(),date:$(e).find("td:eq(3) > span").html(),links:$(e).find("td:eq(4) > input").attr("name")})}),$(t).find("#ctl00_ContentPlaceHolder1_pnlMainAssignment table tbody tr").each(function(t,e){0!==t&&o.push({term:"Main Assigment",session:parseInt($(e).find("td").eq(0).text()),topics:$(e).find("td").eq(1).text(),title:$(e).find("td").eq(2).text(),desc:$(e).find("td").eq(3).text(),deadline:$(e).find("td").eq(4).text(),upload:$(e).find("td").eq(5).find("img").length?!0:!1,checked:$(e).find("td").eq(6).find("img").length?!0:!1,link:$(e).find("td").eq(7).find("input:eq(0)").attr("name")})}),$(t).find("#ctl00_ContentPlaceHolder1_pnlAdditionalAssignment2 table tbody tr").each(function(t,e){0!==t&&o.push({term:"Additional Assigment",session:parseInt($(e).find("td").eq(0).text()),topics:$(e).find("td").eq(1).text(),title:$(e).find("td").eq(2).text(),desc:$(e).find("td").eq(3).text(),deadline:$(e).find("td").eq(4).text(),upload:$(e).find("td").eq(5).find("img").length?!0:!1,checked:$(e).find("td").eq(6).find("img").length?!0:!1,link:$(e).find("td").eq(7).find("input:eq(0)").attr("name")})}),{main_description:e,grad_description:n,assigment:o.length>0?o:!1,course:a}};"undefined"==typeof httpclient?i.get("http://localhost:2505/myclass-inside.html").then(function(t){n(o(t.data))},a):e.checkLogin().then(function(){return e.api("/","get")},function(){return f.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return f.reject("can't access to main frame")}).then(function(){return e.api(_bimay_api_url+"/LMS/"+t,"get",{},!0)},function(){return f.reject("can't access to my class")}).then(function(t){n(o(t.result))},function(){a("can't access to course page")})})};"undefined"==typeof t.classData[p].detail?h(t.classData[p].url).then(function(e){t.classData[p].detail=e,localStorage.myClass=JSON.stringify(t.classData),t.$applyAsync(function(){t.state.loading=!1,t.state.isData=t.classData[p].detail}),t.$broadcast("scroll.refreshComplete")},g):(t.state.loading=!1,t.state.isData=t.classData[p].detail),t.switchTab=function(e){t.showpage=e,setTimeout(function(){r.resize()},100)};var g=function(e){d.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};t.downloadCourse=function(e,n){t.linksSet[e]={isLoading:!0},v(n).then(function(n){window.open(n,"_system"),t.linksSet[e]={isLoading:!1}},function(){t.linksSet[e]={isLoading:!1}})},t.downloadAssigment=function(e,n){t.linksSetAssigment[e]={isLoading:!0},v(n).then(function(n){window.open(n,"_system"),t.linksSetAssigment[e]={isLoading:!1}},function(){t.linksSetAssigment[e]={isLoading:!1}})};var v=function(n){return f(function(a,o){e.checkLogin().then(function(){return e.api("/","get")},function(){return f.reject("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return f.reject("can't access to main frame")}).then(function(){return e.download(t.classData[p].url,n)},function(){return f.reject("can't access to my class")}).then(function(t){a(t.header.Location)},function(t){o(t)})})};t.refresh=function(){m.show({template:'<ion-spinner icon="android" class="overlay-spinner"></ion-spinner> Loading...'}),h(t.classData[p].url).then(function(e){console.log(e),t.classData[p].detail=e,localStorage.myClass=JSON.stringify(t.classData),t.$applyAsync(function(){t.state.loading=!1,t.state.isData=t.classData[p].detail}),m.hide(),r.resize()},function(t){m.hide(),g(t)})}}]),app.controller("ScheduleController",["$scope","$ionicPopup","$timeout","$ionicHistory","$rootScope","$ionicPlatform","BinusMaya","$q","$http","$ionicLoading",function(t,e,n,a,o,i,r,l,c,s){o.noHeader=!1,o.leftMenu=!0,i.onHardwareBackButton(function(t){t.preventDefault()}),t.getState=function(t){var e=moment();return moment(t).isSame(e,"day")?"today":moment(t).isSame(e.add(1,"d"),"day")?"tomorrow":moment(t)<e?"completo":void 0},t.getCourseState=function(t,e){var n=moment(),a=null;try{var o=e.split("-")[1].split(":"),i=parseInt(o[0]),r=parseInt(o[1]);a=moment(t).hour(i).minute(r)}catch(l){a=moment(t)}return n>a?"completo":void 0},t.isSchedule=!1,t.schedule=[];var u=function(t){var e=[];return $(t).find("tr").each(function(t){var n=$(this).find("td");if(t>0){var a=n.eq(3).html().match(/(.*)-(.*)/);e.push({date:n.eq(0).html(),time:n.eq(1).html(),state:n.eq(2).html(),course:a[2],code:a[1],myClass:n.eq(5).html(),room:n.eq(6).html(),building:n.eq(7).html()})}}),e},f=function(){return l(function(t,e){var n=function(t){var e=$(t).find("table"),n=u(e.eq(0).html()),a=u(e.eq(1).html()),o=n.concat(a),i=r.grouping(o);return i.length>0&&(localStorage.jadwal=JSON.stringify(i)),localStorage.lastUpdate=moment().format("D MMMM YYYY h:mm:ss"),{jadwal:i,lastUpdate:localStorage.lastUpdate}};"undefined"==typeof httpclient?c.get("http://localhost:2505/schedule.html").then(function(e){t(n(e.data))},e):r.checkLogin().then(function(){return r.api("/","get")},function(){return l.reject("can't re-auth your account")}).then(function(t){return r.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){return l.reject("can't access to main frame")}).then(function(t){var e={},n=t.result;return $($(n.result).serializeArray()).each(function(t,n){e[n.name]=n.value}),e.__EVENTTARGET="ctl00$ContentPlaceHolder1$btnSchedule",r.api(_bimay_api_url+"/LMS/MyClass.aspx","post",e,!0)},function(){return l.reject("can't access to schedule page")}).then(function(e){t(n(e.result))},function(t){e(t)})})};if(t.doRefresh=function(){f().then(function(e){s.hide(),t.$broadcast("scroll.refreshComplete"),o.getLastUpdate(),t.isSchedule=!0,t.schedule=e.jadwal},function(t){n(t)});var n=function(n){s.hide(),e.alert({title:"Oops !",template:n}),t.$broadcast("scroll.refreshComplete")}},localStorage.jadwal)try{JSON.parse(localStorage.jadwal).length>0&&(t.isSchedule=!0,t.schedule=JSON.parse(localStorage.jadwal))}catch(d){}else i.ready(function(){s.show({templateUrl:"views/module/loading.html",noBackdrop:!0}),t.doRefresh()})}]),app.controller("ServicesController",["$scope","BinusMaya","$ionicNavBarDelegate",function(){}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImJpbnVzbWF5YS5qcyIsInJvdXRlLmpzIiwiY29udHJvbGxlcnMvYWJzZW5jZS5jb250cm9sbGVyLmpzIiwiY29udHJvbGxlcnMvZXhhbVNjaGVkdWxlLmNvbnRyb2xsZXIuanMiLCJjb250cm9sbGVycy9leGFtU2NvcmUuY29udHJvbGxlci5qcyIsImNvbnRyb2xsZXJzL2ZpbmFuY2UuY29udHJvbGxlci5qcyIsImNvbnRyb2xsZXJzL2xvZ2luLmNvbnRyb2xsZXIuanMiLCJjb250cm9sbGVycy9teWNsYXNzLmNvbnRyb2xsZXIuanMiLCJjb250cm9sbGVycy9teWNsYXNzSW5zaWRlLmNvbnRyb2xsZXIuanMiLCJjb250cm9sbGVycy9zY2hlZHVsZS5jb250cm9sbGVyLmpzIiwiY29udHJvbGxlcnMvc2VydmljZXMuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVQSxHQUFBLFdBQUEsU0FDQSxPQUFBLFVBQ0EsV0FBQSwrQkFDQSxlQUFBLG9DQUVBLElBQUEsUUFBQSxPQUFBLGFBQUEsUUFBQSxZQUFBLHFCQUVBLEtBQUEsaUJBQUEsYUFBQSxnQkFBQSx1QkFBQSxZQUFBLFdBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FFQSxFQUFBLE1BQUEsbUJBQUEsY0FBQSxTQUFBLEVBQUEsYUFBQSxRQUNBLEVBQUEsVUFBQSxFQUNBLEVBQUEsZ0JBQUEsRUFDQSxFQUFBLFVBQUEsbUJBQUEsY0FBQSxNQUFBLEtBQUEsYUFBQSxNQUFBLG9CQUNBLGNBQUEsYUFDQSxjQUFBLFVBRUEsRUFBQSxNQUFBLFdBQ0EsRUFBQSxhQUNBLFFBQUEsR0FPQSxPQUFBLFdBQ0EsVUFBQSxlQUVBLGFBQUEsU0FDQSxNQUlBLEVBQUEsY0FBQSxXQUNBLEVBQUEsV0FBQSxtQkFBQSxjQUFBLFdBQUEsV0FBQSxhQUFBLFlBRUEsRUFBQSxnQkFDQSxFQUFBLE9BQUEsV0FDQSxhQUFBLFFBQ0EsT0FBQSxTQUFBLEtBQUEsS0FDQSxFQUFBLGVBQ0EsRUFBQSxnQkFBQSxHQUNBLFNBQUEsU0FHQSxJQUFBLEdBQUEsV0FFQSxhQUFBLGVBQ0EsRUFBQSxlQUFBLGFBQUEsZUFFQSxtQkFBQSxhQUVBLEVBQUEsaUJBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxXQUNBLGFBQUEsZUFBQSxFQUNBLEVBQUEsZUFBQSxLQUVBLGNBU0EsUUFBQSxTQUFBLEtBREEsRUFBQSxNQUNBLFlBRUEsT0FJQSxRQUFBLHVCQUFBLFNBQUEsR0FDQSxFQUFBLE1BQUEsY0FBQSxHQUNBLEVBQUEsTUFBQSxTQUFBLEtDckZBLFNBQUEsT0FBQSx1QkFFQSxRQUFBLGFBQUEsS0FBQSxjQUFBLFNBQUEsRUFBQSxHQUNBLE9BRUEsV0FBQSwrQkFDQSxlQUFBLG9DQUVBLFFBQUEsV0FDQSxHQUFBLEdBQUEsSUFDQSxRQUNBLE9BQUEsYUFBQSxPQUFBLGFBQUEsT0FBQSxLQUNBLE9BQUEsRUFBQSxXQUNBLFFBQUEsRUFBQSxhQUdBLFdBQUEsV0FDQSxHQUFBLEdBQUEsS0FDQSxFQUFBLGFBQUEsUUFBQSxLQUFBLE1BQUEsYUFBQSxVQUFBLENBQ0EsT0FBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsYUFBQSxhQUFBLEVBQ0EsR0FBQSxPQUNBLENBQUEsR0FBQSxLQUFBLEVBR0EsTUFBQSxHQUFBLElBQUEsSUFBQSxPQUNBLEtBQUEsU0FBQSxHQUNBLE1BQUEsRUFBQSxNQUFBLEVBQUEsRUFDQSxJQUFBLEtBT0EsT0FOQSxHQUFBLEVBQUEsRUFBQSxRQUFBLGtCQUFBLEtBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxFQUFBLE1BQUEsRUFBQSxRQUVBLEVBQUEsVUFBQSxFQUFBLFFBQ0EsRUFBQSxZQUFBLEVBQUEsU0FDQSxFQUFBLFNBQUEsVUFDQSxFQUFBLElBQUEsSUFBQSxPQUFBLElBQ0EsR0FDQSxLQUFBLFdBQ0EsYUFBQSxXQUFBLEVBQ0EsR0FBQSxJQUNBLEVBakJBLEdBQUEsb0JBcUJBLElBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLEtBR0EsR0FDQSxRQUFBLEVBQUEsVUFLQSxPQUhBLG1CQUFBLEtBQ0EsRUFBQSxZQUFBLEdBRUEsUUFBQSxVQUFBLFdBQUEsS0FDQSxFQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsNEJBRUEsU0FBQSxhQUFBLE9BQ0EsRUFBQSxhQUNBLEtBQUEsV0FDQSxNQUFBLEdBQUEsSUFBQSxFQUFBLEVBQUEsS0FHQSxFQUFBLFNBQUEsRUFBQSxHQUNBLFFBQUEsRUFDQSxXQUFBLElBQUEsRUFBQSxFQUFBLEVBQUEsV0FBQSxFQUFBLFNBQUEsR0FDQSxFQUFBLElBQ0EsU0FBQSxHQUNBLEVBQUEsSUFDQSxHQUVBLFdBQUEsS0FBQSxFQUFBLEVBQUEsRUFBQSxXQUFBLEVBQUEsRUFBQSxTQUFBLEdBQ0EsRUFBQSxJQUNBLFNBQUEsR0FDQSxFQUFBLElBQ0EsTUFNQSxTQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxJQUNBLE9BQUEsR0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsSUFBQSxFQUFBLGVBQUEsUUFBQSxFQUFBLFVBQUEsR0FDQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEtBTUEsT0FMQSxHQUFBLEVBQUEsRUFBQSxRQUFBLGtCQUFBLEtBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxFQUFBLE1BQUEsRUFBQSxRQUVBLEVBQUEsRUFBQSxNQUFBLEVBQ0EsRUFBQSxFQUFBLE1BQUEsRUFDQSxFQUFBLElBQUEsRUFBQSxlQUFBLFFBQUEsRUFBQSxPQUFBLEdBQUEsR0FBQSxJQUNBLEdBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxJQUNBLFNBQUEsR0FDQSxLQUFBLEVBQUEsS0FDQSxFQUFBLEdBRUEsRUFBQSxRQU1BLE1BQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxLQUNBLEVBQUEsRUFDQSxPQUFBLEdBQUEsU0FBQSxFQUFBLEdBQ0EsTUFBQSxHQUFBLElBQUEsRUFBQSxPQUNBLEtBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxJQUFBLEVBQUEsRUFBQSxRQUFBLEtBQUEscUJBQUEsS0FBQSxPQUFBLFFBQ0EsR0FDQSxLQUFBLFNBQUEsR0FFQSxNQURBLEdBQUEsRUFBQSxFQUFBLFFBQUEsS0FBQSxXQUFBLEtBQUEsT0FDQSxFQUFBLElBQUEsRUFBQSxVQUFBLElBQ0EsR0FDQSxLQUFBLFNBQUEsR0FDQSxHQUNBLElBQUEsRUFDQSxPQUFBLEtBRUEsTUFJQSxXQUFBLFdBQ0EsR0FBQSxHQUFBLElBQ0EsT0FBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLFdBQUEsSUFBQSxFQUFBLFdBQUEsU0FBQSxHQUNBLEtBQUEsRUFBQSxNQUNBLGFBQUEsT0FBQSxFQUFBLE9BQUEsY0FDQSxHQUFBLElBRUEsRUFBQSxJQUVBLE1BR0EsZUFBQSxXQUNBLEdBQUEsR0FBQSxJQUNBLE9BQUEsR0FBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLGFBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxNQUFBLE1BQ0EsR0FDQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsRUFBQSxFQUFBLE9BQUEsUUFBQSxLQUFBLHdDQUFBLEtBQUEsTUFDQSxZQUFBLE1BQUEsRUFBQSxlQUFBLFNBQUEsRUFBQSxTQUFBLEdBQ0EsRUFBQSwwQkFBQSxFQUFBLE9BQUEsUUFBQSxpQkFBQSxNQUNBLEdBRUEsUUFBQSxFQUFBLGFBRUEsTUFHQSxlQUFBLFNBQUEsRUFBQSxHQUVBLE1BREEsR0FBQSxjQUNBLEVBQUEsU0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQUEsTUFDQSxTQUFBLHFJQUNBLE1BQUEsMkJBQ0EsU0FBQSxHQUNBLE1BQUEsRUFDQSxVQUNBLEtBQUEsU0FDQSxNQUFBLFdBQ0EsT0FBQSxTQUFBLEtBQUEsS0FBQSxFQUNBLEVBQUEsUUFDQSxFQUFBLFdBR0EsS0FBQSxlQUNBLEtBQUEsa0JBQ0EsTUFBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEtBQUEsTUFBQSxhQUFBLFNBQUEsUUFDQSxPQUFBLElBQUEsRUFBQSxXQUFBLFVBQ0EsRUFBQSxjQUNBLEVBQUEsU0FBQSxFQUNBLEdBQUEsSUFDQSxJQUVBLEVBQUEsV0FBQSxPQUFBLEVBQ0EsRUFBQSxXQUFBLFNBQUEsR0FDQSxFQUFBLGlCQUZBLGdCQVNBLGNBQUEsYUFHQSxTQUFBLFNBQUEsR0FDQSxHQUFBLEVBQUEsUUFBQSxFQUNBLFFBRUEsSUFBQSxNQUNBLEVBQUEsR0FDQSxFQUFBLEdBQ0EsRUFBQSxDQWdCQSxPQWZBLEdBQUEsUUFBQSxTQUFBLEdBQ0EsR0FBQSxFQUFBLE1BQ0EsRUFBQSxHQUFBLEtBQUEsR0FBQSxFQUNBLE1BRUEsRUFBQSxFQUNBLElBQ0EsRUFBQSxFQUFBLEtBQ0EsRUFBQSxJQUNBLEtBQUEsRUFBQSxLQUNBLFNBRUEsRUFBQSxHQUFBLEtBQUEsR0FBQSxLQUdBLE9DNU5BLFFBQUEsT0FBQSxnQkFFQSxRQUFBLGlCQUFBLHFCQUFBLFNBQUEsRUFBQSxHQUNBLEVBQ0EsTUFBQSxTQUNBLElBQUEsSUFDQSxPQUNBLGFBQ0EsWUFBQSxVQUFBLGlCQUlBLE1BQUEsWUFDQSxJQUFBLFlBQ0EsT0FDQSxhQUNBLFlBQUEsVUFBQSxnQkFDQSxXQUFBLHlCQUlBLE1BQUEsU0FDQSxJQUFBLFNBQ0EsT0FDQSxhQUNBLFlBQUEsVUFBQSxpQkFJQSxNQUFBLFNBQ0EsSUFBQSxTQUNBLE9BQ0EsYUFDQSxZQUFBLFVBQUEsYUFDQSxXQUFBLHNCQUlBLE1BQUEsWUFDQSxJQUFBLFlBQ0EsT0FDQSxhQUNBLFlBQUEsVUFBQSxzQkFDQSxXQUFBLHlCQUlBLE1BQUEsV0FDQSxJQUFBLFdBQ0EsT0FDQSxhQUNBLFlBQUEsVUFBQSxlQUNBLFdBQUEsd0JBSUEsTUFBQSxpQkFDQSxJQUFBLHdCQUNBLFNBQ0EsU0FBQSxLQUFBLGVBQUEsWUFBQSxTQUFBLEVBQUEsRUFBQSxHQUNBLEdBQUEsSUFBQSxFQUNBLEVBQUEsRUFBQSxRQUNBLEVBQUEsbUJBQUEsY0FBQSxRQUFBLEtBQUEsTUFBQSxhQUFBLFVBQUEsQ0FDQSxLQUFBLEdBQUEsS0FBQSxHQUNBLEVBQUEsR0FBQSxNQUFBLEVBQUEsT0FDQSxFQUFBLEVBUUEsT0FMQSxHQUNBLEVBQUEsUUFBQSxHQUVBLEVBQUEsS0FBQSxZQUFBLFVBRUEsRUFBQSxXQUdBLE9BQ0EsYUFDQSxZQUFBLFVBQUEscUJBQ0EsV0FBQSw4QkFJQSxNQUFBLGdCQUNBLElBQUEsaUJBQ0EsT0FDQSxhQUNBLFlBQUEsVUFBQSw4QkFDQSxXQUFBLDZCQUlBLE1BQUEsYUFDQSxJQUFBLGNBQ0EsT0FDQSxhQUNBLFlBQUEsVUFBQSwyQkFDQSxXQUFBLDBCQUlBLE1BQUEsaUJBQ0EsSUFBQSxrQkFDQSxPQUNBLGFBQ0EsWUFBQSxVQUFBLHdCQUNBLFdBQUEsd0JBSUEsTUFBQSxXQUNBLElBQUEsV0FDQSxPQUNBLGFBQ0EsWUFBQSxVQUFBLHdCQUNBLFdBQUEsd0JBSUEsTUFBQSxVQUNBLElBQUEsVUFDQSxPQUNBLGFBQ0EsWUFBQSxVQUFBLGtCQUtBLEVBQUEsVUFBQSxjQ2hJQSxJQUFBLFdBQUEscUJBQ0EsU0FBQSxZQUFBLHVCQUFBLFNBQUEsUUFBQSxZQUFBLGVBQUEsV0FBQSxhQUFBLGlCQUFBLEtBQUEsY0FBQSxnQkFBQSxTQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUNBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEdBRUEsRUFBQSxVQUFBLFdBQ0EsSUFDQSxLQUFBLFNBQUEsR0FDQSxFQUFBLFlBQUEsV0FDQSxFQUFBLE9BQUEsSUFDQSxhQUFBLFFBQUEsS0FBQSxVQUFBLEdBQ0EsRUFBQSxRQUFBLEdBRUEsRUFBQSxXQUFBLDBCQUNBLEVBQUEsVUFFQSxTQUFBLEdBQ0EsRUFBQSxHQUNBLEVBQUEsV0FBQSwwQkFDQSxFQUFBLFNBSUEsSUFBQSxHQUFBLFdBQ0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxTQUFBLEdBRUEsUUFBQSxHQUFBLEdBQ0EsTUFBQSxPQUFBLEtBQUEsR0FDQSxXQUNBLFVBQUEsS0FBQSxHQUNBLE9BQ0EsVUFBQSxLQUFBLEdBQ0EsWUFDQSxZQUFBLEtBQUEsR0FDQSxZQURBLE9BUkEsR0FBQSxNQUFBLEVBQUEsQ0FvQ0EsT0F4QkEsR0FBQSxHQUFBLEtBQUEsZ0JBQUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQUEsTUFBQSxLQUFBLEtBQ0EsR0FBQSxJQUNBLEVBQUEsUUFBQSxHQUNBLEVBQUEsSUFDQSxLQUFBLEVBQUEsR0FBQSxHQUFBLE9BQ0EsVUFDQSxJQUFBLEVBQUEsR0FBQSxHQUFBLE9BQ0EsTUFBQSxFQUFBLEdBQUEsR0FBQSxPQUNBLFVBQUEsRUFBQSxHQUFBLEdBQUEsT0FDQSxPQUFBLEVBQUEsRUFBQSxHQUFBLEdBQUEsS0FBQSxPQUFBLEtBQUEsV0FHQSxLQUVBLEVBQUEsRUFBQSxHQUFBLFFBQUEsTUFDQSxJQUFBLEVBQUEsR0FBQSxHQUFBLE9BQ0EsTUFBQSxFQUFBLEdBQUEsR0FBQSxPQUNBLFVBQUEsRUFBQSxHQUFBLEdBQUEsT0FDQSxPQUFBLEVBQUEsRUFBQSxHQUFBLEdBQUEsS0FBQSxPQUFBLEtBQUEsYUFLQSxFQUVBLG9CQUFBLFlBQ0EsRUFBQSxJQUFBLHNDQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsRUFBQSxFQUFBLFFBQ0EsR0FFQSxFQUFBLGFBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxJQUFBLElBQUEsUUFDQSxXQUVBLE1BQUEsR0FBQSxPQUFBLGdDQUdBLEtBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxNQUNBLEVBQUEsRUFBQSxRQUFBLEtBQUEsZ0NBQUEsS0FBQSxVQUVBLFdBQ0EsTUFBQSxHQUFBLE9BQUEsZ0NBRUEsS0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLElBQ0EsRUFBQSxFQUFBLE9BQUEsUUFBQSxLQUFBLDZEQUFBLEtBQUEsUUFBQSxVQUFBLElBRUEsV0FDQSxNQUFBLEdBQUEsT0FBQSxnQ0FFQSxLQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsSUFDQSxFQUFBLEVBQUEsUUFBQSxLQUFBLGlEQUFBLEtBQUEsUUFBQSxVQUFBLElBRUEsV0FDQSxNQUFBLEdBQUEsT0FBQSxnQ0FFQSxLQUFBLFNBQUEsR0FDQSxFQUFBLEVBQUEsRUFBQSxVQUNBLFNBQUEsR0FDQSxFQUFBLE9BTUEsR0FBQSxlQUFBLFdBQUEsR0FDQSxLQUFBLFdBQ0EsRUFBQSxTQUFBLEVBQ0EsbUJBQUEsY0FBQSxRQUNBLEVBQUEsUUFBQSxLQUFBLE1BQUEsYUFBQSxVQUVBLEVBQUEsTUFBQSxZQUFBLDRCQUFBLFlBQUEsSUFDQSxFQUFBLGNBSUEsSUFBQSxHQUFBLFNBQUEsR0FDQSxFQUFBLE9BQ0EsTUFBQSxTQUNBLFNBQUEsSUFFQSxFQUFBLFdBQUEsOEJDM0hBLElBQUEsV0FBQSwwQkFDQSxTQUFBLFlBQUEsdUJBQUEsU0FBQSxRQUFBLFlBQUEsZUFBQSxXQUFBLGFBQUEsaUJBQUEsS0FBQSxjQUFBLGdCQUFBLFNBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQ0EsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FFQSxFQUFBLFVBQUEsV0FDQSxJQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsWUFBQSxhQUNBLGFBQUEsY0FBQSxFQUFBLE9BQUEsS0FFQSxhQUFBLGFBQUEsS0FBQSxVQUFBLEdBQ0EsRUFBQSxpQkFBQSxHQUVBLEVBQUEsT0FDQSxFQUFBLFdBQUEsNkJBRUEsU0FBQSxHQUNBLEVBQUEsR0FDQSxFQUFBLE9BQ0EsRUFBQSxXQUFBLDRCQUlBLElBQUEsR0FBQSxXQUNBLE1BQUEsR0FBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsU0FBQSxHQUVBLElBQUEsR0FEQSxNQUNBLEVBQUEsRUFBQSxFQUFBLEVBQUEsT0FBQSxJQUFBLENBQ0EsR0FBQSxHQUFBLEVBQUEsRUFBQSxJQUFBLEtBQUEsd0JBQUEsTUFDQSxHQUFBLEVBQUEsSUFBQSxLQUFBLHVCQUFBLEtBQUEsU0FBQSxFQUFBLEdBQ0EsRUFBQSxHQUNBLEVBQUEsTUFDQSxLQUFBLEVBQ0EsS0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLEtBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsT0FDQSxJQUFBLEVBQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLE9BQ0EsS0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLEtBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsT0FDQSxLQUFBLEVBQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLE9BQ0EsT0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLFVBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsT0FDQSxLQUFBLFNBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsWUFLQSxNQUFBLEdBQUEsU0FBQSxFQUFBLE9BQUEsRUFBQSxVQUVBLEtBQ0EsRUFBQSxFQUNBLG9CQUFBLFlBQ0EsRUFBQSxJQUFBLG1DQUNBLEtBQUEsU0FBQSxHQUVBLE1BREEsR0FBQSxLQUFBLEVBQUEsTUFDQSxFQUFBLElBQUEsOENBQ0EsR0FDQSxLQUFBLFNBQUEsR0FDQSxFQUFBLEtBQUEsRUFBQSxNQUNBLEVBQUEsRUFBQSxLQUNBLEdBRUEsRUFBQSxhQUNBLEtBQUEsV0FDQSxNQUFBLEdBQUEsSUFBQSxJQUFBLFFBQ0EsV0FFQSxNQUFBLEdBQUEsT0FBQSxnQ0FHQSxLQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsTUFDQSxFQUFBLEVBQUEsUUFBQSxLQUFBLGdDQUFBLEtBQUEsVUFFQSxXQUNBLE1BQUEsR0FBQSxPQUFBLGdDQUVBLEtBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxJQUNBLEVBQUEsRUFBQSxPQUFBLFFBQUEsS0FBQSw2REFBQSxLQUFBLFFBQUEsVUFBQSxJQUVBLFdBQ0EsTUFBQSxHQUFBLE9BQUEsZ0NBRUEsS0FBQSxTQUFBLEdBRUEsTUFEQSxHQUFBLEVBQUEsT0FDQSxFQUFBLElBQUEsRUFBQSxHQUFBLEtBQUEsa0NBQUEsS0FBQSxRQUFBLFVBQUEsSUFDQSxXQUNBLE1BQUEsR0FBQSxPQUFBLGdDQUVBLEtBQUEsU0FBQSxHQUVBLE1BREEsR0FBQSxLQUFBLEVBQUEsUUFDQSxFQUFBLElBQUEsRUFBQSxHQUFBLEtBQUEsa0NBQUEsS0FBQSxRQUFBLFVBQUEsSUFDQSxXQUNBLE1BQUEsR0FBQSxPQUFBLGdDQUVBLEtBQUEsU0FBQSxHQUVBLE1BREEsR0FBQSxLQUFBLEVBQUEsUUFDQSxFQUFBLElBQUEsRUFBQSxHQUFBLEtBQUEsa0NBQUEsS0FBQSxRQUFBLFVBQUEsSUFDQSxXQUNBLE1BQUEsR0FBQSxPQUFBLGdDQUVBLEtBQUEsU0FBQSxHQUNBLEVBQUEsS0FBQSxFQUFBLFFBQ0EsRUFBQSxFQUFBLEtBQ0EsU0FBQSxHQUNBLEVBQUEsT0FNQSxHQUFBLGtCQUFBLEVBQ0EsYUFBQSxhQUNBLEVBQUEsaUJBQUEsS0FBQSxNQUFBLGFBQUEsZUFFQSxFQUFBLE1BQUEsWUFBQSw0QkFBQSxZQUFBLElBQ0EsRUFBQSxZQUdBLElBQUEsR0FBQSxTQUFBLEdBQ0EsRUFBQSxPQUNBLE1BQUEsU0FDQSxTQUFBLElBRUEsRUFBQSxXQUFBLDhCQzVIQSxJQUFBLFdBQUEsdUJBQ0EsU0FBQSxZQUFBLHVCQUFBLFNBQUEsUUFBQSxZQUFBLGVBQUEsV0FBQSxhQUFBLGlCQUFBLEtBQUEsY0FBQSxnQkFBQSxTQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUNBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEdBRUEsR0FBQSxHQUFBLFdBQ0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxTQUFBLEdBQ0EsR0FBQSxLQWdFQSxPQS9EQSxHQUFBLEdBQUEsS0FBQSwwQkFBQSxLQUFBLFNBQUEsR0FDQSxFQUFBLEdBQ0EsRUFBQSxNQUNBLEtBQUEsZUFDQSxLQUFBLEVBQUEsR0FBQSxLQUFBLGtDQUFBLE1BQ0EsUUFBQSxFQUFBLEdBQUEsS0FBQSxzQ0FBQSxNQUNBLEtBQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsT0FDQSxRQUVBLEtBQUEsS0FDQSxNQUFBLEVBQUEsTUFBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLEtBQUEsV0FBQSxTQUVBLEtBQUEsTUFDQSxNQUFBLEVBQUEsTUFBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLEtBQUEsV0FBQSxTQUVBLEtBQUEsWUFDQSxNQUFBLEVBQUEsTUFBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLEtBQUEsV0FBQSxXQUVBLEtBQUEsTUFDQSxNQUFBLEVBQUEsTUFBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLFNBRUEsS0FBQSxRQUNBLE1BQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxXQUFBLFNBRUEsS0FBQSxTQUNBLE1BQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxXQUFBLGNBT0EsRUFBQSxHQUFBLEtBQUEsdUJBQUEsS0FBQSxTQUFBLEdBQ0EsRUFBQSxHQUNBLEVBQUEsTUFDQSxLQUFBLGtCQUNBLEtBQUEsRUFBQSxHQUFBLEtBQUEsa0NBQUEsTUFDQSxRQUFBLEVBQUEsR0FBQSxLQUFBLHNDQUFBLE1BQ0EsS0FBQSxFQUFBLE1BQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLFFBRUEsS0FBQSxNQUNBLE1BQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxXQUFBLFNBRUEsS0FBQSxRQUNBLE1BQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxXQUFBLFNBRUEsS0FBQSxVQUNBLE1BQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxXQUFBLFdBRUEsS0FBQSxVQUNBLE1BQUEsRUFBQSxNQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxXQUFBLFNBRUEsS0FBQSxJQUNBLE1BQUEsTUFFQSxLQUFBLElBQ0EsTUFBQSxXQU1BLEVBRUEsb0JBQUEsYUFDQSxFQUFBLElBQUEseUNBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxFQUFBLEVBQUEsUUFDQSxLQU9BLEdBQUEsVUFBQSxXQUNBLElBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxZQUFBLFlBQ0EsbUJBQUEsY0FBQSxXQUFBLEVBQUEsT0FBQSxLQUNBLGFBQUEsVUFBQSxLQUFBLFVBQUEsR0FDQSxFQUFBLFVBQUEsR0FFQSxFQUFBLFdBQUEsMEJBQ0EsRUFBQSxVQUVBLFNBQUEsR0FDQSxFQUFBLEdBQ0EsRUFBQSxXQUFBLDBCQUNBLEVBQUEsU0FJQSxJQUFBLEdBQUEsU0FBQSxHQUNBLEVBQUEsT0FDQSxNQUFBLFNBQ0EsU0FBQSxJQUVBLEVBQUEsV0FBQSwwQkFHQSxHQUFBLFNBQUEsRUFDQSxFQUFBLGVBQUEsV0FBQSxHQUNBLEtBQUEsV0FDQSxFQUFBLFdBQUEsRUFDQSxtQkFBQSxjQUFBLFVBQ0EsRUFBQSxVQUFBLEtBQUEsTUFBQSxhQUFBLFdBRUEsRUFBQSxNQUFBLFdBQ0EsRUFBQSxNQUFBLFlBQUEsNEJBQUEsWUFBQSxJQUNBLEVBQUEsbUJDbkhBLElBQUEsV0FBQSxxQkFDQSxTQUFBLFlBQUEsY0FBQSxLQUFBLFFBQUEsZ0JBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FFQSxFQUFBLFNBQUEsRUFDQSxFQUFBLGFBQUEsRUFFQSxFQUFBLFVBQUEsV0FDQSxJQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsWUFBQSxhQUNBLGFBQUEsU0FBQSxFQUFBLE9BQUEsS0FDQSxhQUFBLFFBQUEsS0FBQSxVQUFBLEdBQ0EsRUFBQSxZQUFBLEdBRUEsRUFBQSxPQUNBLEVBQUEsV0FBQSw2QkFFQSxTQUFBLEdBQ0EsRUFBQSxHQUNBLEVBQUEsT0FDQSxFQUFBLFdBQUEsNkJBR0EsRUFBQSxRQUFBLFNBQUEsR0FDQSxJQUNBLE1BQUEsR0FBQSxRQUFBLEdBQUEsUUFBQSxzQkFBQSxPQUNBLE1BQUEsR0FDQSxNQUFBLElBSUEsSUFBQSxHQUFBLFdBQ0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxHQUVBLEdBQUEsR0FBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLENBQ0EsS0FDQSxFQUFBLFNBQUEsRUFBQSxHQUFBLEtBQUEscUJBQUEsT0FBQSxNQUFBLFVBQUEsSUFDQSxNQUFBLElBQ0EsR0FBQSxLQUNBLEdBQUEsR0FBQSxLQUFBLHFCQUFBLEtBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLE1BQUEsS0FBQSxLQUNBLEdBQUEsR0FDQSxFQUFBLE1BQ0EsS0FBQSxFQUFBLEdBQUEsR0FBQSxPQUNBLE1BQUEsRUFBQSxHQUFBLEdBQUEsT0FDQSxLQUFBLEVBQUEsR0FBQSxHQUFBLE9BQ0EsSUFBQSxFQUFBLEdBQUEsR0FBQSxPQUNBLE9BQUEsTUFBQSxTQUFBLEVBQUEsR0FBQSxHQUFBLFlBQUEsRUFBQSxFQUFBLFNBQUEsRUFBQSxHQUFBLEdBQUEsUUFDQSxRQUFBLE1BQUEsU0FBQSxFQUFBLEdBQUEsR0FBQSxZQUFBLEVBQUEsRUFBQSxTQUFBLEVBQUEsR0FBQSxHQUFBLE9BQUEsTUFBQSxXQUNBLE9BQUEsTUFBQSxTQUFBLEVBQUEsR0FBQSxHQUFBLFlBQUEsRUFBQSxFQUFBLFNBQUEsRUFBQSxHQUFBLEdBQUEsV0FJQSxJQUFBLElBQ0EsS0FBQSxFQUFBLFNBQUEsR0FDQSxRQUFBLEVBQ0EsV0FBQSxTQUFBLE9BQUEsdUJBR0EsT0FBQSxHQUdBLG9CQUFBLFlBQ0EsRUFBQSxJQUFBLHNDQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsRUFBQSxFQUFBLFFBQ0EsR0FFQSxFQUFBLGFBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxJQUFBLElBQUEsUUFDQSxXQUVBLE1BQUEsR0FBQSxPQUFBLGdDQUdBLEtBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxNQUNBLEVBQUEsRUFBQSxRQUFBLEtBQUEsZ0NBQUEsS0FBQSxVQUVBLFdBQ0EsTUFBQSxHQUFBLE9BQUEsZ0NBRUEsS0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLElBQ0EsRUFBQSxFQUFBLE9BQUEsUUFBQSxLQUFBLDZEQUFBLEtBQUEsUUFBQSxVQUFBLElBRUEsV0FDQSxNQUFBLEdBQUEsT0FBQSxnQ0FFQSxLQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsSUFDQSxFQUFBLEVBQUEsUUFBQSxLQUFBLGlEQUFBLEtBQUEsUUFBQSxVQUFBLElBRUEsV0FDQSxNQUFBLEdBQUEsT0FBQSxnQ0FFQSxLQUFBLFNBQUEsR0FDQSxFQUFBLEVBQUEsRUFBQSxVQUNBLFdBQ0EsRUFBQSxtQ0FNQSxFQUFBLFNBQUEsR0FDQSxFQUFBLE9BQ0EsTUFBQSxTQUNBLFNBQUEsSUFFQSxFQUFBLFdBQUEsMEJBR0EsR0FBQSxlQUFBLFdBQUEsR0FDQSxLQUFBLFdBQ0EsYUFBQSxTQUNBLEVBQUEsWUFBQSxLQUFBLE1BQUEsYUFBQSxTQUNBLFFBQUEsSUFBQSxFQUFBLGVBRUEsRUFBQSxNQUFBLFlBQUEsNEJBQUEsWUFBQSxJQUNBLEVBQUEsa0JDOUhBLElBQUEsV0FBQSxtQkFDQSxTQUFBLGNBQUEsV0FBQSxnQkFBQSx1QkFBQSxhQUFBLFlBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxHQUVBLEVBQUEsVUFBQSxFQUNBLEVBQUEsU0FBQSxHQUVBLEVBQUEsU0FBQSxFQUNBLEVBQUEsV0FBQSxHQUVBLEVBQUEsaUJBQ0EsYUFBQSxJQUdBLEVBQUEsT0FBQSxXQUNBLEdBQUEsRUFBQSxTQUFBLEVBQUEsU0FLQSxDQUNBLEVBQUEsV0FBQSxhQUNBLEVBQUEsU0FBQSxFQUNBLEVBQUEsSUFBQSxJQUFBLE9BQ0EsS0FBQSxTQUFBLEdBQ0EsTUFBQSxFQUFBLE1BQUEsRUFBQSxFQUNBLElBQUEsS0FPQSxPQU5BLEdBQUEsRUFBQSxFQUFBLFFBQUEsa0JBQUEsS0FBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLEVBQUEsTUFBQSxFQUFBLFFBRUEsRUFBQSxVQUFBLEVBQUEsUUFDQSxFQUFBLFlBQUEsRUFBQSxTQUNBLEVBQUEsU0FBQSxVQUNBLEVBQUEsSUFBQSxJQUFBLE9BQUEsSUFDQSxTQUFBLEdBQ0EsRUFBQSxLQUVBLEtBQUEsU0FBQSxHQUNBLEdBQUEsR0FBQSxFQUFBLEVBQUEsUUFBQSxLQUFBLGlDQUVBLE9BQUEsRUFBQSxNQUNBLEVBQUEsR0FDQSxFQUFBLFFBQUEsRUFDQSxFQUFBLEVBQUEsRUFBQSxFQUFBLFFBQUEsS0FBQSxhQUFBLFNBRUEsRUFBQSxTQUFBLEVBQ0EsRUFBQSxXQUFBLEdBTUEsYUFBQSxRQUFBLEtBQUEsV0FDQSxRQUFBLEVBQUEsUUFDQSxTQUFBLEVBQUEsV0FHQSxhQUFBLFNBQUEsRUFDQSxhQUFBLE1BQUEsRUFBQSxPQUNBLEVBQUEsT0FBQSxFQUNBLEVBQUEsVUFBQSxhQUFBLE1BQUEsY0FDQSxFQUFBLFdBQUEsR0FDQSxFQUFBLFNBQUEsRUFDQSxTQUFBLFNBQ0EsRUFBQSxlQUNBLEVBQUEsZ0JBQUEsS0FHQSxFQUVBLElBQUEsR0FBQSxTQUFBLEVBQUEsR0FFQSxFQUFBLFNBQUEsRUFDQSxFQUFBLFdBQUEsR0FDQSxFQUFBLE9BQ0EsTUFBQSxTQUNBLFNBQUEsRUFBQSxFQUFBLDJCQTVEQSxHQUFBLE9BQ0EsTUFBQSxTQUNBLFNBQUEsOENDYkEsSUFBQSxXQUFBLHFCQUNBLFNBQUEsWUFBQSx1QkFBQSxTQUFBLFlBQUEsZUFBQSxXQUFBLGFBQUEsaUJBQUEsS0FBQSxjQUFBLGdCQUFBLFFBQUEsU0FBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxHQUNBLEVBQUEsVUFBQSxFQUNBLEVBQUEsVUFBQSxFQUNBLEVBQUEscUJBQUEsU0FBQSxHQUNBLEVBQUEsbUJBR0EsRUFBQSxVQUFBLG1CQUFBLGNBQUEsUUFBQSxLQUFBLE1BQUEsYUFBQSxVQUFBLENBRUEsSUFBQSxHQUFBLFdBQ0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxTQUFBLEdBQ0EsR0FBQSxLQWFBLE9BWkEsR0FBQSxHQUFBLEtBQUEsNkNBQUEsS0FBQSxTQUFBLEVBQUEsR0FDQSxHQUFBLEdBQUEsRUFBQSxHQUFBLEtBQUEsS0FBQSxPQUNBLEVBQUEsRUFBQSxNQUFBLHVCQUNBLEdBQUEsTUFDQSxVQUFBLEVBQ0EsS0FBQSxFQUFBLEdBQ0EsSUFBQSxFQUFBLEdBQUEsS0FBQSxLQUFBLEtBQUEsUUFDQSxLQUFBLEVBQUEsR0FDQSxVQUFBLEVBQUEsT0FHQSxhQUFBLFFBQUEsS0FBQSxVQUFBLEdBQ0EsRUFHQSxvQkFBQSxZQUNBLEVBQUEsSUFBQSxzQ0FDQSxLQUFBLFNBQUEsR0FDQSxFQUFBLEVBQUEsRUFBQSxRQUNBLEdBRUEsRUFBQSxhQUNBLEtBQUEsV0FDQSxNQUFBLEdBQUEsSUFBQSxJQUFBLFFBQ0EsV0FFQSxNQUFBLEdBQUEsT0FBQSxnQ0FHQSxLQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsTUFDQSxFQUFBLEVBQUEsUUFBQSxLQUFBLGdDQUFBLEtBQUEsVUFFQSxXQUNBLE1BQUEsR0FBQSxPQUFBLGdDQUVBLEtBQUEsU0FBQSxHQUNBLEVBQUEsRUFBQSxFQUFBLE9BQUEsVUFDQSxXQUNBLEVBQUEsZ0NBTUEsR0FBQSxVQUFBLFdBQ0EsSUFDQSxLQUFBLFNBQUEsR0FDQSxFQUFBLFVBQUEsRUFDQSxFQUFBLE9BQ0EsRUFBQSxXQUFBLDJCQUNBLFNBQUEsR0FDQSxFQUFBLElBR0EsSUFBQSxHQUFBLFNBQUEsR0FDQSxFQUFBLE9BQ0EsRUFBQSxPQUNBLE1BQUEsU0FDQSxTQUFBLElBRUEsRUFBQSxXQUFBLDRCQUlBLEVBQUEsWUFDQSxFQUFBLE1BQUEsWUFBQSw0QkFBQSxZQUFBLElBQ0EsRUFBQSxnQkNqRkEsSUFBQSxXQUFBLDJCQUNBLFNBQUEsWUFBQSx1QkFBQSxTQUFBLFlBQUEsUUFBQSx1QkFBQSxlQUFBLFdBQUEsYUFBQSxpQkFBQSxLQUFBLGNBQUEsVUFBQSxXQUFBLGdCQUFBLFNBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFDQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FFQSxFQUFBLFVBQUEsbUJBQUEsY0FBQSxRQUFBLEtBQUEsTUFBQSxhQUFBLFVBQUEsRUFDQSxFQUFBLE9BQ0EsUUFBQSxFQUNBLFNBQUEsR0FFQSxFQUFBLEtBQUEsRUFBQSxVQUFBLEdBQ0EsRUFBQSxTQUFBLEVBRUEsRUFBQSxxQkFDQSxFQUFBLFdBRUEsSUFBQSxHQUFBLFNBQUEsR0FDQSxNQUFBLEdBQUEsU0FBQSxFQUFBLEdBQ0EsR0FBQSxHQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsRUFBQSxHQUFBLEtBQUEsNEJBQUEsT0FDQSxFQUFBLEVBQUEsR0FBQSxLQUFBLDZCQUFBLE9BQ0EsS0FDQSxJQTJDQSxPQTFDQSxHQUFBLEdBQUEsS0FBQSw4REFBQSxLQUFBLFNBQUEsRUFBQSxHQUNBLElBQUEsR0FDQSxFQUFBLE1BQ0EsUUFBQSxTQUFBLEVBQUEsR0FBQSxLQUFBLG1CQUFBLFFBQ0EsS0FBQSxFQUFBLEdBQUEsS0FBQSxtQkFBQSxPQUNBLE9BQUEsRUFBQSxHQUFBLEtBQUEsZ0JBQUEsT0FDQSxLQUFBLEVBQUEsR0FBQSxLQUFBLG1CQUFBLE9BQ0EsTUFBQSxFQUFBLEdBQUEsS0FBQSxvQkFBQSxLQUFBLFlBSUEsRUFBQSxHQUFBLEtBQUEsK0RBQUEsS0FBQSxTQUFBLEVBQUEsR0FDQSxJQUFBLEdBQ0EsRUFBQSxNQUNBLEtBQUEsaUJBQ0EsUUFBQSxTQUFBLEVBQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLFFBQ0EsT0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLE1BQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsT0FDQSxLQUFBLEVBQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLE9BQ0EsU0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLE9BQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxPQUFBLFFBQUEsR0FBQSxFQUNBLFFBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxPQUFBLFFBQUEsR0FBQSxFQUNBLEtBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsS0FBQSxlQUFBLEtBQUEsWUFJQSxFQUFBLEdBQUEsS0FBQSxzRUFBQSxLQUFBLFNBQUEsRUFBQSxHQUNBLElBQUEsR0FDQSxFQUFBLE1BQ0EsS0FBQSx1QkFDQSxRQUFBLFNBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsUUFDQSxPQUFBLEVBQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLE9BQ0EsTUFBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxPQUNBLEtBQUEsRUFBQSxHQUFBLEtBQUEsTUFBQSxHQUFBLEdBQUEsT0FDQSxTQUFBLEVBQUEsR0FBQSxLQUFBLE1BQUEsR0FBQSxHQUFBLE9BQ0EsT0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxLQUFBLE9BQUEsUUFBQSxHQUFBLEVBQ0EsUUFBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxLQUFBLE9BQUEsUUFBQSxHQUFBLEVBQ0EsS0FBQSxFQUFBLEdBQUEsS0FBQSxNQUFBLEdBQUEsR0FBQSxLQUFBLGVBQUEsS0FBQSxhQU1BLGlCQUFBLEVBQ0EsaUJBQUEsRUFDQSxVQUFBLEVBQUEsT0FBQSxFQUFBLEdBQUEsRUFDQSxPQUFBLEdBSUEsb0JBQUEsWUFDQSxFQUFBLElBQUEsNkNBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxFQUFBLEVBQUEsUUFDQSxHQUVBLEVBQUEsYUFDQSxLQUFBLFdBQ0EsTUFBQSxHQUFBLElBQUEsSUFBQSxRQUNBLFdBRUEsTUFBQSxHQUFBLE9BQUEsZ0NBR0EsS0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLE1BQ0EsRUFBQSxFQUFBLFFBQUEsS0FBQSxnQ0FBQSxLQUFBLFVBRUEsV0FDQSxNQUFBLEdBQUEsT0FBQSxnQ0FFQSxLQUFBLFdBQ0EsTUFBQSxHQUFBLElBQUEsZUFBQSxRQUFBLEVBQUEsVUFBQSxJQUNBLFdBQ0EsTUFBQSxHQUFBLE9BQUEsOEJBRUEsS0FBQSxTQUFBLEdBQ0EsRUFBQSxFQUFBLEVBQUEsVUFDQSxXQUNBLEVBQUEsbUNBTUEsb0JBQUEsR0FBQSxVQUFBLEdBQUEsT0FDQSxFQUFBLEVBQUEsVUFBQSxHQUFBLEtBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxVQUFBLEdBQUEsT0FBQSxFQUNBLGFBQUEsUUFBQSxLQUFBLFVBQUEsRUFBQSxXQUNBLEVBQUEsWUFBQSxXQUNBLEVBQUEsTUFBQSxTQUFBLEVBQ0EsRUFBQSxNQUFBLE9BQUEsRUFBQSxVQUFBLEdBQUEsU0FFQSxFQUFBLFdBQUEsMkJBQ0EsSUFFQSxFQUFBLE1BQUEsU0FBQSxFQUNBLEVBQUEsTUFBQSxPQUFBLEVBQUEsVUFBQSxHQUFBLFFBR0EsRUFBQSxVQUFBLFNBQUEsR0FDQSxFQUFBLFNBQUEsRUFDQSxXQUFBLFdBQ0EsRUFBQSxVQUNBLEtBR0EsSUFBQSxHQUFBLFNBQUEsR0FDQSxFQUFBLE9BQ0EsTUFBQSxTQUNBLFNBQUEsSUFFQSxFQUFBLFdBQUEsMEJBR0EsR0FBQSxlQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsU0FBQSxJQUFBLFdBQUEsR0FDQSxFQUFBLEdBQ0EsS0FBQSxTQUFBLEdBQ0EsT0FBQSxLQUFBLEVBQUEsV0FDQSxFQUFBLFNBQUEsSUFBQSxXQUFBLElBQ0EsV0FDQSxFQUFBLFNBQUEsSUFBQSxXQUFBLE1BSUEsRUFBQSxrQkFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLGtCQUFBLElBQUEsV0FBQSxHQUNBLEVBQUEsR0FDQSxLQUFBLFNBQUEsR0FDQSxPQUFBLEtBQUEsRUFBQSxXQUNBLEVBQUEsa0JBQUEsSUFBQSxXQUFBLElBQ0EsV0FDQSxFQUFBLGtCQUFBLElBQUEsV0FBQSxLQUtBLElBQUEsR0FBQSxTQUFBLEdBR0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsYUFDQSxLQUFBLFdBQ0EsTUFBQSxHQUFBLElBQUEsSUFBQSxRQUNBLFdBRUEsTUFBQSxHQUFBLE9BQUEsZ0NBR0EsS0FBQSxTQUFBLEdBQ0EsTUFBQSxHQUFBLE1BQ0EsRUFBQSxFQUFBLFFBQUEsS0FBQSxnQ0FBQSxLQUFBLFVBRUEsV0FDQSxNQUFBLEdBQUEsT0FBQSxnQ0FFQSxLQUFBLFdBQ0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxVQUFBLEdBQUEsSUFBQSxJQUNBLFdBQ0EsTUFBQSxHQUFBLE9BQUEsOEJBRUEsS0FBQSxTQUFBLEdBQ0EsRUFBQSxFQUFBLE9BQUEsV0FDQSxTQUFBLEdBQ0EsRUFBQSxPQUtBLEdBQUEsUUFBQSxXQUVBLEVBQUEsTUFBQSxTQUFBLGtGQUVBLEVBQUEsRUFBQSxVQUFBLEdBQUEsS0FDQSxLQUFBLFNBQUEsR0FDQSxRQUFBLElBQUEsR0FDQSxFQUFBLFVBQUEsR0FBQSxPQUFBLEVBQ0EsYUFBQSxRQUFBLEtBQUEsVUFBQSxFQUFBLFdBQ0EsRUFBQSxZQUFBLFdBQ0EsRUFBQSxNQUFBLFNBQUEsRUFDQSxFQUFBLE1BQUEsT0FBQSxFQUFBLFVBQUEsR0FBQSxTQUVBLEVBQUEsT0FDQSxFQUFBLFVBQ0EsU0FBQSxHQUNBLEVBQUEsT0FDQSxFQUFBLFNDbE5BLElBQUEsV0FBQSxzQkFDQSxTQUFBLGNBQUEsV0FBQSxnQkFBQSxhQUFBLGlCQUFBLFlBQUEsS0FBQSxRQUFBLGdCQUFBLFNBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsR0FFQSxFQUFBLFVBQUEsRUFDQSxFQUFBLFVBQUEsRUFDQSxFQUFBLHFCQUFBLFNBQUEsR0FDQSxFQUFBLG1CQUdBLEVBQUEsU0FBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLFFBRUEsT0FBQSxRQUFBLEdBQUEsT0FBQSxFQUFBLE9BQ0EsUUFHQSxPQUFBLEdBQUEsT0FBQSxFQUFBLElBQUEsRUFBQSxLQUFBLE9BQ0EsV0FHQSxPQUFBLEdBQUEsRUFDQSxXQURBLFFBS0EsRUFBQSxlQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxTQUNBLEVBQUEsSUFDQSxLQUNBLEdBQUEsR0FBQSxFQUFBLE1BQUEsS0FBQSxHQUFBLE1BQUEsS0FDQSxFQUFBLFNBQUEsRUFBQSxJQUNBLEVBQUEsU0FBQSxFQUFBLEdBRUEsR0FBQSxPQUFBLEdBQUEsS0FBQSxHQUFBLE9BQUEsR0FDQSxNQUFBLEdBQ0EsRUFBQSxPQUFBLEdBR0EsTUFBQSxHQUFBLEVBQ0EsV0FEQSxRQUtBLEVBQUEsWUFBQSxFQUNBLEVBQUEsV0FFQSxJQUFBLEdBQUEsU0FBQSxHQUNBLEdBQUEsS0FpQkEsT0FoQkEsR0FBQSxHQUFBLEtBQUEsTUFBQSxLQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsRUFBQSxNQUFBLEtBQUEsS0FDQSxJQUFBLEVBQUEsRUFBQSxDQUNBLEdBQUEsR0FBQSxFQUFBLEdBQUEsR0FBQSxPQUFBLE1BQUEsWUFDQSxHQUFBLE1BQ0EsS0FBQSxFQUFBLEdBQUEsR0FBQSxPQUNBLEtBQUEsRUFBQSxHQUFBLEdBQUEsT0FDQSxNQUFBLEVBQUEsR0FBQSxHQUFBLE9BQ0EsT0FBQSxFQUFBLEdBQ0EsS0FBQSxFQUFBLEdBQ0EsUUFBQSxFQUFBLEdBQUEsR0FBQSxPQUNBLEtBQUEsRUFBQSxHQUFBLEdBQUEsT0FDQSxTQUFBLEVBQUEsR0FBQSxHQUFBLFlBSUEsR0FHQSxFQUFBLFdBQ0EsTUFBQSxHQUFBLFNBQUEsRUFBQSxHQUNBLEdBQUEsR0FBQSxTQUFBLEdBQ0EsR0FBQSxHQUFBLEVBQUEsR0FBQSxLQUFBLFNBQ0EsRUFBQSxFQUFBLEVBQUEsR0FBQSxHQUFBLFFBQ0EsRUFBQSxFQUFBLEVBQUEsR0FBQSxHQUFBLFFBQ0EsRUFBQSxFQUFBLE9BQUEsR0FDQSxFQUFBLEVBQUEsU0FBQSxFQUtBLE9BSkEsR0FBQSxPQUFBLElBQ0EsYUFBQSxPQUFBLEtBQUEsVUFBQSxJQUVBLGFBQUEsV0FBQSxTQUFBLE9BQUEsd0JBRUEsT0FBQSxFQUFBLFdBQUEsYUFBQSxZQUlBLG9CQUFBLFlBQ0EsRUFBQSxJQUFBLHVDQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsRUFBQSxFQUFBLFFBQ0EsR0FFQSxFQUFBLGFBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxJQUFBLElBQUEsUUFDQSxXQUVBLE1BQUEsR0FBQSxPQUFBLGdDQUdBLEtBQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxNQUNBLEVBQUEsRUFBQSxRQUFBLEtBQUEsZ0NBQUEsS0FBQSxVQUVBLFdBQ0EsTUFBQSxHQUFBLE9BQUEsZ0NBRUEsS0FBQSxTQUFBLEdBQ0EsR0FBQSxNQUNBLEVBQUEsRUFBQSxNQUtBLE9BSkEsR0FBQSxFQUFBLEVBQUEsUUFBQSxrQkFBQSxLQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsRUFBQSxNQUFBLEVBQUEsUUFFQSxFQUFBLGNBQUEsd0NBQ0EsRUFBQSxJQUFBLGVBQUEsb0JBQUEsT0FBQSxHQUFBLElBQ0EsV0FDQSxNQUFBLEdBQUEsT0FBQSxtQ0FFQSxLQUFBLFNBQUEsR0FDQSxFQUFBLEVBQUEsRUFBQSxVQUNBLFNBQUEsR0FDQSxFQUFBLE9BNEJBLElBdEJBLEVBQUEsVUFBQSxXQUNBLElBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxPQUNBLEVBQUEsV0FBQSwwQkFDQSxFQUFBLGdCQUNBLEVBQUEsWUFBQSxFQUNBLEVBQUEsU0FBQSxFQUFBLFFBQ0EsU0FBQSxHQUNBLEVBQUEsSUFHQSxJQUFBLEdBQUEsU0FBQSxHQUNBLEVBQUEsT0FDQSxFQUFBLE9BQ0EsTUFBQSxTQUNBLFNBQUEsSUFFQSxFQUFBLFdBQUEsNEJBSUEsYUFBQSxPQUNBLElBQ0EsS0FBQSxNQUFBLGFBQUEsUUFBQSxPQUFBLElBQ0EsRUFBQSxZQUFBLEVBQ0EsRUFBQSxTQUFBLEtBQUEsTUFBQSxhQUFBLFNBRUEsTUFBQSxRQUlBLEdBQUEsTUFBQSxXQUNBLEVBQUEsTUFBQSxZQUFBLDRCQUFBLFlBQUEsSUFDQSxFQUFBLGlCQy9KQSxJQUFBLFdBQUEsc0JBQUEsU0FBQSxZQUFBLHVCQUNBIiwiZmlsZSI6Ind3dy9qcy9jb21waWxlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQklOVVNNQVlBIE1PRFVMRVxuICogQGF1dGhvciBQZWRveCA8bmF1ZmFsQG1hcnRhYmFrYW5nLnVzPlxuICovXG5cblxuLy8gYW5ndWxhci5tb2R1bGUgaXMgYSBnbG9iYWwgcGxhY2UgZm9yIGNyZWF0aW5nLCByZWdpc3RlcmluZyBhbmQgcmV0cmlldmluZyBBbmd1bGFyIG1vZHVsZXNcbi8vICdzdGFydGVyJyBpcyB0aGUgbmFtZSBvZiB0aGlzIGFuZ3VsYXIgbW9kdWxlIGV4YW1wbGUgKGFsc28gc2V0IGluIGEgPGJvZHk+IGF0dHJpYnV0ZSBpbiBpbmRleC5odG1sKVxuLy8gdGhlIDJuZCBwYXJhbWV0ZXIgaXMgYW4gYXJyYXkgb2YgJ3JlcXVpcmVzJ1xuXG52YXIgdmlld19wYXRoID0gJ3ZpZXdzLycsXG4gIHBjb2xvciA9ICcjMUM1MzZGJyxcbiAgX2JpbWF5X3VybCA9ICdodHRwOi8vYmludXNtYXlhLmJpbnVzLmFjLmlkJyxcbiAgX2JpbWF5X2FwaV91cmwgPSAnaHR0cDovL2FwcHMuYmludXNtYXlhLmJpbnVzLmFjLmlkJztcblxudmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdCaW51c01heWEnLCBbJ2lvbmljJywgJ2xpc3RSb3V0ZScsICdCaW51c01heWFGYWN0b3J5J10pXG5cbi5ydW4oZnVuY3Rpb24oJGlvbmljUGxhdGZvcm0sICRyb290U2NvcGUsICRpb25pY0hpc3RvcnksICRpb25pY05hdkJhckRlbGVnYXRlLCBCaW51c01heWEsICR0aW1lb3V0KSB7XG5cbiAgJHJvb3RTY29wZS5sb2dpbiA9ICh0eXBlb2YgbG9jYWxTdG9yYWdlLmlzbG9naW4gPT0gXCJ1bmRlZmluZWRcIiA/IGZhbHNlIDogbG9jYWxTdG9yYWdlLmlzbG9naW4pO1xuICAkcm9vdFNjb3BlLmxlZnRNZW51ID0gZmFsc2U7XG4gICRyb290U2NvcGUucHJvZmlsZVBpY3R1cmUgPSBmYWxzZTtcbiAgJHJvb3RTY29wZS5sb2dpbk5hbWUgPSB0eXBlb2YgbG9jYWxTdG9yYWdlLmZuYW1lID09IFwidW5kZWZpbmVkXCIgPyBudWxsIDogbG9jYWxTdG9yYWdlLmZuYW1lLnRvTG93ZXJDYXNlKCk7XG4gIGRlbGV0ZSBsb2NhbFN0b3JhZ2UuY29va2llO1xuICBkZWxldGUgbG9jYWxTdG9yYWdlLnRlbXBsb2dpbjtcblxuICAkaW9uaWNQbGF0Zm9ybS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAkcm9vdFNjb3BlLm9uTG9hZFN0eWxlID0ge1xuICAgICAgb3BhY2l0eTogMVxuICAgIH07XG4gICAgLy8gSGlkZSB0aGUgYWNjZXNzb3J5IGJhciBieSBkZWZhdWx0IChyZW1vdmUgdGhpcyB0byBzaG93IHRoZSBhY2Nlc3NvcnkgYmFyIGFib3ZlIHRoZSBrZXlib2FyZFxuICAgIC8vIGZvciBmb3JtIGlucHV0cylcbiAgICAvKmlmICh3aW5kb3cuY29yZG92YSAmJiB3aW5kb3cuY29yZG92YS5wbHVnaW5zLktleWJvYXJkKSB7XG4gICAgICBjb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuaGlkZUtleWJvYXJkQWNjZXNzb3J5QmFyKHRydWUpO1xuICAgIH0qL1xuICAgIGlmICh3aW5kb3cuU3RhdHVzQmFyKSB7XG4gICAgICBTdGF0dXNCYXIuc3R5bGVEZWZhdWx0KCk7XG4gICAgfVxuICAgIGlmKGxvY2FsU3RvcmFnZS5pc2xvZ2luKSB7XG4gICAgICBnZXRQcm9maWxlSW1hZ2UoKTsgIFxuICAgIH1cbiAgfSk7XG5cbiAgJHJvb3RTY29wZS5nZXRMYXN0VXBkYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgJHJvb3RTY29wZS5sYXN0VXBkYXRlID0gdHlwZW9mIGxvY2FsU3RvcmFnZS5sYXN0VXBkYXRlID09PSBcInVuZGVmaW5lZFwiID8gXCJXaGF0ZXZlclwiIDogbG9jYWxTdG9yYWdlLmxhc3RVcGRhdGU7XG4gIH07XG4gICRyb290U2NvcGUuZ2V0TGFzdFVwZGF0ZSgpO1xuICAkcm9vdFNjb3BlLmxvZ291dCA9IGZ1bmN0aW9uKCkge1xuICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xuICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJyMvJztcbiAgICAkaW9uaWNIaXN0b3J5LmNsZWFySGlzdG9yeSgpO1xuICAgICRpb25pY05hdkJhckRlbGVnYXRlLnNob3dCYWNrQnV0dG9uKGZhbHNlKTtcbiAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgfTtcblxuICB2YXIgZ2V0UHJvZmlsZUltYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgLyoqIHBlZm9ybSBhdmF0YXIgKiovXG4gICAgaWYobG9jYWxTdG9yYWdlLnByb2ZpbGVQaWN0dXJlKSB7XG4gICAgICAkcm9vdFNjb3BlLnByb2ZpbGVQaWN0dXJlID0gbG9jYWxTdG9yYWdlLnByb2ZpbGVQaWN0dXJlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIGh0dHBjbGllbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIEJpbnVzTWF5YS5wcm9maWxlUGljdHVyZSgpXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgICAgJHRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnByb2ZpbGVQaWN0dXJlID0gZG9uZTtcbiAgICAgICAgICAgICAgJHJvb3RTY29wZS5wcm9maWxlUGljdHVyZSA9IGRvbmU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcblxuICAgICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgXG5cbiAgaWYgKCRyb290U2NvcGUubG9naW4pIHtcbiAgICB3aW5kb3cubG9jYXRpb24uaGFzaCA9ICcvc2NoZWR1bGUnO1xuICB9IGVsc2Uge1xuICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJy8nO1xuICB9XG59KVxuXG4uY29uZmlnKGZ1bmN0aW9uKCRpb25pY0NvbmZpZ1Byb3ZpZGVyKSB7XG4gICRpb25pY0NvbmZpZ1Byb3ZpZGVyLnZpZXdzLmZvcndhcmRDYWNoZShmYWxzZSk7XG4gICRpb25pY0NvbmZpZ1Byb3ZpZGVyLnZpZXdzLm1heENhY2hlKDApO1xufSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnQmludXNNYXlhRmFjdG9yeScsIFtdKVxuXG4uZmFjdG9yeSgnQmludXNNYXlhJywgZnVuY3Rpb24oJHEsICRpb25pY1BvcHVwKSB7XG4gIHJldHVybiB7XG5cbiAgICBfYmltYXlfdXJsOiAnaHR0cDovL2JpbnVzbWF5YS5iaW51cy5hYy5pZCcsXG4gICAgX2JpbWF5X2FwaV91cmw6ICdodHRwOi8vYXBwcy5iaW51c21heWEuYmludXMuYWMuaWQnLFxuXG4gICAgaGVhZGVyczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgX3QgPSB0aGlzO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgQ29va2llOiBsb2NhbFN0b3JhZ2UuY29va2llID8gbG9jYWxTdG9yYWdlLmNvb2tpZSA6IG51bGwsXG4gICAgICAgIE9yaWdpbjogX3QuX2JpbWF5X3VybCxcbiAgICAgICAgUmVmZXJlcjogX3QuX2JpbWF5X3VybFxuICAgICAgfTtcbiAgICB9LFxuICAgIGNoZWNrTG9naW46IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIF90ID0gdGhpcztcbiAgICAgIHZhciBsb2dpbiA9IGxvY2FsU3RvcmFnZS5sb2dpbklkID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UubG9naW5JZCkgOiBmYWxzZTtcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS50ZW1wbG9naW4gPT09IHRydWUpIHtcbiAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICB9IGVsc2UgaWYobG9naW4gPT09IGZhbHNlKSB7XG4gICAgICAgICAgcmVqZWN0KFwicGxlYXNlIGxvZ2luXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBfdC5hcGkoJy8nLCAnZ2V0JylcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgaWYgKGQuY29kZSAhPT0gMjAwKSByZWplY3QoZCk7XG4gICAgICAgICAgICAgIHZhciBkYXRhID0ge307XG4gICAgICAgICAgICAgICQoJChkLnJlc3VsdCkuc2VyaWFsaXplQXJyYXkoKSkuZWFjaChmdW5jdGlvbihpLCBkKSB7XG4gICAgICAgICAgICAgICAgZGF0YVtkLm5hbWVdID0gZC52YWx1ZTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIGRhdGEudHh0VXNlcklkID0gbG9naW4uYmludXNpZDtcbiAgICAgICAgICAgICAgZGF0YS50eHRQYXNzd29yZCA9IGxvZ2luLnBhc3N3b3JkO1xuICAgICAgICAgICAgICBkYXRhLmJ0bkxvZ2luID0gXCJMb2cgSW4gXCI7XG4gICAgICAgICAgICAgIHJldHVybiBfdC5hcGkoJy8nLCAncG9zdCcsIGRhdGEpO1xuICAgICAgICAgICAgfSwgcmVqZWN0KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UudGVtcGxvZ2luID0gdHJ1ZTtcbiAgICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICAgIH0sIHJlamVjdCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgYXBpOiBmdW5jdGlvbihlbmRwb2ludCwgbWV0aG9kLCBwYXJhbXMsIG5vRW5kcG9pbnQsIG5vUmVkaXJlY3QpIHtcbiAgICAgIHZhciBfdCA9IHRoaXM7XG4gICAgICAvKmpzaGludCAtVzAzMCAqL1xuICAgICAgdHlwZW9mIG5vRW5kcG9pbnQgIT09IFwidW5kZWZpbmVkXCIgPyBmYWxzZSA6IHRydWU7XG4gICAgICB2YXIgb3B0aW9ucyA9IHtcbiAgICAgICAgaGVhZGVyczogX3QuaGVhZGVycygpLFxuICAgICAgfTtcbiAgICAgIGlmKHR5cGVvZiBub1JlZGlyZWN0ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIG9wdGlvbnMubm9SZWRpcmVjdCA9IHRydWU7XG4gICAgICB9XG4gICAgICBpZihuYXZpZ2F0b3IuY29ubmVjdGlvbi50eXBlID09IFwibm9uZVwiKSB7XG4gICAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICByZWplY3QoXCJObyBpbnRlcm5ldCBjb25uZWN0aW9uXCIpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAobG9jYWxTdG9yYWdlLmNvb2tpZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBfdC5fZ2V0Q29va2llKClcbiAgICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBfdC5hcGkoZW5kcG9pbnQsIG1ldGhvZCwgcGFyYW1zKTtcbiAgICAgICAgICB9KTsgXG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gJHEoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJnZXRcIikge1xuICAgICAgICAgICAgaHR0cGNsaWVudC5nZXQoKG5vRW5kcG9pbnQgPyBlbmRwb2ludCA6IF90Ll9iaW1heV91cmwgKyBlbmRwb2ludCksIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShkKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfSwgb3B0aW9ucyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGh0dHBjbGllbnQucG9zdCgobm9FbmRwb2ludCA/IGVuZHBvaW50IDogX3QuX2JpbWF5X3VybCArIGVuZHBvaW50KSwgcGFyYW1zLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUoZCk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH0sIG9wdGlvbnMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGRvd25sb2FkOiBmdW5jdGlvbih1cmwsIGZvcm1OYW1lKSB7XG4gICAgICB2YXIgX3QgPSB0aGlzO1xuICAgICAgcmV0dXJuICRxKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByZXR1cm4gX3QuYXBpKF90Ll9iaW1heV9hcGlfdXJsICsnL0xNUy8nKyB1cmwsICdnZXQnLCB7fSwgdHJ1ZSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHZhciBkYXRhID0ge307XG4gICAgICAgICAgJCgkKGQucmVzdWx0KS5zZXJpYWxpemVBcnJheSgpKS5lYWNoKGZ1bmN0aW9uKGksIGUpIHtcbiAgICAgICAgICAgIGRhdGFbZS5uYW1lXSA9IGUudmFsdWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZGF0YVtmb3JtTmFtZSsnLngnXSA9IDE7XG4gICAgICAgICAgZGF0YVtmb3JtTmFtZSsnLnknXSA9IDE7XG4gICAgICAgICAgcmV0dXJuIF90LmFwaShfdC5fYmltYXlfYXBpX3VybCArJy9MTVMvJysgdXJsLCAncG9zdCcsIGRhdGEsIHRydWUsIHRydWUpO1xuICAgICAgICB9LCByZWplY3QpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZWplY3QoZCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICBpZihkLmNvZGUgPT0gMzAyKSB7XG4gICAgICAgICAgICByZXNvbHZlKGQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWplY3QoZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBmcmFtZTogZnVuY3Rpb24odXJsKSB7XG4gICAgICB2YXIgX3QgPSB0aGlzLFxuICAgICAgICBfdXJsID0gJyc7XG4gICAgICByZXR1cm4gJHEoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHJldHVybiBfdC5hcGkodXJsLCAnZ2V0JylcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gX3QuYXBpKCQoZC5yZXN1bHQpLmZpbmQoXCIjY3RsMDBfY3AxX2lmckFwcFwiKS5hdHRyKFwic3JjXCIpLCAnZ2V0Jyk7XG4gICAgICAgICAgfSwgcmVqZWN0KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIF91cmwgPSAkKGQucmVzdWx0KS5maW5kKFwiI2lmckFwcFwiKS5hdHRyKFwic3JjXCIpO1xuICAgICAgICAgICAgcmV0dXJuIF90LmFwaShfdXJsLCAnZ2V0Jywge30sIHRydWUpO1xuICAgICAgICAgIH0sIHJlamVjdClcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICAgICAgdXJsOiBfdXJsLFxuICAgICAgICAgICAgICByZXN1bHQ6IGRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgX2dldENvb2tpZTogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgX3QgPSB0aGlzO1xuICAgICAgcmV0dXJuICRxKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBodHRwY2xpZW50LmdldChfdC5fYmltYXlfdXJsLCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgaWYgKGRhdGEuY29kZSA9PSAyMDApIHtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5jb29raWUgPSBkYXRhLmhlYWRlclsnU2V0LUNvb2tpZSddO1xuICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVqZWN0KGRhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgcHJvZmlsZVBpY3R1cmU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIF90ID0gdGhpcztcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgX3QuY2hlY2tMb2dpbigpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBfdC5mcmFtZSgnLycpO1xuICAgICAgICB9LCByZWplY3QpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHsgXG4gICAgICAgICAgdmFyIHVybCA9ICQoZC5yZXN1bHQucmVzdWx0KS5maW5kKFwiI2N0bDAwX2NwUmlnaHRfdWNQaG90b19pbWdQcm9maWxlUGljXCIpLmF0dHIoXCJzcmNcIik7XG4gICAgICAgICAgaHR0cGNsaWVudC5pbWFnZShfdC5fYmltYXlfYXBpX3VybCArIFwiL2hvbWUvXCIgKyB1cmwsIGZ1bmN0aW9uKGQpIHsgXG4gICAgICAgICAgICByZXNvbHZlKCdkYXRhOmltYWdlL2pwZWc7YmFzZTY0LCcgKyBkLnJlc3VsdC5yZXBsYWNlKC8oXFxyXFxufFxcbnxcXHIpL2dtLFwiXCIpKTtcbiAgICAgICAgICB9LCByZWplY3QsIFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IF90LmhlYWRlcnMoKVxuICAgICAgICAgIH0pO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBwcm9tcHRQYXNzd29yZDogZnVuY3Rpb24obG9jYXRpb24sIHNjb3BlKSB7XG4gICAgICBzY29wZS5wcm9tcHRQYXNzID0ge307XG4gICAgICByZXR1cm4gJHEoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHZhciBteVBvcHVwID0gJGlvbmljUG9wdXAuc2hvdyh7XG4gICAgICAgICAgdGVtcGxhdGU6ICc8cCBuZy1zaG93PVwicHJvbXB0UGFzcy5lcnJvclwiPkluY29ycmVjdCBQYXNzd29yZDwvcD48aW5wdXQgdHlwZT1cInBhc3N3b3JkXCIgY2xhc3M9XCJwcm9tcHRQYXNzLWZvcm1cIiBuZy1tb2RlbD1cInByb21wdFBhc3MucGFzc3dvcmRcIj4nLFxuICAgICAgICAgIHRpdGxlOiAnRW50ZXIgQmludXNtYXlhIFBhc3N3b3JkJyxcbiAgICAgICAgICBzdWJUaXRsZTogJycsXG4gICAgICAgICAgc2NvcGU6IHNjb3BlLFxuICAgICAgICAgIGJ1dHRvbnM6IFt7XG4gICAgICAgICAgICB0ZXh0OiAnQ2FuY2VsJyxcbiAgICAgICAgICAgIG9uVGFwOiBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5oYXNoID0gJyMvJyArIGxvY2F0aW9uO1xuICAgICAgICAgICAgICBteVBvcHVwLmNsb3NlKCk7XG4gICAgICAgICAgICAgIHJlamVjdCgnYmFjaycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgIHRleHQ6ICc8Yj5FbnRlcjwvYj4nLFxuICAgICAgICAgICAgdHlwZTogJ2J1dHRvbi1wb3NpdGl2ZScsXG4gICAgICAgICAgICBvblRhcDogZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICB2YXIgbXlwYXNzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UubG9naW5JZCkucGFzc3dvcmQ7XG4gICAgICAgICAgICAgIGlmIChteXBhc3MgPT0gc2NvcGUucHJvbXB0UGFzcy5wYXNzd29yZCkge1xuICAgICAgICAgICAgICAgIHNjb3BlLnByb21wdFBhc3MgPSB7fTtcbiAgICAgICAgICAgICAgICBzY29wZS5pc0FsbG93ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNjb3BlLnByb21wdFBhc3MuZXJyb3IgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHNjb3BlLnByb21wdFBhc3MucGFzc3dvcmQgPSBcIlwiO1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1dXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBfcmVxdWVzdEVycm9yOiBmdW5jdGlvbihkYXRhKSB7XG5cbiAgICB9LFxuICAgIGdyb3VwaW5nOiBmdW5jdGlvbihfZGF0YSkge1xuICAgICAgaWYgKF9kYXRhLmxlbmd0aCA8PSAwKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICAgIHZhciBtID0gW10sXG4gICAgICAgIHAgPSAnJyxcbiAgICAgICAgYyA9IC0xLFxuICAgICAgICBjaCA9IDA7XG4gICAgICBfZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgaWYgKHAgPT0gZC5kYXRlKSB7XG4gICAgICAgICAgbVtjXS5kYXRhW2NoXSA9IGQ7XG4gICAgICAgICAgY2grKztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjaCA9IDE7XG4gICAgICAgICAgYysrO1xuICAgICAgICAgIHAgPSBkLmRhdGU7XG4gICAgICAgICAgbVtjXSA9IHtcbiAgICAgICAgICAgIGRhdGU6IGQuZGF0ZSxcbiAgICAgICAgICAgIGRhdGE6IFtdXG4gICAgICAgICAgfTtcbiAgICAgICAgICBtW2NdLmRhdGFbMF0gPSBkO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBtO1xuICAgIH1cbiAgfTtcbn0pOyIsImFuZ3VsYXIubW9kdWxlKCdsaXN0Um91dGUnLCBbXSlcblxuLmNvbmZpZyhbJyRzdGF0ZVByb3ZpZGVyJywgJyR1cmxSb3V0ZXJQcm92aWRlcicsIGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcbiAgJHN0YXRlUHJvdmlkZXJcbiAgICAuc3RhdGUoJ2luZGV4Jywge1xuICAgICAgdXJsOiAnLycsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnbG9naW4uaHRtbCdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdzY2hlZHVsZScsIHtcbiAgICAgIHVybDogJy9zY2hlZHVsZScsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnc2NoZWR1bGUuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ1NjaGVkdWxlQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdhYm91dCcsIHtcbiAgICAgIHVybDogJy9hYm91dCcsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnYWJvdXQuaHRtbCdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdmb3J1bScsIHtcbiAgICAgIHVybDogJy9mb3J1bScsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnZm9ydW0uaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ0ZvcnVtQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdzZXJ2aWNlcycsIHtcbiAgICAgIHVybDogJy9zZXJ2aWNlcycsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnc2VydmljZXMvaW5kZXguaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ1NlcnZpY2VzQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdteWNsYXNzJywge1xuICAgICAgdXJsOiAnL215Y2xhc3MnLFxuICAgICAgdmlld3M6IHtcbiAgICAgICAgJ21haW4tdmlldyc6IHtcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogdmlld19wYXRoICsgJ215Y2xhc3MuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ015Q2xhc3NDb250cm9sbGVyJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICAuc3RhdGUoJ215Y2xhc3NEZXRhaWwnLCB7XG4gICAgICB1cmw6ICcvbXljbGFzcy1kZXRhaWwvOmNvZGUnLFxuICAgICAgcmVzb2x2ZToge1xuICAgICAgICBkYXRhc2V0OiBmdW5jdGlvbigkcSwgJHN0YXRlUGFyYW1zLCAkbG9jYXRpb24pIHtcbiAgICAgICAgICB2YXIgX2dvdCA9IGZhbHNlO1xuICAgICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAgICAgdmFyIGNsYXNzRGF0YSA9ICh0eXBlb2YgbG9jYWxTdG9yYWdlLm15Q2xhc3MgIT09IFwidW5kZWZpbmVkXCIgPyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5teUNsYXNzKSA6IGZhbHNlKTtcbiAgICAgICAgICBmb3IgKHZhciBkIGluIGNsYXNzRGF0YSkge1xuICAgICAgICAgICAgaWYgKGNsYXNzRGF0YVtkXS5jb2RlID09ICRzdGF0ZVBhcmFtcy5jb2RlKSB7XG4gICAgICAgICAgICAgIF9nb3QgPSBkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoX2dvdCkge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShfZ290KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9teWNsYXNzJykucmVwbGFjZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHZpZXdzOiB7XG4gICAgICAgICdtYWluLXZpZXcnOiB7XG4gICAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdfcGF0aCArICdteWNsYXNzSW5zaWRlLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdNeUNsYXNzRGV0YWlsQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdleGFtU2NoZWR1bGUnLCB7XG4gICAgICB1cmw6ICcvZXhhbS1zY2hlZHVsZScsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnc2VydmljZXMvZXhhbS1zY2hlZHVsZS5odG1sJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnRXhhbVNjaGVkdWxlQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdleGFtU2NvcmUnLCB7XG4gICAgICB1cmw6ICcvZXhhbS1zY29yZScsXG4gICAgICB2aWV3czoge1xuICAgICAgICAnbWFpbi12aWV3Jzoge1xuICAgICAgICAgIHRlbXBsYXRlVXJsOiB2aWV3X3BhdGggKyAnc2VydmljZXMvZXhhbS1zY29yZS5odG1sJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnRXhhbVNjb3JlQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdmaW5hbmNlU3RhdHVzJywge1xuICAgICAgdXJsOiAnL2ZpbmFuY2Utc3RhdHVzJyxcbiAgICAgIHZpZXdzOiB7XG4gICAgICAgICdtYWluLXZpZXcnOiB7XG4gICAgICAgICAgdGVtcGxhdGVVcmw6IHZpZXdfcGF0aCArICdzZXJ2aWNlcy9iaWxsaW5nLmh0bWwnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdGaW5hbmNlQ29udHJvbGxlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgLnN0YXRlKCdhYnNlbmNlJywge1xuICAgICAgdXJsOiAnL2Fic2VuY2UnLFxuICAgICAgdmlld3M6IHtcbiAgICAgICAgJ21haW4tdmlldyc6IHtcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogdmlld19wYXRoICsgJ3NlcnZpY2VzL2Fic2VuY2UuaHRtbCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ0Fic2VuY2VDb250cm9sbGVyJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICAuc3RhdGUoJ2NvbWluZycsIHtcbiAgICAgIHVybDogJy9jb21pbmcnLFxuICAgICAgdmlld3M6IHtcbiAgICAgICAgJ21haW4tdmlldyc6IHtcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogdmlld19wYXRoICsgJ2NvbWluZy5odG1sJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9jb21pbmdcIik7XG59XSk7XG4iLCJhcHAuY29udHJvbGxlcignQWJzZW5jZUNvbnRyb2xsZXInLFxuICBmdW5jdGlvbigkc2NvcGUsIEJpbnVzTWF5YSwgJGlvbmljTmF2QmFyRGVsZWdhdGUsICRzdGF0ZSwgJGh0dHAsICRsb2NhdGlvbixcbiAgICAkc3RhdGVQYXJhbXMsICR0aW1lb3V0LCAkcm9vdFNjb3BlLCAkaW9uaWNQbGF0Zm9ybSwgJHEsICRpb25pY1BvcHVwLCAkaW9uaWNMb2FkaW5nKSB7XG5cbiAgICAkc2NvcGUuZG9SZWZyZXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICByZWZyZXNoQWJzZW5jZSgpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgICAkc2NvcGUuJGFwcGx5QXN5bmMoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoZG9uZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5hYnNlbmNlID0gSlNPTi5zdHJpbmdpZnkoZG9uZSk7XG4gICAgICAgICAgICAgICRzY29wZS5hYnNlbmNlID0gZG9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XG4gICAgICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZXJySGFuZGxlKGVycik7XG4gICAgICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcbiAgICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHZhciByZWZyZXNoQWJzZW5jZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICRxKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICB2YXIgcmV0dXJuUmVzcG9uc2UgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgdmFyIF9kYXRhID0gW10sIGNvdW50ID0gMDtcbiAgICAgICAgICBmdW5jdGlvbiBnZXRTdGF0dXMoc3RyKSB7XG5cdFx0XHRcdFx0XHRpZigvYmFpay8udGVzdChzdHIpKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiAnYmFsYW5jZWQnO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmKC93YXJuaW5nLy50ZXN0KHN0cikpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuICdjYWxtJztcblx0XHRcdFx0XHRcdH0gZWxzZSBpZigvbWF4aW11bS8udGVzdChzdHIpKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiAnZW5lcmdpemVkJztcblx0XHRcdFx0XHRcdH0gZWxzZSBpZigvb3ZlcmxpbWl0Ly50ZXN0KHN0cikpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuICdhc3NlcnRpdmUnO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cbiAgICAgICAgICAkKGRhdGEpLmZpbmQoJyNycHRUYWJsZSB0cicpLmVhY2goZnVuY3Rpb24oaSwgYSkge1xuICAgICAgICAgICAgdmFyIGh0ID0gJCh0aGlzKS5maW5kKCd0ZCcpO1xuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgIGlmIChodC5sZW5ndGggPj0gOCkge1xuICAgICAgICAgICAgICAgIF9kYXRhW2NvdW50XSA9IHtcbiAgICAgICAgICAgICAgICAgIG5hbWU6IGh0LmVxKDApLmh0bWwoKSxcbiAgICAgICAgICAgICAgICAgIGFic2VuY2U6IFt7XG4gICAgICAgICAgICAgICAgICAgIG1heDogaHQuZXEoMykuaHRtbCgpLFxuICAgICAgICAgICAgICAgICAgICB0b3RhbDogaHQuZXEoNCkuaHRtbCgpLFxuICAgICAgICAgICAgICAgICAgICBjb21wb25lbnQ6IGh0LmVxKDIpLnRleHQoKSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBnZXRTdGF0dXMoaHQuZXEoNSkuZmluZChcImltZ1wiKS5hdHRyKFwic3JjXCIpKVxuICAgICAgICAgICAgICAgICAgfV1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGNvdW50Kys7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgX2RhdGFbY291bnQgLSAxXS5hYnNlbmNlLnB1c2goe1xuICAgICAgICAgICAgICAgICAgbWF4OiBodC5lcSgyKS5odG1sKCksXG4gICAgICAgICAgICAgICAgICB0b3RhbDogaHQuZXEoMykuaHRtbCgpLFxuICAgICAgICAgICAgICAgICAgY29tcG9uZW50OiBodC5lcSgxKS50ZXh0KCksXG4gICAgICAgICAgICAgICAgICBzdGF0dXM6IGdldFN0YXR1cyhodC5lcSg0KS5maW5kKFwiaW1nXCIpLmF0dHIoXCJzcmNcIikpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gX2RhdGE7XG4gICAgICAgIH07XG4gICAgICAgIGlmICh0eXBlb2YgaHR0cGNsaWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICRodHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDoyNTA1L2Fic2VuY2UuaHRtbCcpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUocmV0dXJuUmVzcG9uc2UoZC5kYXRhKSk7XG4gICAgICAgICAgICB9LCByZWplY3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICBcdEJpbnVzTWF5YS5jaGVja0xvZ2luKClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaSgnLycsICdnZXQnKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAvLyBGYWlsIHRvIHJlLWxvZ2luXG4gICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCByZS1hdXRoIHlvdXIgYWNjb3VudFwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgLy8gTG9hZCBUaGVzZSBQYWdlXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5mcmFtZShcbiAgICAgICAgICAgICAgJChkLnJlc3VsdCkuZmluZChcIi5pdGVtQ29udGVudCB1bCBsaTplcSgzKSA+IGFcIikuYXR0cihcImhyZWZcIilcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIG1haW4gZnJhbWVcIik7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaShcbiAgICAgICAgICAgICAgJChkLnJlc3VsdC5yZXN1bHQpLmZpbmQoXCIjY3RsMDBfY3BDb250ZW50X3JwdE1haW5NZW51U3R1ZGVudF9jdGwwMV9saW5rTWVudVN0dWRlbnRcIikuYXR0cihcImhyZWZcIiksICdnZXQnLCB7fSwgdHJ1ZVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbWFpbiBmcmFtZVwiKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJldHVybiBCaW51c01heWEuYXBpKFxuICAgICAgICAgICAgICAkKGQucmVzdWx0KS5maW5kKFwiI2N0bDAwX2NwQ29udGVudF9ycHRTdWJNZW51X2N0bDAyX2xpbmtTdWJNZW51XCIpLmF0dHIoXCJocmVmXCIpLCAnZ2V0Jywge30sIHRydWVcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIG1haW4gZnJhbWVcIik7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihjKSB7XG4gICAgICAgICAgICByZXNvbHZlKHJldHVyblJlc3BvbnNlKGMucmVzdWx0KSk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgQmludXNNYXlhLnByb21wdFBhc3N3b3JkKCdzZXJ2aWNlcycsICRzY29wZSlcbiAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICRzY29wZS5hYnNlbmNlID0gZmFsc2U7XG4gICAgICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZS5hYnNlbmNlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICRzY29wZS5hYnNlbmNlID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuYWJzZW5jZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkaW9uaWNMb2FkaW5nLnNob3coe3RlbXBsYXRlVXJsOiAndmlld3MvbW9kdWxlL2xvYWRpbmcuaHRtbCcsbm9CYWNrZHJvcDogdHJ1ZX0pO1xuICAgICAgICAkc2NvcGUuZG9SZWZyZXNoKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB2YXIgZXJySGFuZGxlID0gZnVuY3Rpb24obXNnKSB7XG4gICAgICAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgIHRpdGxlOiAnT29wcyAhJyxcbiAgICAgICAgdGVtcGxhdGU6IG1zZ1xuICAgICAgfSk7XG4gICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgIH07XG5cbiAgfSk7IiwiYXBwLmNvbnRyb2xsZXIoJ0V4YW1TY2hlZHVsZUNvbnRyb2xsZXInLFxuICBmdW5jdGlvbigkc2NvcGUsIEJpbnVzTWF5YSwgJGlvbmljTmF2QmFyRGVsZWdhdGUsICRzdGF0ZSwgJGh0dHAsICRsb2NhdGlvbiwgXG4gIFx0JHN0YXRlUGFyYW1zLCAkdGltZW91dCwgJHJvb3RTY29wZSwgJGlvbmljUGxhdGZvcm0sICRxLCAkaW9uaWNQb3B1cCwgJGlvbmljTG9hZGluZykge1xuXG4gICAgJHNjb3BlLmRvUmVmcmVzaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVmcmVzaFNjaGVkdWxlKClcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgICRzY29wZS4kYXBwbHlBc3luYyhmdW5jdGlvbigpIHtcbiAgICAgICAgICBcdGlmKCFsb2NhbFN0b3JhZ2UuZXhhbVNjaGVkdWxlIHx8IGRvbmUubGVuZ3RoID4gMClcbiAgICAgICAgICBcdHtcblx0ICAgICAgICAgIFx0bG9jYWxTdG9yYWdlLmV4YW1TY2hlZHVsZSA9IEpTT04uc3RyaW5naWZ5KGRvbmUpO1xuXHQgICAgICAgICAgICAkc2NvcGUuZXhhbVNjaGVkdWxlTGlzdCA9IGRvbmU7XG4gICAgICAgICAgXHR9XG4gICAgICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgICBcdCRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XHRcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZXJySGFuZGxlKGVycik7XG4gICAgICAgICAgJGlvbmljTG9hZGluZy5oaWRlKCk7XG4gICAgICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIHZhciByZWZyZXNoU2NoZWR1bGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIFx0dmFyIHJldHVyblJlc3BvbnNlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgXHRcdHZhciBfZGF0YSA9IFtdO1xuICAgICAgXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgXHRcdFx0dmFyIHRlcm0gPSAkKGRhdGFbaV0pLmZpbmQoXCJ0YWJsZTplcSgyKSB0ciB0ZCBsaVwiKS50ZXh0KCk7XG5cdCAgICAgIFx0XHQkKGRhdGFbaV0pLmZpbmQoXCIudGFibGV3aXRoYm9yZGVyIHRyXCIpLmVhY2goZnVuY3Rpb24oaSwgZCkge1xuXHQgICAgICBcdFx0XHRpZihpID4gMCkge1xuXHRcdCAgICAgIFx0XHRcdF9kYXRhLnB1c2goe1xuXHRcdCAgICAgIFx0XHRcdFx0dGVybTogXHRcdCAgdGVybSxcblx0XHQgICAgICBcdFx0XHRcdGNvZGU6IFx0XHRcdCQoZCkuZmluZChcInRkXCIpLmVxKDApLnRleHQoKSxcblx0XHQgICAgICBcdFx0XHRcdG5hbWU6IFx0XHRcdCQoZCkuZmluZChcInRkXCIpLmVxKDEpLnRleHQoKSxcblx0XHQgICAgICBcdFx0XHRcdHNrczogXHRcdFx0XHQkKGQpLmZpbmQoXCJ0ZFwiKS5lcSgyKS50ZXh0KCksXG5cdFx0ICAgICAgXHRcdFx0XHRkYXRlOiBcdFx0XHQkKGQpLmZpbmQoXCJ0ZFwiKS5lcSgzKS50ZXh0KCksXG5cdFx0ICAgICAgXHRcdFx0XHRob3VyOiBcdFx0XHQkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg0KS50ZXh0KCksXG5cdFx0ICAgICAgXHRcdFx0XHRyb29tOiBcdFx0XHQkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg1KS50ZXh0KCksXG5cdFx0ICAgICAgXHRcdFx0XHRjYW1wdXM6IFx0XHQkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg2KS50ZXh0KCksXG5cdFx0ICAgICAgXHRcdFx0XHRjbGFzc05hbWU6IFx0JChkKS5maW5kKFwidGRcIikuZXEoNykudGV4dCgpLFxuXHRcdCAgICAgIFx0XHRcdFx0c2VhdDogXHRcdFx0cGFyc2VJbnQoJChkKS5maW5kKFwidGRcIikuZXEoOCkudGV4dCgpKVxuXHRcdCAgICAgIFx0XHRcdH0pO1xuXHQgICAgICBcdFx0XHR9XG5cdCAgICAgIFx0XHR9KTtcbiAgICAgIFx0XHR9XG4gICAgICBcdFx0cmV0dXJuIEJpbnVzTWF5YS5ncm91cGluZyhfLnNvcnRCeShfZGF0YSwgJ2RhdGUnKSk7XG4gICAgICBcdH07XG4gICAgICBcdHZhciBkYXRhU2NoZWR1bGUgPSBbXSxcbiAgICAgIFx0XHRcdHNjaGVkdWxlX3VybCA9IFwiXCI7XG4gICAgICBcdGlmICh0eXBlb2YgaHR0cGNsaWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICRodHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDoyNTA1L2V4YW0uaHRtbCcpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICBcdGRhdGFTY2hlZHVsZS5wdXNoKGQuZGF0YSk7XG4gICAgICAgICAgICAgIHJldHVybiAkaHR0cC5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MjUwNS9leGFtLXByYWN0aWN1bS5odG1sJyk7XG4gICAgICAgICAgICB9LCByZWplY3QpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBcdGRhdGFTY2hlZHVsZS5wdXNoKGUuZGF0YSk7XG4gICAgICAgICAgICAgIHJlc29sdmUocmV0dXJuUmVzcG9uc2UoZGF0YVNjaGVkdWxlKSk7XG4gICAgICAgICAgICB9LCByZWplY3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICBcdEJpbnVzTWF5YS5jaGVja0xvZ2luKClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaSgnLycsICdnZXQnKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAvLyBGYWlsIHRvIHJlLWxvZ2luXG4gICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCByZS1hdXRoIHlvdXIgYWNjb3VudFwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgXHQvLyBMb2FkIFRoZXNlIFBhZ2VcbiAgICAgICAgICBcdC50aGVuKGZ1bmN0aW9uKGQpIHtcblx0ICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5mcmFtZShcblx0ICAgICAgICAgICAgICAkKGQucmVzdWx0KS5maW5kKFwiLml0ZW1Db250ZW50IHVsIGxpOmVxKDMpID4gYVwiKS5hdHRyKFwiaHJlZlwiKVxuXHQgICAgICAgICAgICApO1xuXHQgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG5cdCAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbWFpbiBmcmFtZVwiKTtcblx0ICAgICAgICAgIH0pXG5cdCAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgIHJldHVybiBCaW51c01heWEuYXBpKFxuICAgICAgICAgICAgICAgICQoZC5yZXN1bHQucmVzdWx0KS5maW5kKFwiI2N0bDAwX2NwQ29udGVudF9ycHRNYWluTWVudVN0dWRlbnRfY3RsMDJfbGlua01lbnVTdHVkZW50XCIpLmF0dHIoXCJocmVmXCIpLCAnZ2V0Jywge30sIHRydWVcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIG1haW4gZnJhbWVcIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgXHRzY2hlZHVsZV91cmwgPSBkLnJlc3VsdDtcbiAgICAgICAgICAgIFx0cmV0dXJuIEJpbnVzTWF5YS5hcGkoJChzY2hlZHVsZV91cmwpLmZpbmQoXCIuaXRlbUNvbnRlbnRTZXJ2aWNlIGxpOmVxKDApIGFcIikuYXR0cihcImhyZWZcIiksICdnZXQnLCB7fSwgdHJ1ZSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IGFjY2VzcyB0byBtYWluIGZyYW1lXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIFx0ZGF0YVNjaGVkdWxlLnB1c2goZC5yZXN1bHQpO1xuICAgICAgICAgICAgXHRyZXR1cm4gQmludXNNYXlhLmFwaSgkKHNjaGVkdWxlX3VybCkuZmluZChcIi5pdGVtQ29udGVudFNlcnZpY2UgbGk6ZXEoMSkgYVwiKS5hdHRyKFwiaHJlZlwiKSwgJ2dldCcsIHt9LCB0cnVlKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIG1haW4gZnJhbWVcIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgXHRkYXRhU2NoZWR1bGUucHVzaChkLnJlc3VsdCk7XG4gICAgICAgICAgICBcdHJldHVybiBCaW51c01heWEuYXBpKCQoc2NoZWR1bGVfdXJsKS5maW5kKFwiLml0ZW1Db250ZW50U2VydmljZSBsaTplcSgyKSBhXCIpLmF0dHIoXCJocmVmXCIpLCAnZ2V0Jywge30sIHRydWUpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbWFpbiBmcmFtZVwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICBcdGRhdGFTY2hlZHVsZS5wdXNoKGQucmVzdWx0KTtcbiAgICAgICAgICAgIFx0cmVzb2x2ZShyZXR1cm5SZXNwb25zZShkYXRhU2NoZWR1bGUpKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuZXhhbVNjaGVkdWxlTGlzdCA9IGZhbHNlO1xuICAgIGlmIChsb2NhbFN0b3JhZ2UuZXhhbVNjaGVkdWxlKSB7XG4gICAgICAkc2NvcGUuZXhhbVNjaGVkdWxlTGlzdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmV4YW1TY2hlZHVsZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICRpb25pY0xvYWRpbmcuc2hvdyh7dGVtcGxhdGVVcmw6ICd2aWV3cy9tb2R1bGUvbG9hZGluZy5odG1sJyxub0JhY2tkcm9wOiB0cnVlfSk7XG4gICAgICAkc2NvcGUuZG9SZWZyZXNoKCk7XG4gICAgfVxuXG4gICAgdmFyIGVyckhhbmRsZSA9IGZ1bmN0aW9uKG1zZykge1xuICAgICAgJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICB0aXRsZTogJ09vcHMgIScsXG4gICAgICAgIHRlbXBsYXRlOiBtc2dcbiAgICAgIH0pO1xuICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcbiAgICB9O1xuXG4gIH0pOyIsImFwcC5jb250cm9sbGVyKCdFeGFtU2NvcmVDb250cm9sbGVyJyxcbiAgZnVuY3Rpb24oJHNjb3BlLCBCaW51c01heWEsICRpb25pY05hdkJhckRlbGVnYXRlLCAkc3RhdGUsICRodHRwLCAkbG9jYXRpb24sXG4gICAgJHN0YXRlUGFyYW1zLCAkdGltZW91dCwgJHJvb3RTY29wZSwgJGlvbmljUGxhdGZvcm0sICRxLCAkaW9uaWNQb3B1cCwgJGlvbmljTG9hZGluZykge1xuXG4gICAgdmFyIHJlZnJlc2hFeGFtU2NvcmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIFx0dmFyIHJldHVyblJlc3BvbnNlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgXHRcdHZhciBfcmVkYXRhID0gW107XG4gICAgICBcdFx0JChkYXRhKS5maW5kKFwiLnRhYmxlYm9yZGVyc21hbGxlciB0clwiKS5lYWNoKGZ1bmN0aW9uIChpLCBkKSB7XG4gICAgICBcdFx0XHRpZihpID4gMCkge1xuICAgICAgXHRcdFx0XHRfcmVkYXRhLnB1c2goe1xuICAgICAgXHRcdFx0XHRcdHRlcm06ICdUaGVvcnkgU2NvcmUnLFxuICAgICAgXHRcdFx0XHRcdHllYXI6ICQoZGF0YSkuZmluZChcIiNjdGwwMF9jcENvbnRlbnRfZGRsUGVyaW9kWWVhclwiKS52YWwoKSxcbiAgICAgIFx0XHRcdFx0XHRzbWVzdGVyOiAkKGRhdGEpLmZpbmQoXCIjY3RsMDBfY3BDb250ZW50X2RkbFBlcmlvZFNlbWVzdGVyXCIpLnZhbCgpLFxuICAgICAgXHRcdFx0XHRcdG5hbWU6ICQodGhpcykuZmluZChcInRkXCIpLmVxKDEpLnRleHQoKSxcbiAgICAgIFx0XHRcdFx0XHRkYXRhOiBbXG4gICAgICBcdFx0XHRcdFx0XHRbe1xuICAgICAgXHRcdFx0XHRcdFx0XHRuYW1lOiAnVE0nLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoNSkuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9LCB7XG4gICAgICBcdFx0XHRcdFx0XHRcdG5hbWU6ICdNSUQnLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoNikuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9LCB7XG4gICAgICBcdFx0XHRcdFx0XHRcdG5hbWU6ICdQcmFjdGljdW0nLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoNykuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9XSxbe1xuICAgICAgXHRcdFx0XHRcdFx0XHRuYW1lOiAnU0tTJyxcbiAgICAgIFx0XHRcdFx0XHRcdFx0dmFsdWU6ICQodGhpcykuZmluZChcInRkXCIpLmVxKDIpLnRleHQoKVxuICAgICAgXHRcdFx0XHRcdFx0fSwge1xuICAgICAgXHRcdFx0XHRcdFx0XHRuYW1lOiAnRmluYWwnLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoOCkuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9LCB7XG4gICAgICBcdFx0XHRcdFx0XHRcdG5hbWU6ICdSZXN1bHQnLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoOSkuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9XVxuICAgICAgXHRcdFx0XHRcdF1cbiAgICAgIFx0XHRcdFx0fSk7XG4gICAgICBcdFx0XHR9XG4gICAgICBcdFx0fSk7XG5cblx0XHRcdFx0XHQkKGRhdGEpLmZpbmQoXCIudGFibGV3aXRoYm9yZGVyIHRyXCIpLmVhY2goZnVuY3Rpb24gKGksIGQpIHtcbiAgICAgIFx0XHRcdGlmKGkgPiAwKSB7XG4gICAgICBcdFx0XHRcdF9yZWRhdGEucHVzaCh7XG4gICAgICBcdFx0XHRcdFx0dGVybTogJ1ByYWN0aWN1bSBTY29yZScsXG4gICAgICBcdFx0XHRcdFx0eWVhcjogJChkYXRhKS5maW5kKFwiI2N0bDAwX2NwQ29udGVudF9kZGxQZXJpb2RZZWFyXCIpLnZhbCgpLFxuICAgICAgXHRcdFx0XHRcdHNtZXN0ZXI6ICQoZGF0YSkuZmluZChcIiNjdGwwMF9jcENvbnRlbnRfZGRsUGVyaW9kU2VtZXN0ZXJcIikudmFsKCksXG4gICAgICBcdFx0XHRcdFx0bmFtZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoMSkudGV4dCgpLFxuICAgICAgXHRcdFx0XHRcdGRhdGE6IFtcbiAgICAgIFx0XHRcdFx0XHRcdFt7XG4gICAgICBcdFx0XHRcdFx0XHRcdG5hbWU6ICdNSUQnLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoMykuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9LCB7XG4gICAgICBcdFx0XHRcdFx0XHRcdG5hbWU6ICdGaW5hbCcsXG4gICAgICBcdFx0XHRcdFx0XHRcdHZhbHVlOiAkKHRoaXMpLmZpbmQoXCJ0ZFwiKS5lcSg0KS5maW5kKFwiYTpmaXJzdFwiKS50ZXh0KClcbiAgICAgIFx0XHRcdFx0XHRcdH0sIHtcbiAgICAgIFx0XHRcdFx0XHRcdFx0bmFtZTogJ1Byb2plY3QnLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJCh0aGlzKS5maW5kKFwidGRcIikuZXEoNSkuZmluZChcImE6Zmlyc3RcIikudGV4dCgpXG4gICAgICBcdFx0XHRcdFx0XHR9XSxbe1xuICAgICAgXHRcdFx0XHRcdFx0XHRuYW1lOiAnUHJvamVjdCcsXG4gICAgICBcdFx0XHRcdFx0XHRcdHZhbHVlOiAkKHRoaXMpLmZpbmQoXCJ0ZFwiKS5lcSg2KS5maW5kKFwiYTpmaXJzdFwiKS50ZXh0KClcbiAgICAgIFx0XHRcdFx0XHRcdH0sIHtcbiAgICAgIFx0XHRcdFx0XHRcdFx0bmFtZTogJyAnLFxuICAgICAgXHRcdFx0XHRcdFx0XHR2YWx1ZTogJyAnXG4gICAgICBcdFx0XHRcdFx0XHR9LCB7XG4gICAgICBcdFx0XHRcdFx0XHRcdG5hbWU6ICcgJyxcbiAgICAgIFx0XHRcdFx0XHRcdFx0dmFsdWU6ICcgJ1xuICAgICAgXHRcdFx0XHRcdFx0fV1cbiAgICAgIFx0XHRcdFx0XHRdXG4gICAgICBcdFx0XHRcdH0pO1xuICAgICAgXHRcdFx0fVxuICAgICAgXHRcdH0pO1xuICAgICAgXHRcdHJldHVybiBfcmVkYXRhO1xuICAgICAgXHR9O1xuICAgICAgXHRpZiAodHlwZW9mIGh0dHBjbGllbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcdFxuICAgICAgICAgICRodHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDoyNTA1L2V4YW0tc2NvcmUuaHRtbCcpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUocmV0dXJuUmVzcG9uc2UoZC5kYXRhKSk7XG4gICAgICAgICAgICB9LCByZWplY3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICBcdFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgXHR9O1xuXG4gIFx0JHNjb3BlLmRvUmVmcmVzaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVmcmVzaEV4YW1TY29yZSgpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgICAkc2NvcGUuJGFwcGx5QXN5bmMoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZS5leGFtU2NvcmUgIT09IFwidW5kZWZpbmVkXCIgfHwgZG9uZS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5leGFtU2NvcmUgPSBKU09OLnN0cmluZ2lmeShkb25lKTtcbiAgICAgICAgICAgICAgJHNjb3BlLmV4YW1TY29yZSA9IGRvbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgICAgICAgICAgJGlvbmljTG9hZGluZy5oaWRlKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGVyckhhbmRsZShlcnIpO1xuICAgICAgICAgICRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XG4gICAgICAgICAgJGlvbmljTG9hZGluZy5oaWRlKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZXJySGFuZGxlID0gZnVuY3Rpb24obXNnKSB7XG4gICAgICAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgIHRpdGxlOiAnT29wcyAhJyxcbiAgICAgICAgdGVtcGxhdGU6IG1zZ1xuICAgICAgfSk7XG4gICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgIH07XG5cbiAgICAkc2NvcGUuaXNBbGxvdyA9IGZhbHNlO1xuICAgIEJpbnVzTWF5YS5wcm9tcHRQYXNzd29yZCgnc2VydmljZXMnLCAkc2NvcGUpXG4gICAgLnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0XHQkc2NvcGUuZXhhbVNjb3JlID0gZmFsc2U7XG5cdCAgICBpZiAodHlwZW9mIGxvY2FsU3RvcmFnZS5leGFtU2NvcmUgIT09IFwidW5kZWZpbmVkXCIpIHtcblx0ICAgICAgJHNjb3BlLmV4YW1TY29yZSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmV4YW1TY29yZSk7XG5cdCAgICB9IGVsc2Uge1xuXHQgICAgXHQkaW9uaWNQbGF0Zm9ybS5yZWFkeShmdW5jdGlvbigpIHtcblx0ICAgICAgICAkaW9uaWNMb2FkaW5nLnNob3coe3RlbXBsYXRlVXJsOiAndmlld3MvbW9kdWxlL2xvYWRpbmcuaHRtbCcsbm9CYWNrZHJvcDogdHJ1ZX0pO1xuXHQgICAgICAgICRzY29wZS5kb1JlZnJlc2goKTtcblx0ICAgICAgfSk7XG5cdCAgICB9XG4gICAgfSk7XG5cbiAgfSk7IiwiLyoqXG4gKiBGaW5hbmNlIENvbnRyb2xsZXJcbiAqIEBhdXRob3IgTmF1ZmFsIDxuYXVmYWxAbWFydGFiYWthbmcudXM+XG4gKi9cbmFwcC5jb250cm9sbGVyKCdGaW5hbmNlQ29udHJvbGxlcicsXG4gIGZ1bmN0aW9uKCRzY29wZSwgQmludXNNYXlhLCAkaW9uaWNQb3B1cCwgJHEsICRodHRwLCAkaW9uaWNMb2FkaW5nKSB7XG5cbiAgICAkc2NvcGUuaXNBbGxvdyA9IGZhbHNlO1xuICAgICRzY29wZS5maW5hbmNlTGlzdCA9IGZhbHNlO1xuXG4gICAgJHNjb3BlLmRvUmVmcmVzaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmVmcmVzaEZpbmFuY2UoKVxuICAgICAgICAudGhlbihmdW5jdGlvbihkb25lKSB7XG4gICAgICAgICAgJHNjb3BlLiRhcHBseUFzeW5jKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYoIWxvY2FsU3RvcmFnZS5maW5hbmNlIHx8IGRvbmUubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UuZmluYW5jZSA9IEpTT04uc3RyaW5naWZ5KGRvbmUpO1xuICAgICAgICAgICAgICAkc2NvcGUuZmluYW5jZUxpc3QgPSBkb25lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJGlvbmljTG9hZGluZy5oaWRlKCk7XG4gICAgICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBlcnJIYW5kbGUoZXJyKTtcbiAgICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgICRzY29wZS50b01vbmV5ID0gZnVuY3Rpb24obikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIG4udG9GaXhlZCgyKS5yZXBsYWNlKC8oXFxkKSg/PShcXGR7M30pK1xcLikvZywgJyQxLCcpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIHJlZnJlc2hGaW5hbmNlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gJHEoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG5cbiAgICAgICAgdmFyIHJldHVyblJlc3BvbnNlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIHZhciBiaWxsaW5nID0gMDtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgYmlsbGluZyA9IHBhcnNlSW50KCQoZGF0YSkuZmluZChcInRhYmxlOmVxKDApIHRyIHRkXCIpLmh0bWwoKS5tYXRjaCgvWzAtOV0rLylbMF0pO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgICAgdmFyIGhhc2lsID0gW107XG4gICAgICAgICAgJChkYXRhKS5maW5kKCd0YWJsZSNycHRUYWJsZSB0cicpLmVhY2goZnVuY3Rpb24oaSwgYSkge1xuICAgICAgICAgICAgdmFyIGh0ID0gJCh0aGlzKS5maW5kKCd0ZCcpO1xuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgIGhhc2lsLnB1c2goe1xuICAgICAgICAgICAgICAgIGRhdGU6IGh0LmVxKDEpLmh0bWwoKSxcbiAgICAgICAgICAgICAgICB0aXRsZTogaHQuZXEoMikuaHRtbCgpLFxuICAgICAgICAgICAgICAgIHRlcm06IGh0LmVxKDMpLmh0bWwoKSxcbiAgICAgICAgICAgICAgICBkdWU6IGh0LmVxKDQpLmh0bWwoKSxcbiAgICAgICAgICAgICAgICBjaGFyZ2U6IGlzTmFOKHBhcnNlSW50KGh0LmVxKDUpLmh0bWwoKSkpID09PSB0cnVlID8gMCA6IHBhcnNlSW50KGh0LmVxKDUpLmh0bWwoKSksXG4gICAgICAgICAgICAgICAgcGF5bWVudDogaXNOYU4ocGFyc2VJbnQoaHQuZXEoNikuaHRtbCgpKSkgPT09IHRydWUgPyAwIDogcGFyc2VJbnQoaHQuZXEoNikuaHRtbCgpLm1hdGNoKC9bMC05XSsvKSksXG4gICAgICAgICAgICAgICAgcmVmdW5kOiBpc05hTihwYXJzZUludChodC5lcSg3KS5odG1sKCkpKSA9PT0gdHJ1ZSA/IDAgOiBwYXJzZUludChodC5lcSg3KS5odG1sKCkpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIHZhciBmaW5hbF9kYXRhID0ge1xuICAgICAgICAgICAgZGF0YTogQmludXNNYXlhLmdyb3VwaW5nKGhhc2lsKSxcbiAgICAgICAgICAgIGJpbGxpbmc6IGJpbGxpbmcsXG4gICAgICAgICAgICBsYXN0VXBkYXRlOiBtb21lbnQoKS5mb3JtYXQoJ0QgTU1NTSBZWVlZIGg6bW06c3MnKVxuICAgICAgICAgIH07XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIGZpbmFsX2RhdGE7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHR5cGVvZiBodHRwY2xpZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgJGh0dHAuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjI1MDUvZmluYW5jZS5odG1sJylcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShyZXR1cm5SZXNwb25zZShkLmRhdGEpKTtcbiAgICAgICAgICAgIH0sIHJlamVjdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQmludXNNYXlhLmNoZWNrTG9naW4oKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBCaW51c01heWEuYXBpKCcvJywgJ2dldCcpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIC8vIEZhaWwgdG8gcmUtbG9naW5cbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IHJlLWF1dGggeW91ciBhY2NvdW50XCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAvLyBMb2FkIFRoZXNlIFBhZ2VcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmZyYW1lKFxuICAgICAgICAgICAgICAkKGQucmVzdWx0KS5maW5kKFwiLml0ZW1Db250ZW50IHVsIGxpOmVxKDMpID4gYVwiKS5hdHRyKFwiaHJlZlwiKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbWFpbiBmcmFtZVwiKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaShcbiAgICAgICAgICAgICAgICAkKGQucmVzdWx0LnJlc3VsdCkuZmluZChcIiNjdGwwMF9jcENvbnRlbnRfcnB0TWFpbk1lbnVTdHVkZW50X2N0bDA2X2xpbmtNZW51U3R1ZGVudFwiKS5hdHRyKFwiaHJlZlwiKSwgJ2dldCcsIHt9LCB0cnVlXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IGFjY2VzcyB0byBtYWluIGZyYW1lXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5hcGkoXG4gICAgICAgICAgICAgICAgJChkLnJlc3VsdCkuZmluZChcIiNjdGwwMF9jcENvbnRlbnRfcnB0U3ViTWVudV9jdGwwM19saW5rU3ViTWVudVwiKS5hdHRyKFwiaHJlZlwiKSwgJ2dldCcsIHt9LCB0cnVlXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IGFjY2VzcyB0byBtYWluIGZyYW1lXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGMpIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShyZXR1cm5SZXNwb25zZShjLnJlc3VsdCkpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJlamVjdChcImNhbid0IGFjY2VzcyB0byBtYWluIGZyYW1lXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2YXIgZXJySGFuZGxlID0gZnVuY3Rpb24obXNnKSB7XG4gICAgICAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgIHRpdGxlOiAnT29wcyAhJyxcbiAgICAgICAgdGVtcGxhdGU6IG1zZ1xuICAgICAgfSk7XG4gICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgIH07XG5cbiAgICBCaW51c01heWEucHJvbXB0UGFzc3dvcmQoJ3NlcnZpY2VzJywgJHNjb3BlKVxuICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKGxvY2FsU3RvcmFnZS5maW5hbmNlKSB7XG4gICAgICAgICRzY29wZS5maW5hbmNlTGlzdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmZpbmFuY2UpO1xuICAgICAgICBjb25zb2xlLmxvZygkc2NvcGUuZmluYW5jZUxpc3QpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJGlvbmljTG9hZGluZy5zaG93KHt0ZW1wbGF0ZVVybDogJ3ZpZXdzL21vZHVsZS9sb2FkaW5nLmh0bWwnLG5vQmFja2Ryb3A6IHRydWV9KTtcbiAgICAgICAgJHNjb3BlLmRvUmVmcmVzaCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4pOyIsImFwcC5jb250cm9sbGVyKCdMb2dpbkNvbnRyb2xsZXInLFxuZnVuY3Rpb24oJHNjb3BlLCAkaW9uaWNQb3B1cCwgJHRpbWVvdXQsICRpb25pY0hpc3RvcnksICRpb25pY05hdkJhckRlbGVnYXRlLCAkcm9vdFNjb3BlLCBCaW51c01heWEpIHtcblxuICAgICRyb290U2NvcGUubm9IZWFkZXIgPSB0cnVlO1xuICAgICRpb25pY05hdkJhckRlbGVnYXRlLnNob3dCYXIoZmFsc2UpO1xuXG4gICAgJHNjb3BlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAkc2NvcGUubG9naW5DbGFzcyA9ICcnO1xuXG4gICAgJGlvbmljSGlzdG9yeS5uZXh0Vmlld09wdGlvbnMoe1xuICAgICAgZGlzYWJsZUJhY2s6IHRydWVcbiAgICB9KTtcblxuICAgICRzY29wZS5zdWJtaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghKCRzY29wZS5iaW51c2lkICYmICRzY29wZS5wYXNzd29yZCkpIHtcbiAgICAgICAgJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICAgIHRpdGxlOiAnT29wcyAhJyxcbiAgICAgICAgICB0ZW1wbGF0ZTogJ1BsZWFzZSBJbnB1dCBCaW51c2lhbiBJRCBhbmQgUGFzc3dvcmQnXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJHNjb3BlLmxvZ2luQ2xhc3MgPSAnb24tbG9hZGluZyc7XG4gICAgICAgICRzY29wZS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgQmludXNNYXlhLmFwaSgnLycsICdnZXQnKVxuICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgaWYoZC5jb2RlICE9PSAyMDApIGhhbmRsZUVycm9yKGQpO1xuICAgICAgICAgIHZhciBkYXRhID0ge307XG4gICAgICAgICAgJCgkKGQucmVzdWx0KS5zZXJpYWxpemVBcnJheSgpKS5lYWNoKGZ1bmN0aW9uKGksIGQpIHtcbiAgICAgICAgICAgIGRhdGFbZC5uYW1lXSA9IGQudmFsdWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZGF0YS50eHRVc2VySWQgPSAkc2NvcGUuYmludXNpZDtcbiAgICAgICAgICBkYXRhLnR4dFBhc3N3b3JkID0gJHNjb3BlLnBhc3N3b3JkO1xuICAgICAgICAgIGRhdGEuYnRuTG9naW4gPSBcIkxvZyBJbiBcIjtcbiAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaSgnLycsICdwb3N0JywgZGF0YSk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICBoYW5kbGVFcnJvcihlKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHZhciBuYW1lID0gJChkLnJlc3VsdCkuZmluZChcIiNjb250ZW50ICN0b3BiYXIgLnJpZ2h0IHN0cm9uZ1wiKTtcbiAgICAgICAgICAvLyBXaGVuIFN1Y2Nlc3NcbiAgICAgICAgICBpZihkLmNvZGUgIT09IDIwMClcbiAgICAgICAgICAgIGhhbmRsZUVycm9yKGQpO1xuICAgICAgICAgIGlmKG5hbWUubGVuZ3RoIDw9IDApIHtcbiAgICAgICAgICAgIGhhbmRsZUVycm9yKGQsICQoZC5yZXN1bHQpLmZpbmQoXCIjbGJsRXJyb3JcIikudGV4dCgpKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJHNjb3BlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICRzY29wZS5sb2dpbkNsYXNzID0gJyc7XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogSSBUaGluayB0aGF0IG5vdCBiZXN0IG1ldGhvZFxuICAgICAgICAgICAgICogQHRvZG8gbWFrZSBpdCBoYXNoXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5sb2dpbklkID0gSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICBiaW51c2lkOiAkc2NvcGUuYmludXNpZCxcbiAgICAgICAgICAgICAgcGFzc3dvcmQ6ICRzY29wZS5wYXNzd29yZFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5pc2xvZ2luID0gdHJ1ZTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5mbmFtZSA9IG5hbWUudGV4dCgpO1xuICAgICAgICAgICAgJHJvb3RTY29wZS5sb2dpbiA9IHRydWU7XG4gICAgICAgICAgICAkcm9vdFNjb3BlLmxvZ2luTmFtZSA9IGxvY2FsU3RvcmFnZS5mbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgJHNjb3BlLmxvZ2luQ2xhc3MgPSAnJztcbiAgICAgICAgICAgICRzY29wZS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgICRpb25pY0hpc3RvcnkuY2xlYXJIaXN0b3J5KCk7XG4gICAgICAgICAgICAkaW9uaWNOYXZCYXJEZWxlZ2F0ZS5zaG93QmFja0J1dHRvbihmYWxzZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH0sIGhhbmRsZUVycm9yKTtcblxuICAgICAgICB2YXIgaGFuZGxlRXJyb3IgPSBmdW5jdGlvbihkYXRhLCB0ZXh0KSB7XG4gICAgICAgICAgdHlwZW9mIHRleHQgIT09IFwidW5kZWZpbmVkXCIgPyB0ZXh0IDogbnVsbDtcbiAgICAgICAgICAkc2NvcGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICRzY29wZS5sb2dpbkNsYXNzID0gJyc7XG4gICAgICAgICAgJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICAgICAgdGl0bGU6ICdPb3BzICEnLFxuICAgICAgICAgICAgdGVtcGxhdGU6IHRleHQgPyB0ZXh0IDogJ1NvbWV0aGluZyB3cm9uZyAhJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG4gIH1cbik7XG4iLCIvKipcbiAqIE15IENsYXNzIENvbnRyb2xsZXJcbiAqIEBhdXRob3IgTmF1ZmFsIDxuYXVmYWxAbWFydGFiYWthbmcudXM+XG4gKi9cbmFwcC5jb250cm9sbGVyKCdNeUNsYXNzQ29udHJvbGxlcicsXG4gIGZ1bmN0aW9uKCRzY29wZSwgQmludXNNYXlhLCAkaW9uaWNOYXZCYXJEZWxlZ2F0ZSwgJHN0YXRlLCAkbG9jYXRpb24sICRzdGF0ZVBhcmFtcywgJHRpbWVvdXQsICRyb290U2NvcGUsICRpb25pY1BsYXRmb3JtLCAkcSwgJGlvbmljUG9wdXAsICRpb25pY0xvYWRpbmcsICRodHRwKSB7XG4gICAgJHJvb3RTY29wZS5ub0hlYWRlciA9IGZhbHNlO1xuICAgICRyb290U2NvcGUubGVmdE1lbnUgPSB0cnVlO1xuICAgICRpb25pY1BsYXRmb3JtLm9uSGFyZHdhcmVCYWNrQnV0dG9uKGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICAgICRzY29wZS5jbGFzc0RhdGEgPSAodHlwZW9mIGxvY2FsU3RvcmFnZS5teUNsYXNzICE9PSBcInVuZGVmaW5lZFwiID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UubXlDbGFzcykgOiBmYWxzZSk7XG5cbiAgICB2YXIgcmVmcmVzaE15Q2xhc3MgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgdmFyIHJldHVyblJlc3BvbnNlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIHZhciBfcmVEYXRhID0gW107XG4gICAgICAgICAgJChkYXRhKS5maW5kKFwiI2N0bDAwX0NvbnRlbnRQbGFjZUhvbGRlcjFfcG5sVGVvcmkgdWwgbGlcIikuZWFjaChmdW5jdGlvbihpLCBkKSB7XG4gICAgICAgICAgICB2YXIgbmFtZSA9ICQoZCkuZmluZChcImFcIikuaHRtbCgpLFxuICAgICAgICAgICAgICByZWcgPSBuYW1lLm1hdGNoKC9eKC4qKS0oLiopIFxcKCguKilcXCkvaSk7XG4gICAgICAgICAgICBfcmVEYXRhLnB1c2goe1xuICAgICAgICAgICAgICBpbmRleEl0ZW06IGksXG4gICAgICAgICAgICAgIG5hbWU6IHJlZ1syXSxcbiAgICAgICAgICAgICAgdXJsOiAkKGQpLmZpbmQoXCJhXCIpLmF0dHIoJ2hyZWYnKSxcbiAgICAgICAgICAgICAgY29kZTogcmVnWzFdLFxuICAgICAgICAgICAgICBjbGFzc05hbWU6IHJlZ1szXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgbG9jYWxTdG9yYWdlLm15Q2xhc3MgPSBKU09OLnN0cmluZ2lmeShfcmVEYXRhKTtcbiAgICAgICAgICByZXR1cm4gX3JlRGF0YTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZih0eXBlb2YgaHR0cGNsaWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICRodHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDoyNTA1L215Y2xhc3MuaHRtbCcpXG4gICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgcmVzb2x2ZShyZXR1cm5SZXNwb25zZShkLmRhdGEpKTtcbiAgICAgICAgICB9LCByZWplY3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIEJpbnVzTWF5YS5jaGVja0xvZ2luKClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaSgnLycsICdnZXQnKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAvLyBGYWlsIHRvIHJlLWxvZ2luXG4gICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCByZS1hdXRoIHlvdXIgYWNjb3VudFwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAvLyBMb2FkIFRoZXNlIFBhZ2VcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5mcmFtZShcbiAgICAgICAgICAgICAgICAkKGQucmVzdWx0KS5maW5kKFwiLml0ZW1Db250ZW50IHVsIGxpOmVxKDApID4gYVwiKS5hdHRyKFwiaHJlZlwiKVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbWFpbiBmcmFtZVwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihjKSB7XG4gICAgICAgICAgICAgIHJlc29sdmUocmV0dXJuUmVzcG9uc2UoYy5yZXN1bHQucmVzdWx0KSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIG15IGNsYXNzXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICAkc2NvcGUuZG9SZWZyZXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICByZWZyZXNoTXlDbGFzcygpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgICAkc2NvcGUuY2xhc3NEYXRhID0gZG9uZTtcbiAgICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgICAgICB9LCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgZXJySGFuZGxlKGUpO1xuICAgICAgICB9KTtcblxuICAgICAgdmFyIGVyckhhbmRsZSA9IGZ1bmN0aW9uKG1zZykge1xuICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgJGlvbmljUG9wdXAuYWxlcnQoe1xuICAgICAgICAgIHRpdGxlOiAnT29wcyAhJyxcbiAgICAgICAgICB0ZW1wbGF0ZTogbXNnXG4gICAgICAgIH0pO1xuICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgaWYoISRzY29wZS5jbGFzc0RhdGEpIHtcbiAgICAgICRpb25pY0xvYWRpbmcuc2hvdyh7dGVtcGxhdGVVcmw6ICd2aWV3cy9tb2R1bGUvbG9hZGluZy5odG1sJyxub0JhY2tkcm9wOiB0cnVlfSk7XG4gICAgICAkc2NvcGUuZG9SZWZyZXNoKCk7XG4gICAgfVxuXG4gIH0pOyIsIi8qKlxuICogTXkgQ2xhc3MgSW5zaWRlXG4gKiBAYXV0aG9yIE5hdWZhbCA8bmF1ZmFsQG1hcnRhYmFrYW5nLnVzPlxuICovXG5hcHAuY29udHJvbGxlcignTXlDbGFzc0RldGFpbENvbnRyb2xsZXInLFxuICBmdW5jdGlvbigkc2NvcGUsIEJpbnVzTWF5YSwgJGlvbmljTmF2QmFyRGVsZWdhdGUsICRzdGF0ZSwgJGxvY2F0aW9uLCAkaHR0cCwgJGlvbmljU2Nyb2xsRGVsZWdhdGUsXG4gICAgJHN0YXRlUGFyYW1zLCAkdGltZW91dCwgJHJvb3RTY29wZSwgJGlvbmljUGxhdGZvcm0sICRxLCAkaW9uaWNQb3B1cCwgZGF0YXNldCwgJHRpbWVvdXQsICRpb25pY0xvYWRpbmcpIHtcblxuICAgICRzY29wZS5jbGFzc0RhdGEgPSAodHlwZW9mIGxvY2FsU3RvcmFnZS5teUNsYXNzICE9PSBcInVuZGVmaW5lZFwiID8gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UubXlDbGFzcykgOiBmYWxzZSk7XG4gICAgJHNjb3BlLnN0YXRlID0ge1xuICAgICAgaXNEYXRhOiBmYWxzZSxcbiAgICAgIGxvYWRpbmc6IHRydWVcbiAgICB9O1xuICAgICRzY29wZS5kYXRhID0gJHNjb3BlLmNsYXNzRGF0YVtkYXRhc2V0XTtcbiAgICAkc2NvcGUuc2hvd3BhZ2UgPSAwO1xuXG4gICAgJHNjb3BlLmxpbmtzU2V0QXNzaWdtZW50ID0gW107XG4gICAgJHNjb3BlLmxpbmtzU2V0ID0gW107XG5cbiAgICB2YXIgZ2V0Q2xhc3NEZXRhaWwgPSBmdW5jdGlvbih1cmwpIHtcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgdmFyIHJldHVyblJlc3BvbnNlID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIHZhciBkZXNjX21haW4gPSAkKGRhdGEpLmZpbmQoXCIjZGVzY19jb3Vyc2VfZGVzYyA+IHNwYW5cIikuaHRtbCgpLFxuICAgICAgICAgICAgICBkZXNjX2dyYWQgPSAkKGRhdGEpLmZpbmQoXCIjZGVzY19ncmFkX2NvbXBldGUgPiBzcGFuXCIpLmh0bWwoKSxcbiAgICAgICAgICAgICAgY291cnNlID0gW10sIFxuICAgICAgICAgICAgICBhc3NpZ21lbnQgPSBbXTtcbiAgICAgICAgICAkKGRhdGEpLmZpbmQoXCIjY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9wbmxDb250ZW50VGhlb3J5IHRhYmxlIHRib2R5IHRyXCIpLmVhY2goZnVuY3Rpb24oaSwgZCkge1xuICAgICAgICAgICAgaWYgKGkgIT09IDApIHtcbiAgICAgICAgICAgICAgY291cnNlLnB1c2goe1xuICAgICAgICAgICAgICAgIHNlc3Npb246IHBhcnNlSW50KCQoZCkuZmluZChcInRkOmVxKDApID4gc3BhblwiKS5odG1sKCkpLFxuICAgICAgICAgICAgICAgIG1vZGU6ICQoZCkuZmluZChcInRkOmVxKDEpID4gc3BhblwiKS5odG1sKCksXG4gICAgICAgICAgICAgICAgdG9waWNzOiAkKGQpLmZpbmQoXCJ0ZDplcSgyKSA+IGFcIikuaHRtbCgpLFxuICAgICAgICAgICAgICAgIGRhdGU6ICQoZCkuZmluZChcInRkOmVxKDMpID4gc3BhblwiKS5odG1sKCksXG4gICAgICAgICAgICAgICAgbGlua3M6ICQoZCkuZmluZChcInRkOmVxKDQpID4gaW5wdXRcIikuYXR0cignbmFtZScpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgICQoZGF0YSkuZmluZChcIiNjdGwwMF9Db250ZW50UGxhY2VIb2xkZXIxX3BubE1haW5Bc3NpZ25tZW50IHRhYmxlIHRib2R5IHRyXCIpLmVhY2goZnVuY3Rpb24oaSwgZCkge1xuICAgICAgICAgICAgaWYgKGkgIT09IDApIHtcbiAgICAgICAgICAgICAgYXNzaWdtZW50LnB1c2goe1xuICAgICAgICAgICAgICAgIHRlcm06ICdNYWluIEFzc2lnbWVudCcsXG4gICAgICAgICAgICAgICAgc2Vzc2lvbjogcGFyc2VJbnQoJChkKS5maW5kKFwidGRcIikuZXEoMCkudGV4dCgpKSxcbiAgICAgICAgICAgICAgICB0b3BpY3M6ICQoZCkuZmluZChcInRkXCIpLmVxKDEpLnRleHQoKSxcbiAgICAgICAgICAgICAgICB0aXRsZTogJChkKS5maW5kKFwidGRcIikuZXEoMikudGV4dCgpLFxuICAgICAgICAgICAgICAgIGRlc2M6ICQoZCkuZmluZChcInRkXCIpLmVxKDMpLnRleHQoKSxcbiAgICAgICAgICAgICAgICBkZWFkbGluZTogJChkKS5maW5kKFwidGRcIikuZXEoNCkudGV4dCgpLFxuICAgICAgICAgICAgICAgIHVwbG9hZDogJChkKS5maW5kKFwidGRcIikuZXEoNSkuZmluZChcImltZ1wiKS5sZW5ndGggPyB0cnVlIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgY2hlY2tlZDogJChkKS5maW5kKFwidGRcIikuZXEoNikuZmluZChcImltZ1wiKS5sZW5ndGggPyB0cnVlIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgbGluazogJChkKS5maW5kKFwidGRcIikuZXEoNykuZmluZChcImlucHV0OmVxKDApXCIpLmF0dHIoJ25hbWUnKVxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICAkKGRhdGEpLmZpbmQoXCIjY3RsMDBfQ29udGVudFBsYWNlSG9sZGVyMV9wbmxBZGRpdGlvbmFsQXNzaWdubWVudDIgdGFibGUgdGJvZHkgdHJcIikuZWFjaChmdW5jdGlvbihpLCBkKSB7XG4gICAgICAgICAgICBpZiAoaSAhPT0gMCkge1xuICAgICAgICAgICAgICBhc3NpZ21lbnQucHVzaCh7XG4gICAgICAgICAgICAgICAgdGVybTogJ0FkZGl0aW9uYWwgQXNzaWdtZW50JyxcbiAgICAgICAgICAgICAgICBzZXNzaW9uOiBwYXJzZUludCgkKGQpLmZpbmQoXCJ0ZFwiKS5lcSgwKS50ZXh0KCkpLFxuICAgICAgICAgICAgICAgIHRvcGljczogJChkKS5maW5kKFwidGRcIikuZXEoMSkudGV4dCgpLFxuICAgICAgICAgICAgICAgIHRpdGxlOiAkKGQpLmZpbmQoXCJ0ZFwiKS5lcSgyKS50ZXh0KCksXG4gICAgICAgICAgICAgICAgZGVzYzogJChkKS5maW5kKFwidGRcIikuZXEoMykudGV4dCgpLFxuICAgICAgICAgICAgICAgIGRlYWRsaW5lOiAkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg0KS50ZXh0KCksXG4gICAgICAgICAgICAgICAgdXBsb2FkOiAkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg1KS5maW5kKFwiaW1nXCIpLmxlbmd0aCA/IHRydWUgOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBjaGVja2VkOiAkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg2KS5maW5kKFwiaW1nXCIpLmxlbmd0aCA/IHRydWUgOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBsaW5rOiAkKGQpLmZpbmQoXCJ0ZFwiKS5lcSg3KS5maW5kKFwiaW5wdXQ6ZXEoMClcIikuYXR0cignbmFtZScpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1haW5fZGVzY3JpcHRpb246IGRlc2NfbWFpbixcbiAgICAgICAgICAgIGdyYWRfZGVzY3JpcHRpb246IGRlc2NfZ3JhZCxcbiAgICAgICAgICAgIGFzc2lnbWVudDogYXNzaWdtZW50Lmxlbmd0aCA+IDAgPyBhc3NpZ21lbnQgOiBmYWxzZSxcbiAgICAgICAgICAgIGNvdXJzZTogY291cnNlXG4gICAgICAgICAgfTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAodHlwZW9mIGh0dHBjbGllbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAkaHR0cC5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6MjUwNS9teWNsYXNzLWluc2lkZS5odG1sJylcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShyZXR1cm5SZXNwb25zZShkLmRhdGEpKTtcbiAgICAgICAgICAgIH0sIHJlamVjdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQmludXNNYXlhLmNoZWNrTG9naW4oKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiBCaW51c01heWEuYXBpKCcvJywgJ2dldCcpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIC8vIEZhaWwgdG8gcmUtbG9naW5cbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IHJlLWF1dGggeW91ciBhY2NvdW50XCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC8vIExvYWQgVGhlc2UgUGFnZVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmZyYW1lKFxuICAgICAgICAgICAgICAgICQoZC5yZXN1bHQpLmZpbmQoXCIuaXRlbUNvbnRlbnQgdWwgbGk6ZXEoMCkgPiBhXCIpLmF0dHIoXCJocmVmXCIpXG4gICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IGFjY2VzcyB0byBtYWluIGZyYW1lXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGMpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5hcGkoX2JpbWF5X2FwaV91cmwgKyAnL0xNUy8nICsgdXJsLCAnZ2V0Jywge30sIHRydWUpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbXkgY2xhc3NcIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICAgICAgICByZXNvbHZlKHJldHVyblJlc3BvbnNlKGQucmVzdWx0KSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIGNvdXJzZSBwYWdlXCIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBpZiAodHlwZW9mICRzY29wZS5jbGFzc0RhdGFbZGF0YXNldF0uZGV0YWlsID09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGdldENsYXNzRGV0YWlsKCRzY29wZS5jbGFzc0RhdGFbZGF0YXNldF0udXJsKVxuICAgICAgICAudGhlbihmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgJHNjb3BlLmNsYXNzRGF0YVtkYXRhc2V0XS5kZXRhaWwgPSBkYXRhO1xuICAgICAgICAgIGxvY2FsU3RvcmFnZS5teUNsYXNzID0gSlNPTi5zdHJpbmdpZnkoJHNjb3BlLmNsYXNzRGF0YSk7XG4gICAgICAgICAgJHNjb3BlLiRhcHBseUFzeW5jKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgJHNjb3BlLnN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICRzY29wZS5zdGF0ZS5pc0RhdGEgPSAkc2NvcGUuY2xhc3NEYXRhW2RhdGFzZXRdLmRldGFpbDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdCgnc2Nyb2xsLnJlZnJlc2hDb21wbGV0ZScpO1xuICAgICAgICB9LCBlcnJIYW5kbGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUuc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgJHNjb3BlLnN0YXRlLmlzRGF0YSA9ICRzY29wZS5jbGFzc0RhdGFbZGF0YXNldF0uZGV0YWlsO1xuICAgIH1cblxuICAgICRzY29wZS5zd2l0Y2hUYWIgPSBmdW5jdGlvbihzdGF0ZSkge1xuICAgICAgJHNjb3BlLnNob3dwYWdlID0gc3RhdGU7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAkaW9uaWNTY3JvbGxEZWxlZ2F0ZS5yZXNpemUoKTtcbiAgICAgIH0sIDEwMCk7XG4gICAgfTtcblxuICAgIHZhciBlcnJIYW5kbGUgPSBmdW5jdGlvbihtc2cpIHtcbiAgICAgICRpb25pY1BvcHVwLmFsZXJ0KHtcbiAgICAgICAgdGl0bGU6ICdPb3BzICEnLFxuICAgICAgICB0ZW1wbGF0ZTogbXNnXG4gICAgICB9KTtcbiAgICAgICRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XG4gICAgfTtcblxuICAgICRzY29wZS5kb3dubG9hZENvdXJzZSA9IGZ1bmN0aW9uKGluZGV4LCBsaW5rcykge1xuICAgICAgJHNjb3BlLmxpbmtzU2V0W2luZGV4XSA9IHtpc0xvYWRpbmc6IHRydWV9O1xuICAgICAgZG93bmxvYWRNYXRlcmlhbChsaW5rcylcbiAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgd2luZG93Lm9wZW4oZCwgJ19zeXN0ZW0nKTtcbiAgICAgICAgJHNjb3BlLmxpbmtzU2V0W2luZGV4XSA9IHtpc0xvYWRpbmc6IGZhbHNlfTsgIFxuICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICRzY29wZS5saW5rc1NldFtpbmRleF0gPSB7aXNMb2FkaW5nOiBmYWxzZX07XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmRvd25sb2FkQXNzaWdtZW50ID0gZnVuY3Rpb24oaW5kZXgsIGxpbmtzKSB7XG4gICAgICAkc2NvcGUubGlua3NTZXRBc3NpZ21lbnRbaW5kZXhdID0ge2lzTG9hZGluZzogdHJ1ZX07XG4gICAgICBkb3dubG9hZE1hdGVyaWFsKGxpbmtzKVxuICAgICAgLnRoZW4oZnVuY3Rpb24oZCkge1xuICAgICAgICB3aW5kb3cub3BlbihkLCAnX3N5c3RlbScpO1xuICAgICAgICAkc2NvcGUubGlua3NTZXRBc3NpZ21lbnRbaW5kZXhdID0ge2lzTG9hZGluZzogZmFsc2V9O1xuICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICRzY29wZS5saW5rc1NldEFzc2lnbWVudFtpbmRleF0gPSB7aXNMb2FkaW5nOiBmYWxzZX07XG4gICAgICB9KTtcbiAgICB9O1xuXG5cbiAgICB2YXIgZG93bmxvYWRNYXRlcmlhbCA9IGZ1bmN0aW9uKGxpbmtzKVxuICAgIHtcbiAgICAgIC8vY29uc29sZS5sb2coJHNjb3BlLmNsYXNzRGF0YVtkYXRhc2V0XS51cmwsIGxpbmtzKTtcbiAgICAgIHJldHVybiAkcShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgQmludXNNYXlhLmNoZWNrTG9naW4oKVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5hcGkoJy8nLCAnZ2V0Jyk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvLyBGYWlsIHRvIHJlLWxvZ2luXG4gICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgcmUtYXV0aCB5b3VyIGFjY291bnRcIik7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAvLyBMb2FkIFRoZXNlIFBhZ2VcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmZyYW1lKFxuICAgICAgICAgICAgICAkKGQucmVzdWx0KS5maW5kKFwiLml0ZW1Db250ZW50IHVsIGxpOmVxKDApID4gYVwiKS5hdHRyKFwiaHJlZlwiKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbWFpbiBmcmFtZVwiKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGMpIHtcbiAgICAgICAgICAgIHJldHVybiBCaW51c01heWEuZG93bmxvYWQoJHNjb3BlLmNsYXNzRGF0YVtkYXRhc2V0XS51cmwsIGxpbmtzKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAkcS5yZWplY3QoXCJjYW4ndCBhY2Nlc3MgdG8gbXkgY2xhc3NcIik7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICByZXNvbHZlKGQuaGVhZGVyLkxvY2F0aW9uKTtcbiAgICAgICAgICB9LCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLnJlZnJlc2ggPSBmdW5jdGlvbigpIHtcbiAgICAgIFxuICAgICAgJGlvbmljTG9hZGluZy5zaG93KHt0ZW1wbGF0ZTogJzxpb24tc3Bpbm5lciBpY29uPVwiYW5kcm9pZFwiIGNsYXNzPVwib3ZlcmxheS1zcGlubmVyXCI+PC9pb24tc3Bpbm5lcj4gTG9hZGluZy4uLid9KTtcblxuICAgICAgZ2V0Q2xhc3NEZXRhaWwoJHNjb3BlLmNsYXNzRGF0YVtkYXRhc2V0XS51cmwpXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICAkc2NvcGUuY2xhc3NEYXRhW2RhdGFzZXRdLmRldGFpbCA9IGRhdGE7XG4gICAgICAgICAgbG9jYWxTdG9yYWdlLm15Q2xhc3MgPSBKU09OLnN0cmluZ2lmeSgkc2NvcGUuY2xhc3NEYXRhKTtcbiAgICAgICAgICAkc2NvcGUuJGFwcGx5QXN5bmMoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAkc2NvcGUuc3RhdGUubG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgJHNjb3BlLnN0YXRlLmlzRGF0YSA9ICRzY29wZS5jbGFzc0RhdGFbZGF0YXNldF0uZGV0YWlsO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgICRpb25pY0xvYWRpbmcuaGlkZSgpO1xuICAgICAgICAgICRpb25pY1Njcm9sbERlbGVnYXRlLnJlc2l6ZSgpO1xuICAgICAgICB9LCBmdW5jdGlvbihtc2cpIHtcbiAgICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgICBlcnJIYW5kbGUobXNnKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuXG4gIH0pO1xuIiwiLyoqXG4gKiBTY2hlZHVsZSBDb250cm9sbGVyXG4gKiBAYXV0aG9yIE5hdWZhbCA8bmF1ZmFsQG1hcnRhYmFrYW5nLnVzPlxuICovXG5hcHAuY29udHJvbGxlcignU2NoZWR1bGVDb250cm9sbGVyJyxcbiAgZnVuY3Rpb24oJHNjb3BlLCAkaW9uaWNQb3B1cCwgJHRpbWVvdXQsICRpb25pY0hpc3RvcnksICRyb290U2NvcGUsICRpb25pY1BsYXRmb3JtLCBCaW51c01heWEsICRxLCAkaHR0cCwgJGlvbmljTG9hZGluZykge1xuXG4gICAgJHJvb3RTY29wZS5ub0hlYWRlciA9IGZhbHNlO1xuICAgICRyb290U2NvcGUubGVmdE1lbnUgPSB0cnVlO1xuICAgICRpb25pY1BsYXRmb3JtLm9uSGFyZHdhcmVCYWNrQnV0dG9uKGZ1bmN0aW9uKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICAgICRzY29wZS5nZXRTdGF0ZSA9IGZ1bmN0aW9uKGQpIHtcbiAgICAgIHZhciB0b2RheSA9IG1vbWVudCgpO1xuICAgICAgLy90b2RheVxuICAgICAgaWYgKG1vbWVudChkKS5pc1NhbWUodG9kYXksICdkYXknKSkge1xuICAgICAgICByZXR1cm4gJ3RvZGF5JztcbiAgICAgIH0gZWxzZVxuICAgICAgLy90b21vcnJvd1xuICAgICAgaWYgKG1vbWVudChkKS5pc1NhbWUodG9kYXkuYWRkKDEsICdkJyksICdkYXknKSkge1xuICAgICAgICByZXR1cm4gJ3RvbW9ycm93JztcbiAgICAgIH0gZWxzZVxuICAgICAgLy9sYXN0ZWRcbiAgICAgIGlmIChtb21lbnQoZCkgPCB0b2RheSkge1xuICAgICAgICByZXR1cm4gJ2NvbXBsZXRvJztcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgJHNjb3BlLmdldENvdXJzZVN0YXRlID0gZnVuY3Rpb24oZCwgbSkge1xuICAgICAgdmFyIG5vdyA9IG1vbWVudCgpLFxuICAgICAgICBnZXRNb21lbnQgPSBudWxsO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIGdldExhc3QgPSBtLnNwbGl0KFwiLVwiKVsxXS5zcGxpdChcIjpcIiksXG4gICAgICAgICAgZ2V0SG91ciA9IHBhcnNlSW50KGdldExhc3RbMF0pLFxuICAgICAgICAgIGdldE1pbnV0ZSA9IHBhcnNlSW50KGdldExhc3RbMV0pO1xuXG4gICAgICAgIGdldE1vbWVudCA9IG1vbWVudChkKS5ob3VyKGdldEhvdXIpLm1pbnV0ZShnZXRNaW51dGUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBnZXRNb21lbnQgPSBtb21lbnQoZCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChnZXRNb21lbnQgPCBub3cpIHtcbiAgICAgICAgcmV0dXJuICdjb21wbGV0byc7XG4gICAgICB9XG4gICAgfTtcblxuICAgICRzY29wZS5pc1NjaGVkdWxlID0gZmFsc2U7XG4gICAgJHNjb3BlLnNjaGVkdWxlID0gW107XG5cbiAgICB2YXIgdG9Kc29uID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgdmFyIGhhc2lsID0gW107XG4gICAgICAkKGRhdGEpLmZpbmQoJ3RyJykuZWFjaChmdW5jdGlvbihpLCBhKSB7XG4gICAgICAgIHZhciBodCA9ICQodGhpcykuZmluZCgndGQnKTtcbiAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgdmFyIG1hdGNoID0gaHQuZXEoMykuaHRtbCgpLm1hdGNoKC8oLiopLSguKikvKTtcbiAgICAgICAgICBoYXNpbC5wdXNoKHtcbiAgICAgICAgICAgIGRhdGU6IGh0LmVxKDApLmh0bWwoKSxcbiAgICAgICAgICAgIHRpbWU6IGh0LmVxKDEpLmh0bWwoKSxcbiAgICAgICAgICAgIHN0YXRlOiBodC5lcSgyKS5odG1sKCksXG4gICAgICAgICAgICBjb3Vyc2U6IG1hdGNoWzJdLFxuICAgICAgICAgICAgY29kZTogbWF0Y2hbMV0sXG4gICAgICAgICAgICBteUNsYXNzOiBodC5lcSg1KS5odG1sKCksXG4gICAgICAgICAgICByb29tOiBodC5lcSg2KS5odG1sKCksXG4gICAgICAgICAgICBidWlsZGluZzogaHQuZXEoNykuaHRtbCgpXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGhhc2lsO1xuICAgIH07XG5cbiAgICB2YXIgcmVmcmVzaEphZHdhbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICRxKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICB2YXIgcmV0dXJuUmVzcG9uc2UgPSBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgdmFyIF9zY2hlZHVsZSA9ICQoZGF0YSkuZmluZChcInRhYmxlXCIpLFxuICAgICAgICAgICAgICB0b2RheSA9IHRvSnNvbihfc2NoZWR1bGUuZXEoMCkuaHRtbCgpKSxcbiAgICAgICAgICAgICAgbmV4dCA9IHRvSnNvbihfc2NoZWR1bGUuZXEoMSkuaHRtbCgpKSxcbiAgICAgICAgICAgICAgc2tlZHVsID0gdG9kYXkuY29uY2F0KG5leHQpLFxuICAgICAgICAgICAgICBqYWR3YWwgPSBCaW51c01heWEuZ3JvdXBpbmcoc2tlZHVsKTtcbiAgICAgICAgICAgIGlmKGphZHdhbC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5qYWR3YWwgPSBKU09OLnN0cmluZ2lmeShqYWR3YWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmxhc3RVcGRhdGUgPSBtb21lbnQoKS5mb3JtYXQoJ0QgTU1NTSBZWVlZIGg6bW06c3MnKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIGphZHdhbDogamFkd2FsLCBsYXN0VXBkYXRlOiBsb2NhbFN0b3JhZ2UubGFzdFVwZGF0ZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZih0eXBlb2YgaHR0cGNsaWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICRodHRwLmdldCgnaHR0cDovL2xvY2FsaG9zdDoyNTA1L3NjaGVkdWxlLmh0bWwnKVxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJlc29sdmUocmV0dXJuUmVzcG9uc2UoZC5kYXRhKSk7XG4gICAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBCaW51c01heWEuY2hlY2tMb2dpbigpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIEJpbnVzTWF5YS5hcGkoJy8nLCAnZ2V0Jyk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgLy8gRmFpbCB0byByZS1sb2dpblxuICAgICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgcmUtYXV0aCB5b3VyIGFjY291bnRcIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLy8gTG9hZCBUaGVzZSBQYWdlXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICAgIHJldHVybiBCaW51c01heWEuZnJhbWUoXG4gICAgICAgICAgICAgICAgJChkLnJlc3VsdCkuZmluZChcIi5pdGVtQ29udGVudCB1bCBsaTplcSgwKSA+IGFcIikuYXR0cihcImhyZWZcIilcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICByZXR1cm4gJHEucmVqZWN0KFwiY2FuJ3QgYWNjZXNzIHRvIG1haW4gZnJhbWVcIik7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oYykge1xuICAgICAgICAgICAgICB2YXIgZGF0YSA9IHt9LFxuICAgICAgICAgICAgICAgIGQgPSBjLnJlc3VsdDtcbiAgICAgICAgICAgICAgJCgkKGQucmVzdWx0KS5zZXJpYWxpemVBcnJheSgpKS5lYWNoKGZ1bmN0aW9uKGksIGQpIHtcbiAgICAgICAgICAgICAgICBkYXRhW2QubmFtZV0gPSBkLnZhbHVlO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgZGF0YS5fX0VWRU5UVEFSR0VUID0gJ2N0bDAwJENvbnRlbnRQbGFjZUhvbGRlcjEkYnRuU2NoZWR1bGUnO1xuICAgICAgICAgICAgICByZXR1cm4gQmludXNNYXlhLmFwaShfYmltYXlfYXBpX3VybCArICcvTE1TL015Q2xhc3MuYXNweCcsICdwb3N0JywgZGF0YSwgdHJ1ZSk7XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICRxLnJlamVjdChcImNhbid0IGFjY2VzcyB0byBzY2hlZHVsZSBwYWdlXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShyZXR1cm5SZXNwb25zZShkLnJlc3VsdCkpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgICRzY29wZS5kb1JlZnJlc2ggPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlZnJlc2hKYWR3YWwoKVxuICAgICAgLnRoZW4oZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAkaW9uaWNMb2FkaW5nLmhpZGUoKTtcbiAgICAgICAgJHNjb3BlLiRicm9hZGNhc3QoJ3Njcm9sbC5yZWZyZXNoQ29tcGxldGUnKTtcbiAgICAgICAgJHJvb3RTY29wZS5nZXRMYXN0VXBkYXRlKCk7XG4gICAgICAgICRzY29wZS5pc1NjaGVkdWxlID0gdHJ1ZTtcbiAgICAgICAgJHNjb3BlLnNjaGVkdWxlID0gZGF0YS5qYWR3YWw7XG4gICAgICB9LCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGVyckhhbmRsZShlKTtcbiAgICAgIH0pO1xuXG4gICAgICB2YXIgZXJySGFuZGxlID0gZnVuY3Rpb24obXNnKSB7XG4gICAgICAgICRpb25pY0xvYWRpbmcuaGlkZSgpO1xuICAgICAgICAkaW9uaWNQb3B1cC5hbGVydCh7XG4gICAgICAgICAgdGl0bGU6ICdPb3BzICEnLFxuICAgICAgICAgIHRlbXBsYXRlOiBtc2dcbiAgICAgICAgfSk7XG4gICAgICAgICRzY29wZS4kYnJvYWRjYXN0KCdzY3JvbGwucmVmcmVzaENvbXBsZXRlJyk7XG4gICAgICB9O1xuICAgIH07XG5cbiAgICBpZiAobG9jYWxTdG9yYWdlLmphZHdhbCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgaWYgKEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmphZHdhbCkubGVuZ3RoID4gMCkge1xuICAgICAgICAgICRzY29wZS5pc1NjaGVkdWxlID0gdHJ1ZTtcbiAgICAgICAgICAkc2NvcGUuc2NoZWR1bGUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5qYWR3YWwpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7XG5cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgJGlvbmljUGxhdGZvcm0ucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICRpb25pY0xvYWRpbmcuc2hvdyh7dGVtcGxhdGVVcmw6ICd2aWV3cy9tb2R1bGUvbG9hZGluZy5odG1sJyxub0JhY2tkcm9wOiB0cnVlfSk7XG4gICAgICAgICRzY29wZS5kb1JlZnJlc2goKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICB9KTtcbiIsIi8qKlxuICogU2VydmljZXMgQ29udHJvbGxlclxuICogQGF1dGhvciBQZWRveCA8bmF1ZmFsQG1hcnRhYmFrYW5nLnVzPlxuICovXG5hcHAuY29udHJvbGxlcignU2VydmljZXNDb250cm9sbGVyJywgWyckc2NvcGUnLCAnQmludXNNYXlhJywgJyRpb25pY05hdkJhckRlbGVnYXRlJyxcbmZ1bmN0aW9uKCRzY29wZSwgQmludXNNYXlhLCAkaW9uaWNOYXZCYXJEZWxlZ2F0ZSkge1xuXG59XSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
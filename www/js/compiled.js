var view_path="views/",pcolor="#1C536F",_bimay_url="http://binusmaya.binus.ac.id",_bimay_api_url="http://apps.binusmaya.binus.ac.id",app=angular.module("BinusMaya",["ionic","listRoute","BinusMayaFactory"]).run(["$ionicPlatform","$rootScope","$ionicHistory","$ionicNavBarDelegate","BinusMaya",function(t,e,a,n,o){e.login="undefined"==typeof localStorage.islogin?!1:localStorage.islogin,e.leftMenu=!1,e.loginName="undefined"==typeof localStorage.fname?null:localStorage.fname.toLowerCase(),e.profileImage="undefined"==typeof localStorage.profileImage?!1:localStorage.profileImage,delete localStorage.cookie,delete localStorage.templogin,t.ready(function(){e.onLoadStyle={opacity:1},window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&StatusBar.styleDefault()}),e.getLastUpdate=function(){e.lastUpdate="undefined"==typeof localStorage.lastUpdate?"Whatever":localStorage.lastUpdate},e.getLastUpdate(),e.logout=function(){localStorage.clear(),window.location.hash="#/",a.clearHistory(),n.showBackButton(!1),location.reload()},e.getProfileImage=function(){o.getProfileImage(function(t){localStorage.profileImage=t,e.profileImage=t},function(){})},window.location.hash=e.login?"/schedule":"/"}]).config(["$ionicConfigProvider",function(t){t.views.forwardCache(!1),t.views.maxCache(0)}]);angular.module("BinusMayaFactory",[]).factory("BinusMaya",["$q","$ionicPopup",function(t,e){return{_bimay_url:"http://binusmaya.binus.ac.id",_bimay_api_url:"http://apps.binusmaya.binus.ac.id",headers:function(){var t=this;return{Cookie:localStorage.cookie?localStorage.cookie:null,Origin:t._bimay_url,Referer:t._bimay_url}},checkLogin:function(){var e=this,a=JSON.parse(localStorage.loginId);return t(function(t,n){return localStorage.templogin!==!0?e.api("/","get").then(function(t){200!==t.code&&n(t);var o={};return $($(t.result).serializeArray()).each(function(t,e){o[e.name]=e.value}),o.txtUserId=a.binusid,o.txtPassword=a.password,o.btnLogin="Log In ",e.api("/","post",o)},n).then(function(){localStorage.templogin=!0,t(!0)},n):(t(!0),void 0)})},api:function(e,a,n,o){var r=this;return void 0===localStorage.cookie?r._getCookie().then(function(){return r.api(e,a,n)}):t(function(t,i){"get"===a?httpclient.get(o?e:r._bimay_url+e,t,i,{headers:r.headers()}):httpclient.post(o?e:r._bimay_url+e,n,t,i,{headers:r.headers()})})},frame:function(e){var a=this,n="";return t(function(t,o){return a.api(e,"get").then(function(t){return a.api($(t.result).find("#ctl00_cp1_ifrApp").attr("src"),"get")},o).then(function(t){return n=$(t.result).find("#ifrApp").attr("src"),a.api(n,"get",{},!0)},o).then(function(e){t({url:n,result:e})},o)})},_getCookie:function(){var e=this;return t(function(t,a){httpclient.get(e._bimay_url,function(e){200==e.code?(localStorage.cookie=e.header["Set-Cookie"],t(!0)):a(e)},t)})},promptPassword:function(t,a){a.promptPass={};var n=e.show({template:'<p ng-show="promptPass.error">Incorrect Password</p><input type="password" class="promptPass-form" ng-model="promptPass.password">',title:"Enter Binusmaya Password",subTitle:"Please enter binusmaya password to access this page",scope:a,buttons:[{text:"Cancel",onTap:function(){window.location.hash="#/"+t,n.close()}},{text:"<b>Enter</b>",type:"button-positive",onTap:function(t){var e=JSON.parse(localStorage.loginId).password;return e==a.promptPass.password?(a.promptPass={},a.isAllow=!0,!0):(a.promptPass.error=!0,a.promptPass.password="",t.preventDefault(),void 0)}}]})},_requestError:function(){},grouping:function(t){if(t.length<=0)return[];var e=[],a="",n=-1,o=0;return t.forEach(function(t){a==t.date?(e[n].data[o]=t,o++):(o=1,n++,a=t.date,e[n]={date:t.date,data:[]},e[n].data[0]=t)}),e}}}]),angular.module("listRoute",[]).config(["$stateProvider","$urlRouterProvider",function(t,e){t.state("index",{url:"/",views:{"main-view":{templateUrl:view_path+"login.html"}}}).state("schedule",{url:"/schedule",views:{"main-view":{templateUrl:view_path+"schedule.html",controller:"ScheduleController"}}}).state("about",{url:"/about",views:{"main-view":{templateUrl:view_path+"about.html"}}}).state("forum",{url:"/forum",views:{"main-view":{templateUrl:view_path+"forum.html",controller:"ForumController"}}}).state("services",{url:"/services",views:{"main-view":{templateUrl:view_path+"services/index.html",controller:"ServicesController"}}}).state("myclass",{url:"/myclass",views:{"main-view":{templateUrl:view_path+"myclass.html",controller:"MyClassController"}}}).state("myclassDetail",{url:"/myclass-detail/:code",resolve:{dataset:["$q","$stateParams","$location",function(t,e,a){var n=!1,o=t.defer(),r="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1;for(var i in r)r[i].code==e.code&&(n=i);return n?o.resolve(n):a.path("/myclass").replace(),o.promise}]},views:{"main-view":{templateUrl:view_path+"myclassInside.html",controller:"MyClassDetailController"}}}).state("examSchedule",{url:"/exam-schedule",views:{"main-view":{templateUrl:view_path+"services/exam-schedule.html",controller:"ExamScheduleController"}}}).state("examScore",{url:"/exam-score",views:{"main-view":{templateUrl:view_path+"services/exam-score.html",controller:"ExamScoreController"}}}).state("financeStatus",{url:"/finance-status",views:{"main-view":{templateUrl:view_path+"services/billing.html",controller:"FinanceController"}}}).state("absence",{url:"/absence",views:{"main-view":{templateUrl:view_path+"services/absence.html",controller:"AbsenceController"}}}).state("coming",{url:"/coming",views:{"main-view":{templateUrl:view_path+"coming.html"}}}),e.otherwise("/coming")}]),app.controller("FinanceController",["$scope","BinusMaya","$ionicPopup","$q","$http",function(t,e,a,n,o){t.isAllow=!1,t.doRefresh=function(){r().then(function(e){t.$applyAsync(function(){t.financeList=e,t.$broadcast("scroll.refreshComplete")})},function(e){i(e),t.$broadcast("scroll.refreshComplete")})},t.toMoney=function(t){try{return t.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g,"$1,")}catch(e){return 0}};var r=function(){return n(function(t,a){var n=function(t){var a=0;try{a=parseInt($(t).find("table:eq(0) tr td").html().match(/[0-9]+/)[0])}catch(n){}var o=[];$(t).find("table#rptTable tr").each(function(t){var e=$(this).find("td");t>0&&o.push({date:e.eq(1).html(),title:e.eq(2).html(),term:e.eq(3).html(),due:e.eq(4).html(),charge:1==isNaN(parseInt(e.eq(5).html()))?0:parseInt(e.eq(5).html()),payment:1==isNaN(parseInt(e.eq(6).html()))?0:parseInt(e.eq(6).html().match(/[0-9]+/)),refund:1==isNaN(parseInt(e.eq(7).html()))?0:parseInt(e.eq(7).html())})});var r={data:e.grouping(o),billing:a,lastUpdate:moment().format("D MMMM YYYY h:mm:ss")};return localStorage.finance=JSON.stringify(r),r};"undefined"==typeof httpclient?o.get("http://localhost:2505/finance.html").then(function(e){t(n(e.data))},a):e.checkLogin().then(function(){return e.api("/","get")},function(){a("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(3) > a").attr("href"))},function(){a("can't access to main frame")}).then(function(){return e.api($("#ctl00_cpContent_rptMainMenuStudent_ctl06_linkMenuStudent").attr("href"),"get",{},!0)},function(){a("can't access to main frame")}).then(function(){return e.api($("#ctl00_cpContent_rptSubMenu_ctl03_linkSubMenu").attr("href"),"get",{},!0)},function(){a("can't access to main frame")}).then(function(e){t(n(e.result))},function(){a("can't access to main frame")})})};t.financeList=!1,"undefined"!=typeof localStorage.finance&&(t.financeList=JSON.parse(localStorage.finance));var i=function(e){a.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")};e.promptPassword("services",t)}]),app.controller("LoginController",["$scope","$ionicPopup","$timeout","$ionicHistory","$ionicNavBarDelegate","$rootScope","BinusMaya",function(t,e,a,n,o,r,i){r.noHeader=!0,o.showBar(!1),t.loading=!1,t.loginClass="",n.nextViewOptions({disableBack:!0}),t.submit=function(){if(t.binusid&&t.password){t.loginClass="on-loading",t.loading=!0,i.api("/","get").then(function(e){200!==e.code&&a(e);var n={};return $($(e.result).serializeArray()).each(function(t,e){n[e.name]=e.value}),n.txtUserId=t.binusid,n.txtPassword=t.password,n.btnLogin="Log In ",i.api("/","post",n)},a).then(function(e){var i=$(e.result).find("#content #topbar .right strong");200!==e.code&&a(e),i.length<=0?a(e,$(e.result).find("#lblError").text()):(t.loading=!1,t.loginClass="",localStorage.loginId=JSON.stringify({binusid:t.binusid,password:t.password}),localStorage.islogin=!0,localStorage.fname=i.text(),r.login=!0,r.loginName=localStorage.fname.toLowerCase(),t.loginClass="",t.loading=!1,window.location.hash="#/schedule",n.clearHistory(),o.showBackButton(!1))},a);var a=function(a,n){t.loading=!1,t.loginClass="",e.alert({title:"Oops !",template:n?n:"Something wrong !"})}}else e.alert({title:"Oops !",template:"Please Input Binusian ID and Password"})}}]),app.controller("MyClassController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup",function(t,e,a,n,o,r,i,l,s,c,u){l.noHeader=!1,l.leftMenu=!0,s.onHardwareBackButton(function(t){t.preventDefault()}),t.classData="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1;var p=function(){return c(function(t,a){e.checkLogin().then(function(){return e.api("/","get")},function(){a("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){a("can't access to main frame")}).then(function(e){var a=[];$(e.result.result).find("#ctl00_ContentPlaceHolder1_pnlTeori ul li").each(function(t,e){var n=$(e).find("a").html(),o=n.match(/^(.*)-(.*) \((.*)\)/i);a.push({indexItem:t,name:o[2],url:$(e).find("a").attr("href"),code:o[1],className:o[3]})}),localStorage.myClass=JSON.stringify(a),t(a)},function(){a("can't access to my class")})})};t.doRefresh=function(){p().then(function(a){a.length>0?t.classData=a:e("You don't have any class"),t.$broadcast("scroll.refreshComplete")},e);var e=function(e){u.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}}}]),app.controller("MyClassDetailController",["$scope","BinusMaya","$ionicNavBarDelegate","$state","$location","$stateParams","$timeout","$rootScope","$ionicPlatform","$q","$ionicPopup","dataset",function(t,e,a,n,o,r,i,l,s,c,u,p){t.classData="undefined"!=typeof localStorage.myClass?JSON.parse(localStorage.myClass):!1,t.state={isData:!1,loading:!0},t.data=t.classData[p],t.isPageTopic=!1;var f=function(t){return c(function(a,n){e.checkLogin().then(function(){return e.api("/","get")},function(){n("can't re-auth your account")}).then(function(t){return e.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){n("can't access to main frame")}).then(function(){return e.api(_bimay_api_url+"/LMS/"+t,"get",{},!0)},function(){n("can't access to my class")}).then(function(t){var e=t.result,n=$(e).find("#desc_course_desc > span").html(),o=$(e).find("#desc_grad_compete > span").html(),r=[];$(e).find("#ctl00_ContentPlaceHolder1_pnlContentTheory table tbody tr").each(function(t,e){0!==t&&r.push({session:parseInt($(e).find("td:eq(0) > span").html()),mode:$(e).find("td:eq(1) > span").html(),topics:$(e).find("td:eq(2) > a").html(),date:$(e).find("td:eq(3) > span").html(),links:$(e).find("td:eq(4) > input").attr("name")})});var i={main_description:n,grad_description:o,course:r};a(i)},function(){n("can't access to course page")})})};"undefined"==typeof t.classData[p].detail?f(t.classData[p].url).then(function(e){t.classData[p].detail=e,localStorage.myClass=JSON.stringify(t.classData),t.$applyAsync(function(){t.state.loading=!1,t.state.isData=t.classData[p].detail}),t.$broadcast("scroll.refreshComplete")},d):(t.state.loading=!1,t.state.isData=t.classData[p].detail),t.isPageTopic===!1?(t.infoTab="active",t.topicsTab=""):(t.infoTab="",t.topicsTab="active"),t.switchTab=function(e){0===e&&(t.isPageTopic=!1,t.infoTab="active",t.topicsTab=""),1===e&&(t.isPageTopic=!0,t.infoTab="",t.topicsTab="active")};var d=function(e){u.alert({title:"Oops !",template:e}),t.$broadcast("scroll.refreshComplete")}}]),app.controller("ScheduleController",["$scope","$ionicPopup","$timeout","$ionicHistory","$rootScope","$ionicPlatform","BinusMaya","$q","$http",function(t,e,a,n,o,r,i,l,s){if(o.noHeader=!1,o.leftMenu=!0,r.onHardwareBackButton(function(t){t.preventDefault()}),t.getState=function(t){var e=moment();return moment(t).isSame(e,"day")?"today":moment(t).isSame(e.add(1,"d"),"day")?"tomorrow":moment(t)<e?"completo":void 0},t.getCourseState=function(t,e){var a=moment(),n=null;try{var o=e.split("-")[1].split(":"),r=parseInt(o[0]),i=parseInt(o[1]);n=moment(t).hour(r).minute(i)}catch(l){n=moment(t)}return a>n?"completo":void 0},t.isSchedule=!1,t.schedule=[],localStorage.jadwal)try{JSON.parse(localStorage.jadwal).length>0&&(t.isSchedule=!0,t.schedule=JSON.parse(localStorage.jadwal))}catch(c){}var u=function(t){var e=[];return $(t).find("tr").each(function(t){var a=$(this).find("td");if(t>0){var n=a.eq(3).html().match(/(.*)-(.*)/);e.push({date:a.eq(0).html(),time:a.eq(1).html(),state:a.eq(2).html(),course:n[2],code:n[1],myClass:a.eq(5).html(),room:a.eq(6).html(),building:a.eq(7).html()})}}),e},p=function(){return l(function(t,e){var a=function(t){var e=$(t).find("table"),a=u(e.eq(0).html()),n=u(e.eq(1).html()),o=a.concat(n);return localStorage.jadwal=JSON.stringify(i.grouping(o)),localStorage.lastUpdate=moment().format("D MMMM YYYY h:mm:ss"),{jadwal:JSON.parse(localStorage.jadwal),lastUpdate:localStorage.lastUpdate}};"undefined"==typeof httpclient?s.get("http://localhost:2505/schedule.html").then(function(e){t(a(e.data))},e):i.checkLogin().then(function(){return i.api("/","get")},function(){e("can't re-auth your account")}).then(function(t){return i.frame($(t.result).find(".itemContent ul li:eq(0) > a").attr("href"))},function(){e("can't access to main frame")}).then(function(t){var e={},a=t.result;return $($(a.result).serializeArray()).each(function(t,a){e[a.name]=a.value}),e.__EVENTTARGET="ctl00$ContentPlaceHolder1$btnSchedule",i.api(_bimay_api_url+"/LMS/MyClass.aspx","post",e,!0)},function(){e("can't access frame")}).then(function(e){t(a(e.result))},function(){e("can't access schedule page")})})};t.doRefresh=function(){p().then(function(e){t.$broadcast("scroll.refreshComplete"),o.getLastUpdate(),e.jadwal.length>0?(t.isSchedule=!0,t.schedule=e.jadwal):a("No Schedule found")},a);var a=function(a){e.alert({title:"Oops !",template:a}),t.$broadcast("scroll.refreshComplete")}}}]),app.controller("ServicesController",["$scope","BinusMaya","$ionicNavBarDelegate",function(){}]);
//# sourceMappingURL=data:application/json;base64,